<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="7:Ch8_Dimmer_181C.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7efa0c50"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7ef51930"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7ef51930"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7ef50eb8"/></to>
    </wire>
    <wire loc="8:Ch8_Dimmer_181C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ee52c90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ea75a40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7ea75a40"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7ea63848"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="9:Ch8_Dimmer_181C.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7ee31e78"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ed038c8"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7ed038c8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ecf0570"/></to>
    </wire>
    <wire loc="12:Ch8_Dimmer_181C.nc">
      <from><interface-ref name="Read_Humi" scoped="" ref="0x7ee20618"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x7e6264b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Humidity" scoped="" ref="0x7e6264b0"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x7dbf1850"/></to>
    </wire>
    <wire loc="13:Ch8_Dimmer_181C.nc">
      <from><interface-ref name="Read_Temp" scoped="" ref="0x7ee23200"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x7e8338d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Temperature" scoped="" ref="0x7e8338d8"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x7dbf3c70"/></to>
    </wire>
    <wire loc="14:Ch8_Dimmer_181C.nc">
      <from><interface-ref name="Read_Photo" scoped="" ref="0x7ee23db8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7e618ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x7e618ac8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7db4dc40"/></to>
    </wire>
    <wire loc="15:Ch8_Dimmer_181C.nc">
      <from><interface-ref name="Read_Ultrared" scoped="" ref="0x7ee22980"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7e4d2990"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x7e4d2990"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7daf7448"/></to>
    </wire>
    <wire loc="16:Ch8_Dimmer_181C.nc">
      <from><interface-ref name="Read_Voltage" scoped="" ref="0x7ee125a0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7e4b99d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x7e4b99d8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7dae5770"/></to>
    </wire>
    <wire loc="19:Ch8_Dimmer_181C.nc">
      <from><interface-ref name="CommControl" scoped="" ref="0x7ee00500"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7e49bc50"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/platforms/homenet/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7e49bc50"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7e472878"/></to>
    </wire>
    <wire loc="20:Ch8_Dimmer_181C.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7ed73188"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7def93b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x7def93b8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7da07118"/></to>
    </wire>
    <wire loc="21:Ch8_Dimmer_181C.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7ed63758"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7de9eb38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x7de9eb38"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7e48bdf8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7ed94078"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="24:Ch8_Dimmer_181C.nc">
      <from><interface-ref name="dimmer" scoped="" ref="0x7ed60078"/></from>
      <to><interface-ref name="dimmer" scoped="" ref="0x7de95780"/></to>
    </wire>
    <wire loc="25:DimmerC.nc">
      <from><interface-ref name="dimmer" scoped="" ref="0x7de95780"/></from>
      <to><interface-ref name="dimmer" scoped="" ref="0x7de91980"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef420b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7df37d20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef420b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7da5c200"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef420b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e428990"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef420b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e3ed578"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef420b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e030cf0"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef420b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7df9a010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef420b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7db37908"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef420b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7db80628"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ef420b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ea53988"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7ee90230"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f230970"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f230970"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f070960"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7ee90760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ef40e70"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ef40e70"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ef12d70"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ee90ad0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7ef420b8"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7ef31068"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e2e0f28"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7ef31068"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e5d0d30"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7ef31068"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ea13708"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7ef22940"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7eed3d40"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x7ef11518"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7eed3a18"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7ef111a8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7eca16b8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7ef111a8"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7ef20b00"/></to>
    </wire>
    <wire loc="28:/opt/tinyos-2.x/tos/platforms/homenet/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7ef20b00"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7eef0010"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7ef20e68"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7ef31068"/></to>
    </wire>
    <wire loc="29:/opt/tinyos-2.x/tos/platforms/homenet/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7eef0378"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7ef20e68"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f062120"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f051540"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f202c20"/></to>
    </wire>
    <wire loc="99:Ch8_Dimmer_181M.nc">
      <from><interface-ref name="SendSensorData" scoped="" ref="0x7ed324d8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7eca16b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ecf0250"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7ecd4630"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7eca3908"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7eca3908"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x7ec90188"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7ece2010"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7eca2368"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7eca2368"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x7ec917a8"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7ece2980"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7eca2cf8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7eca2cf8"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x7ec92d68"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7ec90188"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7ebc07f0"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7ec917a8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7ebc1e70"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7ec92d68"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7ebc1518"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7ec32e78"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7eae42d8"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7ec60010"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7eb80330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7eb80330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dd56228"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7ec44188"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7eb63d68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7eb63d68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dd06538"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7ec40e78"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7eb50410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7eb50410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dcc4ac8"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7ec83808"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7ebb4e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7ebb4e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7de1d538"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7ec41b00"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7eb51090"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7eb51090"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dcc7718"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7ec81b00"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7ebb0bc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7ebb0bc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dde4d08"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7ec70b00"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7eb925d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7eb925d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dd98718"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7ec54cb8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7eb74030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7eb74030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dd510b0"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7ec43e78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7eb61ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7eb61ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dd01538"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7ebc1e70"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7de260b0"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7ec74808"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7eba3890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7eba3890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ddddac8"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7ec63808"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7eb85250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7eb85250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dd93570"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7ec529d8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7eb73c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7eb73c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dd43010"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7ec33b00"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7eb44170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7eb44170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dcbf9e8"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7ec30d98"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ead3bc0"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7ec51d98"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7eb64a18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7eb64a18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dd110b0"/></to>
    </wire>
    <wire loc="132:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7ec84508"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7ebb5ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7ebb5ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7de21010"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7ec72508"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7eba15d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7eba15d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ddd89e8"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7ec31aa0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7eae1590"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7ec71808"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7eb932a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7eb932a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dd9b2b0"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7ec60980"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7eb80c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7eb80c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dd55c08"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7ec44af8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7eb62790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7eb62790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dd04010"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7ec34808"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7eb50d68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7eb50d68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dcc2570"/></to>
    </wire>
    <wire loc="135:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7ec81190"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7ebb37d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7ebb37d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7de1b010"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7ec80508"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7eba55d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7eba55d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dde0718"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7ec64508"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7eb92f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7eb92f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dd960f8"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7ec536c8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7eb74988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7eb74988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dd50a88"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7ec42808"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7eb604f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7eb604f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dcff010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7ebc07f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7de25a88"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7ec73190"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7eba2250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7eba2250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dddb570"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7ec62190"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7eb85ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7eb85ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dd91010"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7ec32508"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7eb44ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7eb44ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dcbd538"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7ec61508"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7eb819c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7eb819c0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dd587f8"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7ec507a8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7eb63410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7eb63410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dd10a88"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7ec40508"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7eb519e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7eb519e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dcc50f8"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7ec257a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ead1f20"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7ec84e78"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7ebb44f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7ebb44f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7de209e8"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7ec72e78"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7eba1f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7eba1f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ddd6538"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7ec41190"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7eb526f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7eb526f8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dcd2d08"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7ec70190"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7eb93bf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x7eb93bf8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dd9ac78"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7ec54348"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7eb756b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7eb756b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dd536c0"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7ec43508"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7eb61170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7eb61170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dd039e8"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7ec33190"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7eb45790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7eb45790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dcc0010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7ebc1518"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7de515e8"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7ec80e78"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7eba5f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x7eba5f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ddde0f8"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7ec64e78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7eb91890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x7eb91890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dd95ac8"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7ec52068"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7eb73330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x7eb73330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dd45538"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7ec30428"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ead6880"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7ec51428"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7eb640c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x7eb640c0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dd135e0"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7ec62b00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7eb845d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x7eb845d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7dd909e8"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7ec90af8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7ebb5170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x7ebb5170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7de23538"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7ec73b80"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7eba2ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x7eba2ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ddd9010"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7ea63848"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7ea52100"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7ea52100"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e894da8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ea53988"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ea36730"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7ea429b0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7e8474c8"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ea36730"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e992580"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7e854dc0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e8c6b60"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7e8a1b60"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x7ea25398"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x7ea25398"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7e8e1010"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7e847de8"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x7ea161f0"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x7ea161f0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7e8e0848"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7e992968"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ea025f0"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x7e9536c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ea025f0"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x7e9504f8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7e9e3348"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7e931d50"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ea025f0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7e8d5960"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7e976f20"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7e8d6908"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7e943d48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x7e8972d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7e851c90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TempResource" scoped="" ref="0x7dbf0380"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e7e1178"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Sht11Temp" scoped="" ref="0x7dbef190"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7e7e1ad0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="HumResource" scoped="" ref="0x7dbf0a58"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e7e1178"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Sht11Hum" scoped="" ref="0x7dbefcc8"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7e7e1ad0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="SensirionSht11" scoped="" ref="0x7e7e1ad0"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7e7724d8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7e7e1178"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e7602d0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7e7602d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e6c8e78"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x7e771050"/></from>
      <to><interface-ref name="DATA" scoped="" ref="0x7e7609c0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x7e7609c0"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x7ec60010"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="CLOCK" scoped="" ref="0x7e7719c8"/></from>
      <to><interface-ref name="SCK" scoped="" ref="0x7e758368"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7e758368"/></from>
      <to><interface-ref name="PortD0" scoped="" ref="0x7ec61508"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0x7e770358"/></from>
      <to><interface-ref name="InterruptDATA" scoped="" ref="0x7e758d00"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0x7e758d00"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7e6d9540"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7e7709c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e631a48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7e631a48"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7ea63848"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7e7678a8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ed038c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="readSensor" scoped="" ref="0x7e766948"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="signalStatusDone" scoped="" ref="0x7e766510"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7e6c8e78"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7db7abc0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x7e7503e0"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x7ec60010"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7e750d70"/></from>
      <to><interface-ref name="PortD0" scoped="" ref="0x7ec61508"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7e7524b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e7548c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7e7548c8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7ea63848"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7e6d9b38"/></from>
      <to><interface-ref name="Int1" scoped="" ref="0x7e731ba8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x7e731ba8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7e6f6010"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7e660aa8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7e753e20"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7e65aa28"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7e663078"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7e663078"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7db79e48"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="ResourceController" scoped="" ref="0x7e65a390"/></from>
      <to><interface-ref name="ResourceController" scoped="" ref="0x7e6649d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceController" scoped="" ref="0x7e6649d0"/></from>
      <to><interface-ref name="ResourceController" scoped="" ref="0x7db797b0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HplSensirionSht11P.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7e749ba0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x7e730430"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7e6e5228"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x7e734430"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7e6ea0b0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x7e730be8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7e6e32d0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x7e735430"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7e6f3010"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x7e734be8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7e6e8150"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x7e7313f0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7e706010"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x7e735be8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7e6f1010"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7e7067c8"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x7e7214d0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7e6f67c8"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x7e721848"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7e6f37c8"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x7e721bc0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7e6f17c8"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x7e723010"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7e6ea868"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x7e723388"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7e6e8908"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x7e723700"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7e6e59e0"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x7e723a78"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7e6e3a88"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x7e723df0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7e6645c8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7db793a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7db78338"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7e663528"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x7db78760"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7db80960"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x7db76970"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x7db60a80"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7e660aa8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7db59070"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7e65a078"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceController" scoped="" ref="0x7db59388"/></from>
      <to><interface-ref name="ResourceController" scoped="" ref="0x7e65a390"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7db59a20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7e65aa28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="stopTask" scoped="" ref="0x7db59e58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="startTask" scoped="" ref="0x7db582b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x7db4dc40"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7db4a3d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="subRead" scoped="" ref="0x7db49010"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7db483b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x7db483b8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7db46980"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x7db46980"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7e5f4878"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7db444f8"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7e4fcc80"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/PhotoDeviceP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7e4fcc80"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7e4f7448"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7db449d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7e4fc878"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/PhotoDeviceP.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7e4fc878"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7e4f7040"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7e5f11a8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7db444f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7e5f1920"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e5e56e8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7e5e1100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7db449d0"/></to>
    </wire>
    <wire loc="30:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7e5f4878"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7e516888"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x7e5e9390"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x7e531718"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7e505108"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e5f1920"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7e530ab0"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7e5f11a8"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7e515538"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7e5328c8"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7e530338"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7e5d9568"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7e5d9568"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7e5c7b18"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7e5d49c0"/></from>
      <to><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7e5c9040"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7e5e56e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e56c4e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7e56c4e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7db35dc8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7e54bbb8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7e5e1100"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x7e5ba468"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x7e598468"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x7e598468"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x7e593c70"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7e5c6800"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7ef22940"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7e548030"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7e5c7710"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceController" scoped="" ref="0x7e548740"/></from>
      <to><interface-ref name="ResourceController" scoped="" ref="0x7e54b070"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceController" scoped="" ref="0x7e54b070"/></from>
      <to><interface-ref name="ResourceController" scoped="" ref="0x7db33970"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7e591040"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7eff0078"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7e56cc28"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7db33568"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7e54b708"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7db32030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7db324f0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7e54bbb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x7db32918"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7db37c40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x7db31b00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7db04d10"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7e548030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7db02150"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7e548428"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceController" scoped="" ref="0x7db02468"/></from>
      <to><interface-ref name="ResourceController" scoped="" ref="0x7e548740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7db02b00"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7e548dd8"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x7e525f20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/PhotoDeviceP.nc">
      <from><interface-ref name="PhotoPin" scoped="" ref="0x7e4f79a0"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x7ec44af8"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/PhotoDeviceP.nc">
      <from><interface-ref name="PhotoAdc" scoped="" ref="0x7e4f12d0"/></from>
      <to><interface-ref name="Adc0" scoped="" ref="0x7e4e4068"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <from><interface-ref name="Adc0" scoped="" ref="0x7e4e4068"/></from>
      <to><interface-ref name="Adc0" scoped="" ref="0x7e4e2ae0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <from><interface-ref name="PW3" scoped="" ref="0x7e4e85e8"/></from>
      <to><interface-ref name="PortC3" scoped="" ref="0x7ec64508"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <from><interface-ref name="PW6" scoped="" ref="0x7e4e6348"/></from>
      <to><interface-ref name="PortC6" scoped="" ref="0x7ec62190"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <from><interface-ref name="Adc3" scoped="" ref="0x7e4e4a58"/></from>
      <to><interface-ref name="Adc3" scoped="" ref="0x7e4dc518"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <from><interface-ref name="Adc5" scoped="" ref="0x7e4e31c8"/></from>
      <to><interface-ref name="Adc5" scoped="" ref="0x7e4dcbb8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <from><interface-ref name="PW1" scoped="" ref="0x7e4e9268"/></from>
      <to><interface-ref name="PortC1" scoped="" ref="0x7ec70190"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <from><interface-ref name="PW4" scoped="" ref="0x7e4e7010"/></from>
      <to><interface-ref name="PortC4" scoped="" ref="0x7ec64e78"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7e4e56c8"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x7ec44af8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <from><interface-ref name="Adc1" scoped="" ref="0x7e4e43b8"/></from>
      <to><interface-ref name="Adc1" scoped="" ref="0x7e4e2e30"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <from><interface-ref name="PW7" scoped="" ref="0x7e4e6cb8"/></from>
      <to><interface-ref name="PortC7" scoped="" ref="0x7ec62b00"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <from><interface-ref name="Adc6" scoped="" ref="0x7e4e3518"/></from>
      <to><interface-ref name="Adc6" scoped="" ref="0x7e4dcf08"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <from><interface-ref name="PW2" scoped="" ref="0x7e4e9bd8"/></from>
      <to><interface-ref name="PortC2" scoped="" ref="0x7ec70b00"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <from><interface-ref name="PW5" scoped="" ref="0x7e4e7980"/></from>
      <to><interface-ref name="PortC5" scoped="" ref="0x7ec63808"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <from><interface-ref name="Adc2" scoped="" ref="0x7e4e4708"/></from>
      <to><interface-ref name="Adc2" scoped="" ref="0x7e4dc1c8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <from><interface-ref name="Adc4" scoped="" ref="0x7e4e4e28"/></from>
      <to><interface-ref name="Adc4" scoped="" ref="0x7e4dc868"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <from><interface-ref name="Adc7" scoped="" ref="0x7e4e3868"/></from>
      <to><interface-ref name="Adc7" scoped="" ref="0x7e4da268"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <from><interface-ref name="PW0" scoped="" ref="0x7e4ea818"/></from>
      <to><interface-ref name="PortC0" scoped="" ref="0x7ec71808"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x7daf7448"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7daf6ca8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="subRead" scoped="" ref="0x7daf5870"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7daf3c08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x7daf3c08"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7daf01d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x7daf01d0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7e5f4878"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7daf0ce0"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7e4b8468"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/UltraredDeviceP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7e4b8468"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7e4b4b68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7daea230"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7e4b8060"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/UltraredDeviceP.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7e4b8060"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7e4b4760"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7e5f11a8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7daf0ce0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7e5f1920"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e5e56e8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7e5e1100"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7daea230"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/UltraredDeviceP.nc">
      <from><interface-ref name="UltraredPin" scoped="" ref="0x7e4b30e0"/></from>
      <to><interface-ref name="PW1" scoped="" ref="0x7e4e9268"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/UltraredDeviceP.nc">
      <from><interface-ref name="UltraredAdc" scoped="" ref="0x7e4b3a58"/></from>
      <to><interface-ref name="Adc1" scoped="" ref="0x7e4e43b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="subRead" scoped="" ref="0x7dae43b8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7dae3778"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x7dae3778"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7dae0d48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x7dae0d48"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7e5f4878"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7dadf8a8"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7e49aac8"/></to>
    </wire>
    <wire loc="28:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/VoltageDeviceP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7e49aac8"/></from>
      <to><interface-ref name="VoltageConfig" scoped="" ref="0x7e4956c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7dadfd80"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7e499010"/></to>
    </wire>
    <wire loc="29:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/VoltageDeviceP.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7e499010"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7e495290"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7e5f11a8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7dadf8a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7e5f1920"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e5e56e8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7e5e1100"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7dadfd80"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/VoltageDeviceP.nc">
      <from><interface-ref name="BatMon" scoped="" ref="0x7e495c08"/></from>
      <to><interface-ref name="PortA7" scoped="" ref="0x7ec81190"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7e472878"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7e42b010"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/platforms/homenet/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7e48b4c8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7e471100"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7e471100"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7e465848"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/platforms/homenet/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7e48a5d0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7e4701e8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7e4701e8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7e464938"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/platforms/homenet/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7e483e20"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e46d040"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7e46d040"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e462778"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/platforms/homenet/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7e48bdf8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7e471a30"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7e471a30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7e4641a0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/platforms/homenet/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e475eb0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e46b168"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e46b168"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7df12290"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/platforms/homenet/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7e4793b8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e4706d0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7e4706d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e464e20"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7e42b010"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7e428cd8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7e468b48"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7df19c20"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7e45a6c8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7e42b5f0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7e42b5f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7e425338"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7e45ad98"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7e42bcb0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7e42bcb0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7df9ac80"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><function-ref name="amAddress" scoped="" ref="0x7e45d4b8"/></from>
      <to><function-ref name="amAddress" scoped="" ref="0x7df18140"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7e42a260"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e464e20"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7df9ac80"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7df95c80"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7e410ab8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e42a260"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7e3e9180"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e42a260"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7e425a00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e3ed8c0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7e3ed8c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e3e1060"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7e41dc28"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7e3ea7a0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7e3ea7a0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7e3e00a8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7e421610"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7e020060"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7e421610"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7df9a358"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7df9a358"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7df95358"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7e020060"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7e017180"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7e417e68"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7e020488"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7e020488"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7e0175d0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="CsmaBackoff" scoped="" ref="0x7e414ed8"/></from>
      <to><interface-ref name="CsmaBackoff" scoped="" ref="0x7e020d10"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="CsmaBackoff" scoped="" ref="0x7e020d10"/></from>
      <to><interface-ref name="CsmaBackoff" scoped="" ref="0x7e017e58"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7e410690"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7df35b38"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7df35b38"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7df31a00"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7e4124f8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ed038c8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7df9a010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7df95010"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7e030cf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e3a6b10"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7e030cf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e01dd98"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7e3ed578"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e3e2ce8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7e40d6b8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7e40ee60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7e40e730"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7e3e6dd8"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7e3e1728"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7e3d0c38"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e3e9180"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7e3e0b70"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7e3a4010"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/cc2420/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7e3a4010"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7e3a1358"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7e3dd2e8"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7e221858"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7e221858"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7ec81b00"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7e3ddc78"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7e21f5e8"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7e21f5e8"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x7ec83808"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7e3dc6e8"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7e21e980"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7e21e980"/></from>
      <to><interface-ref name="PortA5" scoped="" ref="0x7ec84e78"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7e3db090"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7e215500"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7e215500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7e1f1240"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7e3db6a8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e0526e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7e0526e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e1a12d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7e3cee80"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7e051840"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x7e051840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e19f438"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7e3d0208"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7e051b98"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7e051b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e19f438"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7e3d08f0"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7e0505b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7e0505b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e19f438"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7e3d0580"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7e050910"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7e050910"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e19f438"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7e3d2290"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7e050c68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7e050c68"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e1a0ce0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7e3d26e0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7e0430b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7e0430b8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e1a0ce0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7e3d2bb0"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7e0434f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7e0434f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e1a0ce0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7e3d7030"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7e0439a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7e0439a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e1a0ce0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7e3d7488"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7e043de0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7e043de0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e1a0ce0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7e3d50b0"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7e042ae0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x7e042ae0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e1a0600"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7e3cf610"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e03dd28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7e03dd28"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e1a12d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7e3cfcd0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ed038c8"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <from><interface-ref name="syncDone_task" scoped="" ref="0x7e3cb260"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/cc2420/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7e3a6b10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e3a0b08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x7e3a0b08"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e233280"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x7e3a1358"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7dad0758"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x7dad0758"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7dac59f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7dac1340"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7dac82c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x7dac82c8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7dabd7f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x7dac32e8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7e2a0db0"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7e2a0db0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7e2925c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x7daba058"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e38b368"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7e38b368"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e3745d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x7dab9ef8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7e37f9b8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7e381b98"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7e371370"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7e37bb48"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7e370010"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7e37f9b8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x7e36fb30"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7e37f9b8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x7e36c338"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7e37f9b8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x7e36aac8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer0Ctrl" scoped="" ref="0x7e368220"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7e9f2d90"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7e2c0320"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e38b368"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7e274620"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7e29a150"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7e29a150"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7e299e88"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7e297e68"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e38b368"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7e220268"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x7ec72e78"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7e220bd8"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x7ec43e78"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7e3a8ea0"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x7ec52068"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7e21e010"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x7ec54cb8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7e213ed0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7e211690"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7e215b18"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7e1f76b8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Capture" scoped="" ref="0x7e211d18"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7e37bb48"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7e1f7cb0"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x7e730430"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CCATimer" scoped="" ref="0x7e1f0300"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7e1f2a78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x7e1f2a78"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7ea63848"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CC_CCA" scoped="" ref="0x7e1f1870"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7e3a8ea0"/></to>
    </wire>
    <wire loc="113:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7e1dbd70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsP.nc">
      <from><interface-ref name="CCATask" scoped="" ref="0x7e1dfd70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7e050260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e19f438"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7e042270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e1a0ce0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7e040368"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e1a0600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7e051190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e19f438"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7e042f18"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e1a0600"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x7e0514e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e19f438"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7e0407a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7e1a1c50"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7e0426a8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e1a0600"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7e052dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e19f438"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x7e051ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e19f438"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7e040e78"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7e1a1c50"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7e1a1c50"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7e199158"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7e1a0600"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e199ae0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7e1a0ce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e1981e8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7e1a12d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e19b7b0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7e19f438"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e1988c8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7e198c40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e151090"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7e151090"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e13eb78"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7e193438"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7e151748"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SpiByte" scoped="" ref="0x7e151748"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7e13e178"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7e182c08"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7e151a80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7e151a80"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7e13e4c0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7e194040"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ed038c8"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7e13e4c0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7e1399d8"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7e13e178"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7e1396b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x7e152d28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e142dd0"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7e142dd0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7e139390"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7e13eb78"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e138100"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x7e135500"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e097010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7e097010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7da5b578"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7e135ba8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7e097b58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7e097b58"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7da5a150"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x7e11b998"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x7e0e10f0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x7e0e10f0"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x7e0dcdb8"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7e119010"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7eff0078"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x7e0d6190"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7eff0078"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x7e0dab20"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7ec81b00"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7e0d9508"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x7ec80508"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x7e0d9e78"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x7ec80e78"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x7e0d7808"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x7ec74808"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7e097750"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7da5bcb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7da5a610"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7e05b030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x7da5aa38"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7da5c538"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x7da58050"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7e0380b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e1a0ce0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7e03b880"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e19f438"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7e038920"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e1a0ce0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7e037ae0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e1a0600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7e03a7a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e1a0ce0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7e03c788"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e19f438"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7e03a010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e19f438"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7e0384e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e1a0ce0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7e03bbd8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e19f438"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7e0376a8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e1a0600"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x7e03cae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e19f438"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7e037f18"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7e1a1c50"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7e03abd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e1a0ce0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7e03a368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e1a0ce0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x7e03ce38"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e19f438"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x7e037270"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e1a0600"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7e038d58"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e1a0600"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7e03c430"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e19f438"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x7e03b528"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e19f438"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7e03b1d0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e19f438"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7e036608"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7e1a1c50"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="RadioTimeStamping" scoped="" ref="0x7e01bbf8"/></from>
      <to><interface-ref name="TimeStamp" scoped="" ref="0x7e0162d8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7e016860"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7e3a4010"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7e014620"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7e3a8ea0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7e013010"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7e221858"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7e0139a0"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7e21e010"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7e014010"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7e213ed0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7e012370"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7dfb2650"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7dfb2650"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e1a12d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7e010ad0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7dfb1408"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x7dfb1408"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e19f438"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7e010e40"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7dfb1e10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x7dfb1e10"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e19f438"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7e0031f0"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7dfb0190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7dfb0190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e19f438"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7e003568"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7dfb10b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7dfb10b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e19f438"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7e010680"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7dfa3190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7dfa3190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e1a0ce0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7e012a60"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7dfa1dc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7dfa1dc0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7e1a1c50"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7e0101b0"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7dfa12b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7dfa12b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e1a0600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7dffe5b8"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7df9a780"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7df9a780"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7df95780"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7dffeab8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ed038c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7dfa4900"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e1a0ce0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7dfa4010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e1a0ce0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7dfb0840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e19f438"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7dfa4d38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e1a0ce0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7dfb04e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e19f438"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7dfa3e38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e1a0600"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7dfa16e8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7e1a1c50"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7dfa4448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e1a0ce0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7dfb0b98"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e1a0ce0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x7dfb1760"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e19f438"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x7dfa3a00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e1a0600"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7dfa35c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e1a0600"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7dfb2d28"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e19f438"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7dfb1ab8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e19f438"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7df91b00"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ed038c8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7df94288"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7e221858"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7df94c18"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7e220268"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7df93608"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7e220bd8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7df92010"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7e215b18"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7df92628"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7df56690"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x7df56690"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7e1a12d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7df92d18"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7df507a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7df507a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7e1a1c50"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7df917c0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7df56d68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7df56d68"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e19f438"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7df81178"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7df539a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e1a0ce0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7df54260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e19f438"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7df51270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e1a0ce0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7df50368"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e1a0600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7df530b8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e1a0ce0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7df55190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e19f438"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7df54910"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e19f438"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7df53de0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e1a0ce0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7df545b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e19f438"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7df51f18"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e1a0600"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x7df554e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e19f438"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7df534f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e1a0ce0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7df54c68"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7e1a0ce0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x7df55840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e19f438"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x7df51ae0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e1a0600"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7df516a8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7e1a0600"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x7df55ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e19f438"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7df55b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7e19f438"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7df50e78"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7e1a1c50"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7df31a00"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7df21968"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7df35288"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7df31150"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7df31150"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7df210b8"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7df3a5f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7df37d20"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7df37d20"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7df30c78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7def9a50"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e483e20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7dea1150"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e4793b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x7dea1aa8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e475eb0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x7da077e0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7dedb8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7da07e78"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e4793b8"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7dedb8c0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7ded72b8"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7ded7a28"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7e48b4c8"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7deb0150"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e4793b8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7deb0a88"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e483e20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="errorTask" scoped="" ref="0x7dea5190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x7de9d030"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7e483e20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x7de9d6c8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7e4793b8"/></to>
    </wire>
    <wire loc="26:DimmerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7de83128"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7de77308"/></to>
    </wire>
    <wire loc="27:DimmerC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7de78190"/></from>
      <to><interface-ref name="Int7" scoped="" ref="0x7e730be8"/></to>
    </wire>
    <wire loc="28:DimmerC.nc">
      <from><interface-ref name="DimmerINT" scoped="" ref="0x7de91dd8"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7de79ac0"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="45:/opt/tinyos-2.x/tos/system/MainC.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/system/MainC.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.1.2.11 2006/09/22 19:23:59 idgay Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.1.2.11 2006/09/22 19:23:59 idgay Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.1.2.11 2006/09/22 19:23:59 idgay Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="20:/opt/tinyos-2.x/tos/platforms/homenet/MotePlatformC.nc">
      <documentation loc="20:/opt/tinyos-2.x/tos/platforms/homenet/MotePlatformC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="20:/opt/tinyos-2.x/tos/platforms/homenet/MotePlatformP.nc">
      <documentation loc="20:/opt/tinyos-2.x/tos/platforms/homenet/MotePlatformP.nc">
        <short>***************************************************************************</short>
      </documentation>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/opt/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="45:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10;</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="35:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="43:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <module/>
    </component>
    <component qname="McuSleepC" loc="40:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.1.2.6 2006/09/22 19:12:14 idgay Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Ch8_Dimmer_181M" loc="1:Ch8_Dimmer_181M.nc">
      <module/>
    </component>
    <component qname="LedsC" loc="34:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10;</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="33:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10;</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.1.2.11 2006/09/22 19:23:59 idgay Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10;</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="31(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="31(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="31(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="31(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="31(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="31(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="33(HplAtm128GeneralIOC.F0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="33(HplAtm128GeneralIOC.F1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="33(HplAtm128GeneralIOC.F2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="33(HplAtm128GeneralIOC.F3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="33(HplAtm128GeneralIOC.F4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="33(HplAtm128GeneralIOC.F5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="33(HplAtm128GeneralIOC.F6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="33(HplAtm128GeneralIOC.F7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="33(HplAtm128GeneralIOC.G0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="33(HplAtm128GeneralIOC.G1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="33(HplAtm128GeneralIOC.G2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="33(HplAtm128GeneralIOC.G3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="33(HplAtm128GeneralIOC.G4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Ch8_Dimmer_181C.TimerMilliC" loc="36(Ch8_Dimmer_181C.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(Ch8_Dimmer_181C.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="33:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="22:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer. </short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmCounterMilliP.MilliInit" loc="35(AlarmCounterMilliP.MilliInit):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="35(AlarmCounterMilliP.MilliInit):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmCounterMilliP.MilliAlarm" loc="42(AlarmCounterMilliP.MilliAlarm):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="42(AlarmCounterMilliP.MilliAlarm):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10;</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120888"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120a08"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmCounterMilliP.MilliCounter" loc="33(AlarmCounterMilliP.MilliCounter):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="33(AlarmCounterMilliP.MilliCounter):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10;</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120888"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120a08"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmCounterMilliP.Transform32" loc="53(AlarmCounterMilliP.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
      <documentation loc="53(AlarmCounterMilliP.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
        <short>&#10; TransformAlarmCounterC decreases precision and/or widens an Alarm/Counter&#10; pair.</short>
        <long>&#10; TransformAlarmCounterC decreases precision and/or widens an Alarm/Counter&#10; pair. This component has a reduced interrupt overhead compared to using&#10; TransformAlarmC and TransformCounterC separately. However, it is not as &#10; useful for hardware timers with multiple compare registers.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   interfaces.&#10; @param to_size_type The type for the width of the transformed interfaces.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   interfaces.&#10; @param from_size_type The type for the width of the original interfaces.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmCounterC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120888"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120a08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea06c0"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120888"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120a08"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="35(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="35(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10;</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120888"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120a08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10;</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120888"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120a08"/></typename>
          </type-tag>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10;</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120888"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120a08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Ch8_Dimmer_181C.SensirionSht11C" loc="45(Ch8_Dimmer_181C.SensirionSht11C):/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11C.nc">
      <documentation loc="45(Ch8_Dimmer_181C.SensirionSht11C):/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11C.nc">
        <short>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform.</short>
        <long>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. Feel free to read both&#10; at the same time, just be aware that they'll come back&#10; sequentially.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.2 $ $Date: 2006/06/20 18:56:07 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht11C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Ch8_Dimmer_181C.SensirionSht11C.SensirionSht11ReaderP" loc="43(Ch8_Dimmer_181C.SensirionSht11C.SensirionSht11ReaderP):/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11ReaderP.nc">
      <documentation loc="43(Ch8_Dimmer_181C.SensirionSht11C.SensirionSht11ReaderP):/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11ReaderP.nc">
        <short>&#10; SensirionSht11ReaderP transforms the HAL-level SensirionSht11&#10; interface into a pair of SID Read interfaces, one for the&#10; temperature sensor and one for the humidity sensor.</short>
        <long>&#10; SensirionSht11ReaderP transforms the HAL-level SensirionSht11&#10; interface into a pair of SID Read interfaces, one for the&#10; temperature sensor and one for the humidity sensor. It acquires the&#10; underlying resource before executing each read, enabling&#10; arbitrated access.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.2 $ $Date: 2006/06/20 18:56:05 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht11ReaderP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht11C" loc="43:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HalSensirionSht11C.nc">
      <documentation loc="43:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HalSensirionSht11C.nc">
        <short>&#10; HalSensirionSht11C is an advanced access component for the&#10; Sensirion SHT11 model humidity and temperature sensor, available on&#10; the telosb platform.</short>
        <long>&#10; HalSensirionSht11C is an advanced access component for the&#10; Sensirion SHT11 model humidity and temperature sensor, available on&#10; the telosb platform. This component provides the SensirionSht11&#10; interface, which offers full control over the device. Please&#10; acquire the Resource before using it.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.3 $ $Date: 2006/08/15 11:59:09 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HalSensirionSht11C.SensirionSht11LogicP" loc="53(HalSensirionSht11C.SensirionSht11LogicP):/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11LogicP.nc">
      <documentation loc="53(HalSensirionSht11C.SensirionSht11LogicP):/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11LogicP.nc">
        <short>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht11 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT11 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.3 $ $Date: 2006/06/20 18:56:05 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht11LogicP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C" loc="43:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HplSensirionSht11C.nc">
      <documentation loc="43:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HplSensirionSht11C.nc">
        <short>&#10; HplSensirionSht11C is a low-level component, intended to provide&#10; the physical resources used by the Sensirion SHT11 sensor on the&#10; telosb platform so that the chip driver can make use of them.</short>
        <long>&#10; HplSensirionSht11C is a low-level component, intended to provide&#10; the physical resources used by the Sensirion SHT11 sensor on the&#10; telosb platform so that the chip driver can make use of them. You&#10; really shouldn't be wiring to this, unless you're writing a new&#10; Sensirion SHT11 driver.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.3 $ $Date: 2006/08/15 11:59:09 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11P" loc="42:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HplSensirionSht11P.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HplSensirionSht11P.nc">
        <short>&#10; HplSensirionSht11P is a low-level component that controls power for&#10; the Sensirion SHT11 sensor on the telosb platform.&#10;&#10;</short>
        <long>&#10; HplSensirionSht11P is a low-level component that controls power for&#10; the Sensirion SHT11 sensor on the telosb platform.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.3 $ $Date: 2006/06/20 18:56:07 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.TimerMilliC" loc="36(HplSensirionSht11C.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(HplSensirionSht11C.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptC" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.&#10;</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="30(HplAtm128InterruptC.IntPin0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="30(HplAtm128InterruptC.IntPin1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="30(HplAtm128InterruptC.IntPin2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="30(HplAtm128InterruptC.IntPin3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="30(HplAtm128InterruptC.IntPin4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="30(HplAtm128InterruptC.IntPin5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="30(HplAtm128InterruptC.IntPin6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="30(HplAtm128InterruptC.IntPin7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.InterruptDATAC" loc="6(HplSensirionSht11C.InterruptDATAC):/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="6(HplSensirionSht11C.InterruptDATAC):/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter" loc="79(HplSensirionSht11C.Arbiter):/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <documentation loc="79(HplSensirionSht11C.Arbiter):/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Sht11.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter.Queue" loc="32(HplSensirionSht11C.Arbiter.Queue):/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter.Arbiter" loc="51(HplSensirionSht11C.Arbiter.Arbiter):/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <documentation loc="51(HplSensirionSht11C.Arbiter.Arbiter):/opt/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceController interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceController interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceController&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.SplitControlPowerManagerC" loc="57(HplSensirionSht11C.SplitControlPowerManagerC):/opt/tinyos-2.x/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="57(HplSensirionSht11C.SplitControlPowerManagerC):/opt/tinyos-2.x/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices. </short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager" loc="48(HplSensirionSht11C.SplitControlPowerManagerC.PowerManager):/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <documentation loc="48(HplSensirionSht11C.SplitControlPowerManagerC.PowerManager):/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10;</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht11C.TimerMilliC" loc="36(HalSensirionSht11C.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(HalSensirionSht11C.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Ch8_Dimmer_181C.PhotoSensorC" loc="19(Ch8_Dimmer_181C.PhotoSensorC):/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/PhotoSensorC.nc">
      <documentation loc="19(Ch8_Dimmer_181C.PhotoSensorC):/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/PhotoSensorC.nc">
        <short>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10;</short>
        <long>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10; @author Philip Levis&#10; @authod David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PhotoSensorC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Ch8_Dimmer_181C.PhotoSensorC.DemoChannel" loc="27(Ch8_Dimmer_181C.PhotoSensorC.DemoChannel):/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/PhotoC.nc">
      <documentation loc="27(Ch8_Dimmer_181C.PhotoSensorC.DemoChannel):/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/PhotoC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <instance number="0">
        <component-ref qname="PhotoC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Ch8_Dimmer_181C.PhotoSensorC.DemoChannel.ADC_ShiftM" loc="27(Ch8_Dimmer_181C.PhotoSensorC.DemoChannel.ADC_ShiftM):/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/ADC_ShiftM.nc">
      <documentation loc="27(Ch8_Dimmer_181C.PhotoSensorC.DemoChannel.ADC_ShiftM):/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/ADC_ShiftM.nc">
        <short>***************************************************************************</short>
      </documentation>
      <instance number="0">
        <component-ref qname="ADC_ShiftM"/>
      </instance>
      <module/>
    </component>
    <component qname="Ch8_Dimmer_181C.PhotoSensorC.DemoChannel.PhotoProC" loc="26(Ch8_Dimmer_181C.PhotoSensorC.DemoChannel.PhotoProC):/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/PhotoProC.nc">
      <documentation loc="26(Ch8_Dimmer_181C.PhotoSensorC.DemoChannel.PhotoProC):/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/PhotoProC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <instance number="0">
        <component-ref qname="PhotoProC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Ch8_Dimmer_181C.PhotoSensorC.DemoChannel.PhotoProC.AdcReadClientC" loc="21(Ch8_Dimmer_181C.PhotoSensorC.DemoChannel.PhotoProC.AdcReadClientC):/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="21(Ch8_Dimmer_181C.PhotoSensorC.DemoChannel.PhotoProC.AdcReadClientC):/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC. </short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="16:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <documentation loc="16:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10;</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcC" loc="42:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10;</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcP" loc="62:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <documentation loc="62:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
        <short>&#10;&#10; Internal component of the Atmega128 A/D HAL.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Internal component of the Atmega128 A/D HAL.&#10;&#10;&#10;&#10; @author Jason Hill&#10;&#10; @author David Gay&#10;&#10; @author Philip Levis&#10;&#10; @author Phil Buonadonna&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128AdcC" loc="35:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10;</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128AdcP" loc="35:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcP.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10;</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter" loc="79(Atm128AdcC.AdcArbiter):/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="79(Atm128AdcC.AdcArbiter):/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Queue" loc="32(Atm128AdcC.AdcArbiter.Queue):/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="32(Atm128AdcC.AdcArbiter.Queue):/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.1.2.3 $&#10; @date $Date: 2006/10/23 05:45:49 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Arbiter" loc="51(Atm128AdcC.AdcArbiter.Arbiter):/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <documentation loc="51(Atm128AdcC.AdcArbiter.Arbiter):/opt/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceController interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceController interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceController&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.PM" loc="57(Atm128AdcC.PM):/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="57(Atm128AdcC.PM):/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10;</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.PM.PowerManager" loc="48(Atm128AdcC.PM.PowerManager):/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="48(Atm128AdcC.PM.PowerManager):/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10;</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <documentation loc="46:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
        <short>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10;</short>
        <long>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <documentation loc="23(WireAdcP.ArbitrateRead):/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10;</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoDeviceP" loc="29:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/PhotoDeviceP.nc">
      <documentation loc="29:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/PhotoDeviceP.nc">
        <short>***************************************************************************</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="PhotoP" loc="27:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/PhotoP.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/PhotoP.nc">
        <short>***************************************************************************</short>
      </documentation>
      <module/>
    </component>
    <component qname="ZigbexBusC" loc="27:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="ZigbexBusP" loc="27:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusP.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusP.nc">
        <short>***************************************************************************</short>
      </documentation>
      <module/>
    </component>
    <component qname="Ch8_Dimmer_181C.UltraredSensorC" loc="19(Ch8_Dimmer_181C.UltraredSensorC):/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/UltraredSensorC.nc">
      <documentation loc="19(Ch8_Dimmer_181C.UltraredSensorC):/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/UltraredSensorC.nc">
        <short>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10;</short>
        <long>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10; @author Philip Levis&#10; @authod David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="UltraredSensorC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Ch8_Dimmer_181C.UltraredSensorC.DemoChannel" loc="27(Ch8_Dimmer_181C.UltraredSensorC.DemoChannel):/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/UltraredC.nc">
      <documentation loc="27(Ch8_Dimmer_181C.UltraredSensorC.DemoChannel):/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/UltraredC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <instance number="0">
        <component-ref qname="UltraredC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Ch8_Dimmer_181C.UltraredSensorC.DemoChannel.ADC_ShiftM" loc="27(Ch8_Dimmer_181C.UltraredSensorC.DemoChannel.ADC_ShiftM):/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/ADC_ShiftM.nc">
      <documentation loc="27(Ch8_Dimmer_181C.UltraredSensorC.DemoChannel.ADC_ShiftM):/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/ADC_ShiftM.nc">
        <short>***************************************************************************</short>
      </documentation>
      <instance number="1">
        <component-ref qname="ADC_ShiftM"/>
      </instance>
      <module/>
    </component>
    <component qname="Ch8_Dimmer_181C.UltraredSensorC.DemoChannel.UltraredProC" loc="29(Ch8_Dimmer_181C.UltraredSensorC.DemoChannel.UltraredProC):/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/UltraredProC.nc">
      <documentation loc="29(Ch8_Dimmer_181C.UltraredSensorC.DemoChannel.UltraredProC):/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/UltraredProC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <instance number="0">
        <component-ref qname="UltraredProC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Ch8_Dimmer_181C.UltraredSensorC.DemoChannel.UltraredProC.AdcReadClientC" loc="21(Ch8_Dimmer_181C.UltraredSensorC.DemoChannel.UltraredProC.AdcReadClientC):/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="21(Ch8_Dimmer_181C.UltraredSensorC.DemoChannel.UltraredProC.AdcReadClientC):/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC. </short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UltraredDeviceP" loc="29:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/UltraredDeviceP.nc">
      <documentation loc="29:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/UltraredDeviceP.nc">
        <short>***************************************************************************</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="UltraredP" loc="27:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/UltraredP.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/UltraredP.nc">
        <short>***************************************************************************</short>
      </documentation>
      <module/>
    </component>
    <component qname="Ch8_Dimmer_181C.VoltageC" loc="27(Ch8_Dimmer_181C.VoltageC):/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/VoltageC.nc">
      <documentation loc="27(Ch8_Dimmer_181C.VoltageC):/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/VoltageC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <instance number="0">
        <component-ref qname="VoltageC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Ch8_Dimmer_181C.VoltageC.ADC_ShiftM" loc="27(Ch8_Dimmer_181C.VoltageC.ADC_ShiftM):/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/ADC_ShiftM.nc">
      <documentation loc="27(Ch8_Dimmer_181C.VoltageC.ADC_ShiftM):/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/ADC_ShiftM.nc">
        <short>***************************************************************************</short>
      </documentation>
      <instance number="2">
        <component-ref qname="ADC_ShiftM"/>
      </instance>
      <module/>
    </component>
    <component qname="Ch8_Dimmer_181C.VoltageC.VoltageProC" loc="29(Ch8_Dimmer_181C.VoltageC.VoltageProC):/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/VoltageProC.nc">
      <documentation loc="29(Ch8_Dimmer_181C.VoltageC.VoltageProC):/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/VoltageProC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <instance number="0">
        <component-ref qname="VoltageProC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Ch8_Dimmer_181C.VoltageC.VoltageProC.AdcReadClientC" loc="21(Ch8_Dimmer_181C.VoltageC.VoltageProC.AdcReadClientC):/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="21(Ch8_Dimmer_181C.VoltageC.VoltageProC.AdcReadClientC):/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC. </short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="VoltageDeviceP" loc="19:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/VoltageDeviceP.nc">
      <documentation loc="19:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/VoltageDeviceP.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.1.2.11 2006/09/22 19:23:59 idgay Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="VoltageP" loc="31:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/VoltageP.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/VoltageP.nc">
        <short>&#10; Internal component for voltage sensor reading.&#10;&#10;</short>
        <long>&#10; Internal component for voltage sensor reading.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="47:/opt/tinyos-2.x/tos/platforms/homenet/ActiveMessageC.nc">
      <documentation loc="47:/opt/tinyos-2.x/tos/platforms/homenet/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the micaZ platform.</short>
        <long>&#10;&#10; The Active Message layer on the micaZ platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @date June 19 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="38:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
        <short>&#10; The Active Message layer for the CC2420 radio.</short>
        <long>&#10; The Active Message layer for the CC2420 radio. This configuration&#10; just layers the AM dispatch (CC2420ActiveMessageM) on top of the&#10; underlying CC2420 radio packet (CC2420CsmaRadioC), which is&#10; inherently an AM packet (acknowledgements based on AM destination&#10; addr and group). Note that snooping may not work, due to CC2420&#10; early packet rejection if acknowledgements are enabled.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.1.2.11 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="35:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.1.2.8 $ $Date: 2006/08/04 00:34:18 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.11 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.12 $ $Date: 2006/07/17 05:04:16 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.8 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.22 $ $Date: 2006/09/07 17:53:12 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/AlarmMultiplexC.nc">
      <documentation loc="43:/opt/tinyos-2.x/tos/chips/cc2420/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.7 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="66(AlarmMultiplexC.Alarm):/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="66(AlarmMultiplexC.Alarm):/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.1.2.6 $ $Date: 2006/06/20 18:56:06 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
      <documentation loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16" loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega128 timer 1.&#10;&#10;</short>
        <long>&#10; HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1P" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10;</short>
        <long>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="35(InitOneP.InitOne):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="35(InitOneP.InitOne):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm" loc="42(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="42(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10;</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b70"/>
            <typename><typedef-ref name="TOne" ref="0x7f081ad8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="22:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
        <short>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="33(CounterOne16C.NCounter):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="33(CounterOne16C.NCounter):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10;</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b70"/>
            <typename><typedef-ref name="TOne" ref="0x7f081ad8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform32" loc="43(Counter32khz32C.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="43(Counter32khz32C.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10;</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120cf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea06c0"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120cf0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_one_overflow_t" ref="0x7f081e80"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32" loc="40(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="40(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm. </short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120cf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea06c0"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b70"/>
            <typename><typedef-ref name="TOne" ref="0x7f081ad8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NoInitC" loc="16:/opt/tinyos-2.x/tos/system/NoInitC.nc">
      <documentation loc="16:/opt/tinyos-2.x/tos/system/NoInitC.nc">
        <short>&#10; A do-nothing Init implementation.</short>
        <long>&#10; A do-nothing Init implementation. Useful for implementing components whose&#10; specification has an Init, but whose implementation doesn't need one.&#10;&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="64:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="64:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10;</short>
        <long>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10; Information on the function of these pins can be found on pages&#10; 14-15 of the CC2420 datasheet (rev 1.2).&#10;&#10; &#60;pre>&#10; $Id: HplCC2420PinsC.nc,v 1.1.2.6 2006/06/20 18:56:06 jwhui Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.1.2.6 $ $Date: 2006/06/20 18:56:06 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="37:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.6 $ $Date: 2006/06/20 18:56:06 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="33(HplCC2420InterruptsC.CaptureSFDC):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <documentation loc="33(HplCC2420InterruptsC.CaptureSFDC):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10;</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsP" loc="65:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsP.nc">
      <documentation loc="65:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsP.nc">
        <short>&#10; MicaZ implementation of the CC2420 interrupts.</short>
        <long>&#10; MicaZ implementation of the CC2420 interrupts. FIFOP is a real&#10; interrupt, while CCA and FIFO are emulated through timer polling.&#10; &#60;pre>&#10;  $Id: HplCC2420InterruptsP.nc,v 1.1.2.4 2006/06/20 18:56:06 jwhui Exp $&#10; &#60;pre>&#10;&#10; @author Philip Levis&#10; @author Matt Miller&#10; @version @version $Revision: 1.1.2.4 $ $Date: 2006/06/20 18:56:06 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.TimerMilliC" loc="36(HplCC2420InterruptsC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(HplCC2420InterruptsC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <documentation loc="39(CC2420ControlC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.7 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.8 $ $Date: 2006/06/20 18:56:05 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiImplP" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.12 $ $Date: 2006/09/28 19:26:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiP.HplCC2420SpiC" loc="37(CC2420SpiP.HplCC2420SpiC):/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="37(CC2420SpiP.HplCC2420SpiC):/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.4 $ $Date: 2006/06/20 18:56:06 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC" loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.&#10;&#10;</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.1.2.9 2006/08/15 11:59:08 klueska Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="75:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <documentation loc="75:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller. </short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.1.2.10 2006/09/28 19:26:21 jwhui Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="58:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="58:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10;</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.1.2.4 2006/03/13 23:07:53 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="56:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <documentation loc="56:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10;</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="73(Atm128SpiC.Arbiter):/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="73(Atm128SpiC.Arbiter):/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="32(Atm128SpiC.Arbiter.Queue):/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="51(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <documentation loc="51(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <documentation loc="39(CC2420ControlC.SyncSpiC):/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.7 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420TransmitC" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.8 $ $Date: 2006/06/20 18:56:05 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.14 $ $Date: 2006/08/15 11:59:08 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <documentation loc="39(CC2420TransmitC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.7 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.5 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.10 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <documentation loc="39(CC2420ReceiveC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.7 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="32:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="31:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
        <short>&#10; This is the configuration for RandomMlcgC, a &#10; multiplicative linear congruential generator. &#10;&#10;</short>
        <long>&#10; This is the configuration for RandomMlcgC, a &#10; multiplicative linear congruential generator. &#10;&#10; @author  Barbara Hohlt&#10; @author  Philip Levis&#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgP" loc="34:/opt/tinyos-2.x/tos/system/RandomMlcgP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/RandomMlcgP.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers. </short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;		S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420PacketC.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420PacketC.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.2 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Ch8_Dimmer_181C.AMSenderC" loc="39(Ch8_Dimmer_181C.AMSenderC):/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <documentation loc="39(Ch8_Dimmer_181C.AMSenderC):/opt/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:9">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Ch8_Dimmer_181C.AMSenderC.AMQueueEntryP" loc="35(Ch8_Dimmer_181C.AMSenderC.AMQueueEntryP):/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="35(Ch8_Dimmer_181C.AMSenderC.AMQueueEntryP):/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10;</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7ed94078"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="34:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.&#10;&#10;</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="37(AMQueueP.AMQueueImplP):/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <documentation loc="37(AMQueueP.AMQueueImplP):/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Ch8_Dimmer_181C.AMReceiverC" loc="35(Ch8_Dimmer_181C.AMReceiverC):/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <documentation loc="35(Ch8_Dimmer_181C.AMReceiverC):/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.&#10;&#10;</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:9">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DimmerC" loc="17:DimmerC.nc">
      <configuration/>
    </component>
    <component qname="DimmerP" loc="16:DimmerP.nc">
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="29:/opt/tinyos-2.x/tos/platforms/homenet/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="DimmerC.IntDimm" loc="6(DimmerC.IntDimm):/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="6(DimmerC.IntDimm):/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7ec23c20" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7ec23db0" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7ec15010" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7ec02218" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7ec023b8" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7ec02558" loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7ec026f0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7eb33218" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7eb333b8" loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7eb33558" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7eb336f0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="36:/opt/tinyos-2.x/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="36:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7e9908b8" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7e9908b8"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x7e990a48" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10;</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7e980e50" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7e980e50"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7e974138" loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7e974138"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x7e9742c8" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10;</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7e9415a8" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7e9415a8"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7e941868" loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7e941868"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmCounterC" loc="53:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc" abstract="">
      <documentation loc="53:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
        <short>&#10; TransformAlarmCounterC decreases precision and/or widens an Alarm/Counter&#10; pair.</short>
        <long>&#10; TransformAlarmCounterC decreases precision and/or widens an Alarm/Counter&#10; pair. This component has a reduced interrupt overhead compared to using&#10; TransformAlarmC and TransformCounterC separately. However, it is not as &#10; useful for hardware timers with multiple compare registers.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   interfaces.&#10; @param to_size_type The type for the width of the transformed interfaces.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   interfaces.&#10; @param from_size_type The type for the width of the original interfaces.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7e9215a0" loc="54:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
          <component-ref qname="TransformAlarmCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7e9215a0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7e921860" loc="55:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
          <component-ref qname="TransformAlarmCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7e921860"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7e921a28" loc="56:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
          <component-ref qname="TransformAlarmCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7e921a28"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7e921ce8" loc="57:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
          <component-ref qname="TransformAlarmCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7e921ce8"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7e921e88" loc="58:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
          <component-ref qname="TransformAlarmCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7e920168" loc="59:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
          <component-ref qname="TransformAlarmCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7e920168"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="35:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10;</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7e8c44f0" loc="35:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7e8c44f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10;</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7e896d20" loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7e896d20"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7e896ea8" loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="35:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10;</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7e845c68" loc="35:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7e845c68"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SensirionSht11C" loc="45:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11C.nc" abstract="">
      <documentation loc="45:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11C.nc">
        <short>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform.</short>
        <long>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. Feel free to read both&#10; at the same time, just be aware that they'll come back&#10; sequentially.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.2 $ $Date: 2006/06/20 18:56:07 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SensirionSht11ReaderP" loc="43:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11ReaderP.nc" abstract="">
      <documentation loc="43:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11ReaderP.nc">
        <short>&#10; SensirionSht11ReaderP transforms the HAL-level SensirionSht11&#10; interface into a pair of SID Read interfaces, one for the&#10; temperature sensor and one for the humidity sensor.</short>
        <long>&#10; SensirionSht11ReaderP transforms the HAL-level SensirionSht11&#10; interface into a pair of SID Read interfaces, one for the&#10; temperature sensor and one for the humidity sensor. It acquires the&#10; underlying resource before executing each read, enabling&#10; arbitrated access.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.2 $ $Date: 2006/06/20 18:56:05 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SensirionSht11LogicP" loc="53:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11LogicP.nc" abstract="">
      <documentation loc="53:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11LogicP.nc">
        <short>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht11 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT11 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.3 $ $Date: 2006/06/20 18:56:05 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="">
      <documentation loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x7e705248" loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x7e7053e8" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x7e705588" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7e705720" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="">
      <documentation loc="6:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="79:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="79:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7e6cae68" loc="79:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="32:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc" abstract="">
      <parameters>
        <constant name="size" ref="0x7e6b01b8" loc="32:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="51:/opt/tinyos-2.x/tos/system/ArbiterP.nc" abstract="">
      <documentation loc="51:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceController interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceController interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceController&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="controller_id" ref="0x7e6951d8" loc="51:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SplitControlPowerManagerC" loc="57:/opt/tinyos-2.x/tos/lib/power/SplitControlPowerManagerC.nc" abstract="">
      <documentation loc="57:/opt/tinyos-2.x/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices. </short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PowerManagerP" loc="48:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc" abstract="">
      <documentation loc="48:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10;</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="PhotoSensorC" loc="19:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/PhotoSensorC.nc" abstract="">
      <documentation loc="19:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/PhotoSensorC.nc">
        <short>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10;</short>
        <long>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10; @author Philip Levis&#10; @authod David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PhotoC" loc="27:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/PhotoC.nc" abstract="">
      <documentation loc="27:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/PhotoC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ADC_ShiftM" loc="27:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/ADC_ShiftM.nc" abstract="">
      <documentation loc="27:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/ADC_ShiftM.nc">
        <short>***************************************************************************</short>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="PhotoProC" loc="26:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/PhotoProC.nc" abstract="">
      <documentation loc="26:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/PhotoProC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadClientC" loc="21:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="21:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC. </short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="79:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="79:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7e56ba10" loc="79:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="32:/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.1.2.3 $&#10; @date $Date: 2006/10/23 05:45:49 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x7e563400" loc="32:/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="57:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="57:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10;</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="48:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc" abstract="">
      <documentation loc="48:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10;</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ArbitratedReadC" loc="23:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc" abstract="">
      <documentation loc="23:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10;</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x7e5140d8" loc="23:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x7e5140d8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="UltraredSensorC" loc="19:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/UltraredSensorC.nc" abstract="">
      <documentation loc="19:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/UltraredSensorC.nc">
        <short>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10;</short>
        <long>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10; @author Philip Levis&#10; @authod David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UltraredC" loc="27:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/UltraredC.nc" abstract="">
      <documentation loc="27:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/UltraredC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UltraredProC" loc="29:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/UltraredProC.nc" abstract="">
      <documentation loc="29:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/UltraredProC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="VoltageC" loc="27:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/VoltageC.nc" abstract="">
      <documentation loc="27:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/VoltageC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="VoltageProC" loc="29:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/VoltageProC.nc" abstract="">
      <documentation loc="29:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/VoltageProC.nc">
        <short>***************************************************************************</short>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420AlarmC" loc="66:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="66:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.1.2.6 $ $Date: 2006/06/20 18:56:06 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="26:/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc" abstract="">
      <documentation loc="26:/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="28:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TransformCounterC" loc="43:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc" abstract="">
      <documentation loc="43:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10;</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7e290580" loc="44:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7e290580"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7e290840" loc="45:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7e290840"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7e290a08" loc="46:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7e290a08"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7e290cc8" loc="47:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7e290cc8"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7e290e68" loc="48:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7e280168" loc="49:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7e280168"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="40:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc" abstract="">
      <documentation loc="40:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm. </short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7e270860" loc="41:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7e270860"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7e270b20" loc="42:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7e270b20"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7e270ce8" loc="43:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7e270ce8"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7e260010" loc="44:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7e260010"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7e2601b0" loc="45:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioCaptureC" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10;</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc" abstract="">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.7 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="37:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="37:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.4 $ $Date: 2006/06/20 18:56:06 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="73:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="73:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7e0968a0" loc="73:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleArbiterP" loc="51:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc" abstract="">
      <documentation loc="51:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="39:/opt/tinyos-2.x/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="39:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7def8cf8" loc="39:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7ed94078"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="35:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10;</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7def1010" loc="35:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7ed94078"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="37:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc" abstract="">
      <documentation loc="37:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7ded68b0" loc="37:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="35:/opt/tinyos-2.x/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.&#10;&#10;</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7de9c908" loc="35:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7ed94078"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7ef420b8" loc="47:/opt/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7ef420b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ef42290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7ef51930" loc="46:/opt/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7ef51930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7ef51b08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7ef31068" loc="43:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7ef31068"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ef31240"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ef40e70" loc="37:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7ef40e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ef33070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7ef22940" loc="41:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7ef22940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7ef22b18"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7ef22bf8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7ef22cd8"/>
        <function-ref name="actualMicro" scoped="" ref="0x7ef22db8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7ef22e98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7ef111a8" loc="36:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x7ef111a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ef11380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ef12d70" loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7ef12d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ef11010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x7ef11518" loc="37:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x7ef11518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ef116f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7ef20e68" loc="23:/opt/tinyos-2.x/tos/platforms/homenet/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7ef20e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ef00050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7ef20b00" loc="22:/opt/tinyos-2.x/tos/platforms/homenet/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7ef20b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ef20cd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7eef0378" loc="23:/opt/tinyos-2.x/tos/platforms/homenet/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7eef0378"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7eef0550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7eef0010" loc="22:/opt/tinyos-2.x/tos/platforms/homenet/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7eef0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7eef01e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7eed3a18" loc="27:/opt/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7eed3a18"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f250308"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f250308"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7eed3bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7eed3d40" loc="28:/opt/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7eed3d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7eed3f18"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7eed1010"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7eed10f0"/>
        <function-ref name="actualMicro" scoped="" ref="0x7eed11d0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7eed12b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7ee90ad0" loc="49:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7ee90ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ee90ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7ef50eb8" loc="46:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7ef50eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7ee900c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7ee90760" loc="48:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7ee90760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ee90938"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7ee90230" loc="47:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7ee90230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ee90408"/>
        <function-ref name="taskLoop" scoped="" ref="0x7ee904e8"/>
        <function-ref name="runNextTask" scoped="" ref="0x7ee905c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f2109b8" loc="37:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f2109b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f210b90"/>
        <function-ref name="runTask" scoped="" ref="0x7f210c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f230970" loc="36:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f230970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f230b48"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f230c28"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f230d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f062120" loc="45:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f062120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0622f8"/>
        <function-ref name="runTask" scoped="" ref="0x7f0623d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f051540" loc="46:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f051540"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f051718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f070960" loc="44:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f070960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f070b38"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f070c18"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f070cf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7efe01a0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7efe01a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7efe0378"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f202c20" loc="42:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f202c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f202df8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7eff0078" loc="43:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7eff0078"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7eff0250"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7efa0c50" loc="3:Ch8_Dimmer_181M.nc">
      <component-ref qname="Ch8_Dimmer_181M"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7efa0c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7efa0e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read_Voltage" ref="0x7ee125a0" loc="10:Ch8_Dimmer_181M.nc">
      <component-ref qname="Ch8_Dimmer_181M"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read_Voltage" scoped="" ref="0x7ee125a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ee12bc8"/>
        <function-ref name="readDone" scoped="" ref="0x7ee12da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7ed73188" loc="12:Ch8_Dimmer_181M.nc">
      <component-ref qname="Ch8_Dimmer_181M"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7ed73188"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ed73360"/>
        <function-ref name="getPayload" scoped="" ref="0x7ed73440"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ed73520"/>
        <function-ref name="cancel" scoped="" ref="0x7ed73600"/>
        <function-ref name="sendDone" scoped="" ref="0x7ed736e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendSensorData" ref="0x7ed324d8" loc="99:Ch8_Dimmer_181M.nc">
      <component-ref qname="Ch8_Dimmer_181M"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendSensorData" scoped="" ref="0x7ed324d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ed32730"/>
        <function-ref name="runTask" scoped="" ref="0x7ed32810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read_Humi" ref="0x7ee20618" loc="6:Ch8_Dimmer_181M.nc">
      <component-ref qname="Ch8_Dimmer_181M"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read_Humi" scoped="" ref="0x7ee20618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ee20c40"/>
        <function-ref name="readDone" scoped="" ref="0x7ee20e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read_Ultrared" ref="0x7ee22980" loc="9:Ch8_Dimmer_181M.nc">
      <component-ref qname="Ch8_Dimmer_181M"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read_Ultrared" scoped="" ref="0x7ee22980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ee12010"/>
        <function-ref name="readDone" scoped="" ref="0x7ee121f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read_Photo" ref="0x7ee23db8" loc="8:Ch8_Dimmer_181M.nc">
      <component-ref qname="Ch8_Dimmer_181M"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read_Photo" scoped="" ref="0x7ee23db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ee223f0"/>
        <function-ref name="readDone" scoped="" ref="0x7ee225d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7ed63758" loc="13:Ch8_Dimmer_181M.nc">
      <component-ref qname="Ch8_Dimmer_181M"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7ed63758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7ed63930"/>
        <function-ref name="receive" scoped="" ref="0x7ed63a10"/>
        <function-ref name="getPayload" scoped="" ref="0x7ed63af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CommControl" ref="0x7ee00500" loc="11:Ch8_Dimmer_181M.nc">
      <component-ref qname="Ch8_Dimmer_181M"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CommControl" scoped="" ref="0x7ee00500"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7ee006d8"/>
        <function-ref name="stopDone" scoped="" ref="0x7ee007b8"/>
        <function-ref name="start" scoped="" ref="0x7ee00898"/>
        <function-ref name="stop" scoped="" ref="0x7ee00978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7ee31e78" loc="5:Ch8_Dimmer_181M.nc">
      <component-ref qname="Ch8_Dimmer_181M"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7ee31e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ee43070"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ee43150"/>
        <function-ref name="led1On" scoped="" ref="0x7ee43230"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ee43310"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ee433f0"/>
        <function-ref name="get" scoped="" ref="0x7ee434d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7ee435b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7ee43930"/>
        <function-ref name="set" scoped="" ref="0x7ee43690"/>
        <function-ref name="led0On" scoped="" ref="0x7ee43770"/>
        <function-ref name="led2On" scoped="" ref="0x7ee43850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read_Temp" ref="0x7ee23200" loc="7:Ch8_Dimmer_181M.nc">
      <component-ref qname="Ch8_Dimmer_181M"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read_Temp" scoped="" ref="0x7ee23200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ee23828"/>
        <function-ref name="readDone" scoped="" ref="0x7ee23a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="dimmer" ref="0x7ed60078" loc="14:Ch8_Dimmer_181M.nc">
      <component-ref qname="Ch8_Dimmer_181M"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="dimmer" scoped="" ref="0x7ed60078"/></type-interface>
      <instance>
        <interfacedef-ref qname="dimmer"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ed60250"/>
        <function-ref name="setLevel" scoped="" ref="0x7ed60330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7ee52c90" loc="4:Ch8_Dimmer_181M.nc">
      <component-ref qname="Ch8_Dimmer_181M"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7ee52c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120888"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120a08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ee63650"/>
        <function-ref name="fired" scoped="" ref="0x7ee709a8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ee63010"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ee70d68"/>
        <function-ref name="getdt" scoped="" ref="0x7ee63a10"/>
        <function-ref name="gett0" scoped="" ref="0x7ee63830"/>
        <function-ref name="isRunning" scoped="" ref="0x7ee70b88"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ee702c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ee63330"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ee70548"/>
        <function-ref name="stop" scoped="" ref="0x7ee707c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7ed038c8" loc="35:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7ed038c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ed03aa0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ed03b80"/>
        <function-ref name="led1On" scoped="" ref="0x7ed03c60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ed03d40"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ed03e20"/>
        <function-ref name="get" scoped="" ref="0x7ed03f00"/>
        <function-ref name="led1Off" scoped="" ref="0x7ed00010"/>
        <function-ref name="led2Off" scoped="" ref="0x7ed00390"/>
        <function-ref name="set" scoped="" ref="0x7ed000f0"/>
        <function-ref name="led0On" scoped="" ref="0x7ed001d0"/>
        <function-ref name="led2On" scoped="" ref="0x7ed002b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7ecd4630" loc="39:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7ecd4630"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ecd4808"/>
        <function-ref name="isInput" scoped="" ref="0x7ecd48e8"/>
        <function-ref name="toggle" scoped="" ref="0x7ecd49c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ecd4aa8"/>
        <function-ref name="get" scoped="" ref="0x7ecd4b88"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ecd4c68"/>
        <function-ref name="set" scoped="" ref="0x7ecd4d48"/>
        <function-ref name="clr" scoped="" ref="0x7ecd4e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ecf0250" loc="35:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7ecf0250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ecf0428"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7ece2010" loc="40:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7ece2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ece21e8"/>
        <function-ref name="isInput" scoped="" ref="0x7ece22c8"/>
        <function-ref name="toggle" scoped="" ref="0x7ece23a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ece2488"/>
        <function-ref name="get" scoped="" ref="0x7ece2568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ece2648"/>
        <function-ref name="set" scoped="" ref="0x7ece2728"/>
        <function-ref name="clr" scoped="" ref="0x7ece2808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7ecf0570" loc="36:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7ecf0570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ecf0748"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ecf0828"/>
        <function-ref name="led1On" scoped="" ref="0x7ecf0908"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ecf09e8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ecf0ac8"/>
        <function-ref name="get" scoped="" ref="0x7ecf0ba8"/>
        <function-ref name="led1Off" scoped="" ref="0x7ecf0c88"/>
        <function-ref name="led2Off" scoped="" ref="0x7ece4018"/>
        <function-ref name="set" scoped="" ref="0x7ecf0d68"/>
        <function-ref name="led0On" scoped="" ref="0x7ecf0e48"/>
        <function-ref name="led2On" scoped="" ref="0x7ecf0f28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7ece2980" loc="41:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7ece2980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ece2b58"/>
        <function-ref name="isInput" scoped="" ref="0x7ece2c38"/>
        <function-ref name="toggle" scoped="" ref="0x7ece2d18"/>
        <function-ref name="isOutput" scoped="" ref="0x7ece2df8"/>
        <function-ref name="get" scoped="" ref="0x7ece2ed8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ece1010"/>
        <function-ref name="set" scoped="" ref="0x7ece10f0"/>
        <function-ref name="clr" scoped="" ref="0x7ece11d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7eca3908" loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7eca3908"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eca3ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7eca3bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7eca3ca0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eca3d80"/>
        <function-ref name="get" scoped="" ref="0x7eca3e60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eca2010"/>
        <function-ref name="set" scoped="" ref="0x7eca20f0"/>
        <function-ref name="clr" scoped="" ref="0x7eca21d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7eca2368" loc="36:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7eca2368"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eca2540"/>
        <function-ref name="isInput" scoped="" ref="0x7eca2620"/>
        <function-ref name="toggle" scoped="" ref="0x7eca2700"/>
        <function-ref name="isOutput" scoped="" ref="0x7eca27e0"/>
        <function-ref name="get" scoped="" ref="0x7eca28c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eca29a0"/>
        <function-ref name="set" scoped="" ref="0x7eca2a80"/>
        <function-ref name="clr" scoped="" ref="0x7eca2b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7eca16b8" loc="38:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7eca16b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7eca1890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7eca2cf8" loc="37:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7eca2cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eca2ed0"/>
        <function-ref name="isInput" scoped="" ref="0x7eca1010"/>
        <function-ref name="toggle" scoped="" ref="0x7eca10f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eca11d0"/>
        <function-ref name="get" scoped="" ref="0x7eca12b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eca1390"/>
        <function-ref name="set" scoped="" ref="0x7eca1470"/>
        <function-ref name="clr" scoped="" ref="0x7eca1550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7ec32e78" loc="91:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7ec32e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec31308"/>
        <function-ref name="isInput" scoped="" ref="0x7ec313e8"/>
        <function-ref name="toggle" scoped="" ref="0x7ec314c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec315a8"/>
        <function-ref name="get" scoped="" ref="0x7ec31688"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec31768"/>
        <function-ref name="set" scoped="" ref="0x7ec31848"/>
        <function-ref name="clr" scoped="" ref="0x7ec31928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7ec60010" loc="65:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7ec60010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec601e8"/>
        <function-ref name="isInput" scoped="" ref="0x7ec602c8"/>
        <function-ref name="toggle" scoped="" ref="0x7ec603a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec60488"/>
        <function-ref name="get" scoped="" ref="0x7ec60568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec60648"/>
        <function-ref name="set" scoped="" ref="0x7ec60728"/>
        <function-ref name="clr" scoped="" ref="0x7ec60808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7ec44188" loc="76:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7ec44188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec44360"/>
        <function-ref name="isInput" scoped="" ref="0x7ec44440"/>
        <function-ref name="toggle" scoped="" ref="0x7ec44520"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec44600"/>
        <function-ref name="get" scoped="" ref="0x7ec446e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec447c0"/>
        <function-ref name="set" scoped="" ref="0x7ec448a0"/>
        <function-ref name="clr" scoped="" ref="0x7ec44980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7ec40e78" loc="85:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7ec40e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec34070"/>
        <function-ref name="isInput" scoped="" ref="0x7ec34150"/>
        <function-ref name="toggle" scoped="" ref="0x7ec34230"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec34310"/>
        <function-ref name="get" scoped="" ref="0x7ec343f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec344d0"/>
        <function-ref name="set" scoped="" ref="0x7ec345b0"/>
        <function-ref name="clr" scoped="" ref="0x7ec34690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7ec83808" loc="43:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7ec83808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec839e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ec83ac0"/>
        <function-ref name="toggle" scoped="" ref="0x7ec83ba0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec83c80"/>
        <function-ref name="get" scoped="" ref="0x7ec83d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec83e40"/>
        <function-ref name="set" scoped="" ref="0x7ec83f20"/>
        <function-ref name="clr" scoped="" ref="0x7ec81018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7ec41b00" loc="83:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7ec41b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec41cd8"/>
        <function-ref name="isInput" scoped="" ref="0x7ec41db8"/>
        <function-ref name="toggle" scoped="" ref="0x7ec41e98"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec40010"/>
        <function-ref name="get" scoped="" ref="0x7ec400f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec401d0"/>
        <function-ref name="set" scoped="" ref="0x7ec402b0"/>
        <function-ref name="clr" scoped="" ref="0x7ec40390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7ec81b00" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7ec81b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec81cd8"/>
        <function-ref name="isInput" scoped="" ref="0x7ec81db8"/>
        <function-ref name="toggle" scoped="" ref="0x7ec81e98"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec80010"/>
        <function-ref name="get" scoped="" ref="0x7ec800f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec801d0"/>
        <function-ref name="set" scoped="" ref="0x7ec802b0"/>
        <function-ref name="clr" scoped="" ref="0x7ec80390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7ec70b00" loc="57:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7ec70b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec70cd8"/>
        <function-ref name="isInput" scoped="" ref="0x7ec70db8"/>
        <function-ref name="toggle" scoped="" ref="0x7ec70e98"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec64010"/>
        <function-ref name="get" scoped="" ref="0x7ec640f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec641d0"/>
        <function-ref name="set" scoped="" ref="0x7ec642b0"/>
        <function-ref name="clr" scoped="" ref="0x7ec64390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7ec54cb8" loc="68:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7ec54cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec54e90"/>
        <function-ref name="isInput" scoped="" ref="0x7ec53010"/>
        <function-ref name="toggle" scoped="" ref="0x7ec530f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec531d0"/>
        <function-ref name="get" scoped="" ref="0x7ec532b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec53390"/>
        <function-ref name="set" scoped="" ref="0x7ec53470"/>
        <function-ref name="clr" scoped="" ref="0x7ec53550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7ec43e78" loc="79:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7ec43e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec42070"/>
        <function-ref name="isInput" scoped="" ref="0x7ec42150"/>
        <function-ref name="toggle" scoped="" ref="0x7ec42230"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec42310"/>
        <function-ref name="get" scoped="" ref="0x7ec423f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec424d0"/>
        <function-ref name="set" scoped="" ref="0x7ec425b0"/>
        <function-ref name="clr" scoped="" ref="0x7ec42690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7ec917a8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7ec917a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec91980"/>
        <function-ref name="isInput" scoped="" ref="0x7ec91a60"/>
        <function-ref name="toggle" scoped="" ref="0x7ec91b40"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec91c20"/>
        <function-ref name="get" scoped="" ref="0x7ec91d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec91de0"/>
        <function-ref name="set" scoped="" ref="0x7ec91ec0"/>
        <function-ref name="clr" scoped="" ref="0x7ec90010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7ec74808" loc="49:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7ec74808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec749e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ec74ac0"/>
        <function-ref name="toggle" scoped="" ref="0x7ec74ba0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec74c80"/>
        <function-ref name="get" scoped="" ref="0x7ec74d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec74e40"/>
        <function-ref name="set" scoped="" ref="0x7ec74f20"/>
        <function-ref name="clr" scoped="" ref="0x7ec73018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7ec63808" loc="60:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7ec63808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec639e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ec63ac0"/>
        <function-ref name="toggle" scoped="" ref="0x7ec63ba0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec63c80"/>
        <function-ref name="get" scoped="" ref="0x7ec63d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec63e40"/>
        <function-ref name="set" scoped="" ref="0x7ec63f20"/>
        <function-ref name="clr" scoped="" ref="0x7ec62018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7ec529d8" loc="71:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7ec529d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec52bb0"/>
        <function-ref name="isInput" scoped="" ref="0x7ec52c90"/>
        <function-ref name="toggle" scoped="" ref="0x7ec52d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec52e50"/>
        <function-ref name="get" scoped="" ref="0x7ec51010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec510f0"/>
        <function-ref name="set" scoped="" ref="0x7ec511d0"/>
        <function-ref name="clr" scoped="" ref="0x7ec512b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7ec33b00" loc="88:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7ec33b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec33cd8"/>
        <function-ref name="isInput" scoped="" ref="0x7ec33db8"/>
        <function-ref name="toggle" scoped="" ref="0x7ec33e98"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec32010"/>
        <function-ref name="get" scoped="" ref="0x7ec320f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec321d0"/>
        <function-ref name="set" scoped="" ref="0x7ec322b0"/>
        <function-ref name="clr" scoped="" ref="0x7ec32390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7ec30d98" loc="94:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7ec30d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec25010"/>
        <function-ref name="isInput" scoped="" ref="0x7ec250f0"/>
        <function-ref name="toggle" scoped="" ref="0x7ec251d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec252b0"/>
        <function-ref name="get" scoped="" ref="0x7ec25390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec25470"/>
        <function-ref name="set" scoped="" ref="0x7ec25550"/>
        <function-ref name="clr" scoped="" ref="0x7ec25630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7ec51d98" loc="74:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7ec51d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec50010"/>
        <function-ref name="isInput" scoped="" ref="0x7ec500f0"/>
        <function-ref name="toggle" scoped="" ref="0x7ec501d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec502b0"/>
        <function-ref name="get" scoped="" ref="0x7ec50390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec50470"/>
        <function-ref name="set" scoped="" ref="0x7ec50550"/>
        <function-ref name="clr" scoped="" ref="0x7ec50630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7ec84508" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7ec84508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec846e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ec847c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ec848a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec84980"/>
        <function-ref name="get" scoped="" ref="0x7ec84a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec84b40"/>
        <function-ref name="set" scoped="" ref="0x7ec84c20"/>
        <function-ref name="clr" scoped="" ref="0x7ec84d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7ec72508" loc="52:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7ec72508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec726e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ec727c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ec728a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec72980"/>
        <function-ref name="get" scoped="" ref="0x7ec72a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec72b40"/>
        <function-ref name="set" scoped="" ref="0x7ec72c20"/>
        <function-ref name="clr" scoped="" ref="0x7ec72d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7ec31aa0" loc="92:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7ec31aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec31c78"/>
        <function-ref name="isInput" scoped="" ref="0x7ec31d58"/>
        <function-ref name="toggle" scoped="" ref="0x7ec31e38"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec31f18"/>
        <function-ref name="get" scoped="" ref="0x7ec30010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec300f0"/>
        <function-ref name="set" scoped="" ref="0x7ec301d0"/>
        <function-ref name="clr" scoped="" ref="0x7ec302b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7ec71808" loc="55:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7ec71808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec719e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ec71ac0"/>
        <function-ref name="toggle" scoped="" ref="0x7ec71ba0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec71c80"/>
        <function-ref name="get" scoped="" ref="0x7ec71d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec71e40"/>
        <function-ref name="set" scoped="" ref="0x7ec71f20"/>
        <function-ref name="clr" scoped="" ref="0x7ec70018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7ec60980" loc="66:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7ec60980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec60b58"/>
        <function-ref name="isInput" scoped="" ref="0x7ec60c38"/>
        <function-ref name="toggle" scoped="" ref="0x7ec60d18"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec60df8"/>
        <function-ref name="get" scoped="" ref="0x7ec60ed8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec54010"/>
        <function-ref name="set" scoped="" ref="0x7ec540f0"/>
        <function-ref name="clr" scoped="" ref="0x7ec541d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7ec44af8" loc="77:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7ec44af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec44cd0"/>
        <function-ref name="isInput" scoped="" ref="0x7ec44db0"/>
        <function-ref name="toggle" scoped="" ref="0x7ec44e90"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec43010"/>
        <function-ref name="get" scoped="" ref="0x7ec430f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec431d0"/>
        <function-ref name="set" scoped="" ref="0x7ec432b0"/>
        <function-ref name="clr" scoped="" ref="0x7ec43390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7ec34808" loc="86:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7ec34808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec349e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ec34ac0"/>
        <function-ref name="toggle" scoped="" ref="0x7ec34ba0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec34c80"/>
        <function-ref name="get" scoped="" ref="0x7ec34d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec34e40"/>
        <function-ref name="set" scoped="" ref="0x7ec34f20"/>
        <function-ref name="clr" scoped="" ref="0x7ec33018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7ec81190" loc="44:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7ec81190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec81368"/>
        <function-ref name="isInput" scoped="" ref="0x7ec81448"/>
        <function-ref name="toggle" scoped="" ref="0x7ec81528"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec81608"/>
        <function-ref name="get" scoped="" ref="0x7ec816e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec817c8"/>
        <function-ref name="set" scoped="" ref="0x7ec818a8"/>
        <function-ref name="clr" scoped="" ref="0x7ec81988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7ec80508" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7ec80508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec806e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ec807c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ec808a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec80980"/>
        <function-ref name="get" scoped="" ref="0x7ec80a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec80b40"/>
        <function-ref name="set" scoped="" ref="0x7ec80c20"/>
        <function-ref name="clr" scoped="" ref="0x7ec80d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7ec64508" loc="58:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7ec64508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec646e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ec647c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ec648a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec64980"/>
        <function-ref name="get" scoped="" ref="0x7ec64a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec64b40"/>
        <function-ref name="set" scoped="" ref="0x7ec64c20"/>
        <function-ref name="clr" scoped="" ref="0x7ec64d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7ec536c8" loc="69:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7ec536c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec538a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ec53980"/>
        <function-ref name="toggle" scoped="" ref="0x7ec53a60"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec53b40"/>
        <function-ref name="get" scoped="" ref="0x7ec53c20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec53d00"/>
        <function-ref name="set" scoped="" ref="0x7ec53de0"/>
        <function-ref name="clr" scoped="" ref="0x7ec53ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7ec42808" loc="80:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7ec42808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec429e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ec42ac0"/>
        <function-ref name="toggle" scoped="" ref="0x7ec42ba0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec42c80"/>
        <function-ref name="get" scoped="" ref="0x7ec42d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec42e40"/>
        <function-ref name="set" scoped="" ref="0x7ec42f20"/>
        <function-ref name="clr" scoped="" ref="0x7ec41018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7ec90188" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7ec90188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec90360"/>
        <function-ref name="isInput" scoped="" ref="0x7ec90440"/>
        <function-ref name="toggle" scoped="" ref="0x7ec90520"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec90600"/>
        <function-ref name="get" scoped="" ref="0x7ec906e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec907c0"/>
        <function-ref name="set" scoped="" ref="0x7ec908a0"/>
        <function-ref name="clr" scoped="" ref="0x7ec90980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7ec73190" loc="50:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7ec73190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec733e8"/>
        <function-ref name="isInput" scoped="" ref="0x7ec734c8"/>
        <function-ref name="toggle" scoped="" ref="0x7ec735a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec73688"/>
        <function-ref name="get" scoped="" ref="0x7ec73768"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec73848"/>
        <function-ref name="set" scoped="" ref="0x7ec73928"/>
        <function-ref name="clr" scoped="" ref="0x7ec73a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7ec62190" loc="61:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7ec62190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec62368"/>
        <function-ref name="isInput" scoped="" ref="0x7ec62448"/>
        <function-ref name="toggle" scoped="" ref="0x7ec62528"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec62608"/>
        <function-ref name="get" scoped="" ref="0x7ec626e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec627c8"/>
        <function-ref name="set" scoped="" ref="0x7ec628a8"/>
        <function-ref name="clr" scoped="" ref="0x7ec62988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7ec32508" loc="89:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7ec32508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec326e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ec327c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ec328a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec32980"/>
        <function-ref name="get" scoped="" ref="0x7ec32a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec32b40"/>
        <function-ref name="set" scoped="" ref="0x7ec32c20"/>
        <function-ref name="clr" scoped="" ref="0x7ec32d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7ec61508" loc="64:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7ec61508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec617e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ec618c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ec619a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec61a80"/>
        <function-ref name="get" scoped="" ref="0x7ec61b60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec61c40"/>
        <function-ref name="set" scoped="" ref="0x7ec61d20"/>
        <function-ref name="clr" scoped="" ref="0x7ec61e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7ec507a8" loc="75:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7ec507a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec50980"/>
        <function-ref name="isInput" scoped="" ref="0x7ec50a60"/>
        <function-ref name="toggle" scoped="" ref="0x7ec50b40"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec50c20"/>
        <function-ref name="get" scoped="" ref="0x7ec50d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec50de0"/>
        <function-ref name="set" scoped="" ref="0x7ec50ec0"/>
        <function-ref name="clr" scoped="" ref="0x7ec44010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7ec40508" loc="84:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7ec40508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec406e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ec407c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ec408a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec40980"/>
        <function-ref name="get" scoped="" ref="0x7ec40a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec40b40"/>
        <function-ref name="set" scoped="" ref="0x7ec40c20"/>
        <function-ref name="clr" scoped="" ref="0x7ec40d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7ec257a8" loc="95:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7ec257a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec25980"/>
        <function-ref name="isInput" scoped="" ref="0x7ec25a60"/>
        <function-ref name="toggle" scoped="" ref="0x7ec25b40"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec25c20"/>
        <function-ref name="get" scoped="" ref="0x7ec25d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec25de0"/>
        <function-ref name="set" scoped="" ref="0x7ec25ec0"/>
        <function-ref name="clr" scoped="" ref="0x7ec24010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7ec84e78" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7ec84e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec83070"/>
        <function-ref name="isInput" scoped="" ref="0x7ec83150"/>
        <function-ref name="toggle" scoped="" ref="0x7ec83230"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec83310"/>
        <function-ref name="get" scoped="" ref="0x7ec833f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec834d0"/>
        <function-ref name="set" scoped="" ref="0x7ec835b0"/>
        <function-ref name="clr" scoped="" ref="0x7ec83690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7ec72e78" loc="53:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7ec72e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec71070"/>
        <function-ref name="isInput" scoped="" ref="0x7ec71150"/>
        <function-ref name="toggle" scoped="" ref="0x7ec71230"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec71310"/>
        <function-ref name="get" scoped="" ref="0x7ec713f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec714d0"/>
        <function-ref name="set" scoped="" ref="0x7ec715b0"/>
        <function-ref name="clr" scoped="" ref="0x7ec71690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7ec41190" loc="82:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7ec41190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec41368"/>
        <function-ref name="isInput" scoped="" ref="0x7ec41448"/>
        <function-ref name="toggle" scoped="" ref="0x7ec41528"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec41608"/>
        <function-ref name="get" scoped="" ref="0x7ec416e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec417c8"/>
        <function-ref name="set" scoped="" ref="0x7ec418a8"/>
        <function-ref name="clr" scoped="" ref="0x7ec41988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7ec70190" loc="56:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7ec70190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec70368"/>
        <function-ref name="isInput" scoped="" ref="0x7ec70448"/>
        <function-ref name="toggle" scoped="" ref="0x7ec70528"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec70608"/>
        <function-ref name="get" scoped="" ref="0x7ec706e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec707c8"/>
        <function-ref name="set" scoped="" ref="0x7ec708a8"/>
        <function-ref name="clr" scoped="" ref="0x7ec70988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7ec54348" loc="67:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7ec54348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec54520"/>
        <function-ref name="isInput" scoped="" ref="0x7ec54600"/>
        <function-ref name="toggle" scoped="" ref="0x7ec546e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec547c0"/>
        <function-ref name="get" scoped="" ref="0x7ec548a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec54980"/>
        <function-ref name="set" scoped="" ref="0x7ec54a60"/>
        <function-ref name="clr" scoped="" ref="0x7ec54b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7ec43508" loc="78:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7ec43508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec436e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ec437c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ec438a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec43980"/>
        <function-ref name="get" scoped="" ref="0x7ec43a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec43b40"/>
        <function-ref name="set" scoped="" ref="0x7ec43c20"/>
        <function-ref name="clr" scoped="" ref="0x7ec43d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7ec33190" loc="87:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7ec33190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec33368"/>
        <function-ref name="isInput" scoped="" ref="0x7ec33448"/>
        <function-ref name="toggle" scoped="" ref="0x7ec33528"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec33608"/>
        <function-ref name="get" scoped="" ref="0x7ec336e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec337c8"/>
        <function-ref name="set" scoped="" ref="0x7ec338a8"/>
        <function-ref name="clr" scoped="" ref="0x7ec33988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7ec92d68" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7ec92d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec91010"/>
        <function-ref name="isInput" scoped="" ref="0x7ec910f0"/>
        <function-ref name="toggle" scoped="" ref="0x7ec911d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec912b0"/>
        <function-ref name="get" scoped="" ref="0x7ec91390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec91470"/>
        <function-ref name="set" scoped="" ref="0x7ec91550"/>
        <function-ref name="clr" scoped="" ref="0x7ec91630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7ec80e78" loc="48:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7ec80e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec74070"/>
        <function-ref name="isInput" scoped="" ref="0x7ec74150"/>
        <function-ref name="toggle" scoped="" ref="0x7ec74230"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec74310"/>
        <function-ref name="get" scoped="" ref="0x7ec743f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec744d0"/>
        <function-ref name="set" scoped="" ref="0x7ec745b0"/>
        <function-ref name="clr" scoped="" ref="0x7ec74690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7ec64e78" loc="59:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7ec64e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec63070"/>
        <function-ref name="isInput" scoped="" ref="0x7ec63150"/>
        <function-ref name="toggle" scoped="" ref="0x7ec63230"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec63310"/>
        <function-ref name="get" scoped="" ref="0x7ec633f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec634d0"/>
        <function-ref name="set" scoped="" ref="0x7ec635b0"/>
        <function-ref name="clr" scoped="" ref="0x7ec63690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7ec52068" loc="70:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7ec52068"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec52240"/>
        <function-ref name="isInput" scoped="" ref="0x7ec52320"/>
        <function-ref name="toggle" scoped="" ref="0x7ec52400"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec524e0"/>
        <function-ref name="get" scoped="" ref="0x7ec525c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec526a0"/>
        <function-ref name="set" scoped="" ref="0x7ec52780"/>
        <function-ref name="clr" scoped="" ref="0x7ec52860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7ec30428" loc="93:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7ec30428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec30600"/>
        <function-ref name="isInput" scoped="" ref="0x7ec306e0"/>
        <function-ref name="toggle" scoped="" ref="0x7ec307c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec308a0"/>
        <function-ref name="get" scoped="" ref="0x7ec30980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec30a60"/>
        <function-ref name="set" scoped="" ref="0x7ec30b40"/>
        <function-ref name="clr" scoped="" ref="0x7ec30c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7ec51428" loc="73:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7ec51428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec51600"/>
        <function-ref name="isInput" scoped="" ref="0x7ec516e0"/>
        <function-ref name="toggle" scoped="" ref="0x7ec517c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec518a0"/>
        <function-ref name="get" scoped="" ref="0x7ec51980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec51a60"/>
        <function-ref name="set" scoped="" ref="0x7ec51b40"/>
        <function-ref name="clr" scoped="" ref="0x7ec51c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7ec62b00" loc="62:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7ec62b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec62cd8"/>
        <function-ref name="isInput" scoped="" ref="0x7ec62db8"/>
        <function-ref name="toggle" scoped="" ref="0x7ec62e98"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec61010"/>
        <function-ref name="get" scoped="" ref="0x7ec610f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec611d0"/>
        <function-ref name="set" scoped="" ref="0x7ec612b0"/>
        <function-ref name="clr" scoped="" ref="0x7ec61390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7ec90af8" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7ec90af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec90cd0"/>
        <function-ref name="isInput" scoped="" ref="0x7ec90db0"/>
        <function-ref name="toggle" scoped="" ref="0x7ec90e90"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec84010"/>
        <function-ref name="get" scoped="" ref="0x7ec840f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec841d0"/>
        <function-ref name="set" scoped="" ref="0x7ec842b0"/>
        <function-ref name="clr" scoped="" ref="0x7ec84390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7ec73b80" loc="51:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7ec73b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ec73d58"/>
        <function-ref name="isInput" scoped="" ref="0x7ec73e38"/>
        <function-ref name="toggle" scoped="" ref="0x7ec73f18"/>
        <function-ref name="isOutput" scoped="" ref="0x7ec72010"/>
        <function-ref name="get" scoped="" ref="0x7ec720f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ec721d0"/>
        <function-ref name="set" scoped="" ref="0x7ec722b0"/>
        <function-ref name="clr" scoped="" ref="0x7ec72390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7ebc07f0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7ebc07f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ebc09c8"/>
        <function-ref name="isInput" scoped="" ref="0x7ebc0aa8"/>
        <function-ref name="toggle" scoped="" ref="0x7ebc0b88"/>
        <function-ref name="isOutput" scoped="" ref="0x7ebc0c68"/>
        <function-ref name="get" scoped="" ref="0x7ebc0d48"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ebc0e28"/>
        <function-ref name="set" scoped="" ref="0x7ebc0f08"/>
        <function-ref name="clr" scoped="" ref="0x7ebb5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7ebb44f0" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7ebb44f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ebb46c8"/>
        <function-ref name="isInput" scoped="" ref="0x7ebb47a8"/>
        <function-ref name="toggle" scoped="" ref="0x7ebb4888"/>
        <function-ref name="isOutput" scoped="" ref="0x7ebb4968"/>
        <function-ref name="get" scoped="" ref="0x7ebb4a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ebb4b28"/>
        <function-ref name="set" scoped="" ref="0x7ebb4c08"/>
        <function-ref name="clr" scoped="" ref="0x7ebb4ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7ebc1518" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7ebc1518"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ebc16f0"/>
        <function-ref name="isInput" scoped="" ref="0x7ebc17d0"/>
        <function-ref name="toggle" scoped="" ref="0x7ebc18b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ebc1990"/>
        <function-ref name="get" scoped="" ref="0x7ebc1a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ebc1b50"/>
        <function-ref name="set" scoped="" ref="0x7ebc1c30"/>
        <function-ref name="clr" scoped="" ref="0x7ebc1d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7ebb5170" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7ebb5170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ebb5348"/>
        <function-ref name="isInput" scoped="" ref="0x7ebb5428"/>
        <function-ref name="toggle" scoped="" ref="0x7ebb5508"/>
        <function-ref name="isOutput" scoped="" ref="0x7ebb55e8"/>
        <function-ref name="get" scoped="" ref="0x7ebb56c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ebb57a8"/>
        <function-ref name="set" scoped="" ref="0x7ebb5888"/>
        <function-ref name="clr" scoped="" ref="0x7ebb5968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7ebb4e48" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7ebb4e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ebb3050"/>
        <function-ref name="isInput" scoped="" ref="0x7ebb3130"/>
        <function-ref name="toggle" scoped="" ref="0x7ebb3210"/>
        <function-ref name="isOutput" scoped="" ref="0x7ebb32f0"/>
        <function-ref name="get" scoped="" ref="0x7ebb33d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ebb34b0"/>
        <function-ref name="set" scoped="" ref="0x7ebb3590"/>
        <function-ref name="clr" scoped="" ref="0x7ebb3670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7ebc1e70" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7ebc1e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ebc0070"/>
        <function-ref name="isInput" scoped="" ref="0x7ebc0150"/>
        <function-ref name="toggle" scoped="" ref="0x7ebc0230"/>
        <function-ref name="isOutput" scoped="" ref="0x7ebc0310"/>
        <function-ref name="get" scoped="" ref="0x7ebc03f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ebc04d0"/>
        <function-ref name="set" scoped="" ref="0x7ebc05b0"/>
        <function-ref name="clr" scoped="" ref="0x7ebc0690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7ebb5ac8" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7ebb5ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ebb5ca0"/>
        <function-ref name="isInput" scoped="" ref="0x7ebb5d80"/>
        <function-ref name="toggle" scoped="" ref="0x7ebb5e60"/>
        <function-ref name="isOutput" scoped="" ref="0x7ebb4010"/>
        <function-ref name="get" scoped="" ref="0x7ebb40f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ebb41d0"/>
        <function-ref name="set" scoped="" ref="0x7ebb42b0"/>
        <function-ref name="clr" scoped="" ref="0x7ebb4390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7ebb37d0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7ebb37d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ebb39a8"/>
        <function-ref name="isInput" scoped="" ref="0x7ebb3a88"/>
        <function-ref name="toggle" scoped="" ref="0x7ebb3b68"/>
        <function-ref name="isOutput" scoped="" ref="0x7ebb3c48"/>
        <function-ref name="get" scoped="" ref="0x7ebb3d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ebb3e08"/>
        <function-ref name="set" scoped="" ref="0x7ebb3ee8"/>
        <function-ref name="clr" scoped="" ref="0x7ebb2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7de515e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7de515e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de517c0"/>
        <function-ref name="isInput" scoped="" ref="0x7de518a0"/>
        <function-ref name="toggle" scoped="" ref="0x7de51980"/>
        <function-ref name="isOutput" scoped="" ref="0x7de51a60"/>
        <function-ref name="get" scoped="" ref="0x7de51b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de51c20"/>
        <function-ref name="set" scoped="" ref="0x7de51d00"/>
        <function-ref name="clr" scoped="" ref="0x7de51de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7de260b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7de260b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de26288"/>
        <function-ref name="isInput" scoped="" ref="0x7de26368"/>
        <function-ref name="toggle" scoped="" ref="0x7de26448"/>
        <function-ref name="isOutput" scoped="" ref="0x7de26528"/>
        <function-ref name="get" scoped="" ref="0x7de26608"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de266e8"/>
        <function-ref name="set" scoped="" ref="0x7de267c8"/>
        <function-ref name="clr" scoped="" ref="0x7de268a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7de25a88" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7de25a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de25c60"/>
        <function-ref name="isInput" scoped="" ref="0x7de25d40"/>
        <function-ref name="toggle" scoped="" ref="0x7de25e20"/>
        <function-ref name="isOutput" scoped="" ref="0x7de25f00"/>
        <function-ref name="get" scoped="" ref="0x7de24010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de240f0"/>
        <function-ref name="set" scoped="" ref="0x7de241d0"/>
        <function-ref name="clr" scoped="" ref="0x7de242b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7de23538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7de23538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de23710"/>
        <function-ref name="isInput" scoped="" ref="0x7de237f0"/>
        <function-ref name="toggle" scoped="" ref="0x7de238d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7de239b0"/>
        <function-ref name="get" scoped="" ref="0x7de23a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de23b70"/>
        <function-ref name="set" scoped="" ref="0x7de23c50"/>
        <function-ref name="clr" scoped="" ref="0x7de23d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7de21010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7de21010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de211e8"/>
        <function-ref name="isInput" scoped="" ref="0x7de212c8"/>
        <function-ref name="toggle" scoped="" ref="0x7de213a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7de21488"/>
        <function-ref name="get" scoped="" ref="0x7de21568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de21648"/>
        <function-ref name="set" scoped="" ref="0x7de21728"/>
        <function-ref name="clr" scoped="" ref="0x7de21808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7de209e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7de209e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de20bc0"/>
        <function-ref name="isInput" scoped="" ref="0x7de20ca0"/>
        <function-ref name="toggle" scoped="" ref="0x7de20d80"/>
        <function-ref name="isOutput" scoped="" ref="0x7de20e60"/>
        <function-ref name="get" scoped="" ref="0x7de1e010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de1e0f0"/>
        <function-ref name="set" scoped="" ref="0x7de1e1d0"/>
        <function-ref name="clr" scoped="" ref="0x7de1e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7de1d538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7de1d538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de1d710"/>
        <function-ref name="isInput" scoped="" ref="0x7de1d7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7de1d8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7de1d9b0"/>
        <function-ref name="get" scoped="" ref="0x7de1da90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de1db70"/>
        <function-ref name="set" scoped="" ref="0x7de1dc50"/>
        <function-ref name="clr" scoped="" ref="0x7de1dd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7de1b010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7de1b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7de1b1e8"/>
        <function-ref name="isInput" scoped="" ref="0x7de1b2c8"/>
        <function-ref name="toggle" scoped="" ref="0x7de1b3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7de1b488"/>
        <function-ref name="get" scoped="" ref="0x7de1b568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7de1b648"/>
        <function-ref name="set" scoped="" ref="0x7de1b728"/>
        <function-ref name="clr" scoped="" ref="0x7de1b808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7eba5f28" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7eba5f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eba3110"/>
        <function-ref name="isInput" scoped="" ref="0x7eba31f0"/>
        <function-ref name="toggle" scoped="" ref="0x7eba32d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eba33b0"/>
        <function-ref name="get" scoped="" ref="0x7eba3490"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eba3570"/>
        <function-ref name="set" scoped="" ref="0x7eba3650"/>
        <function-ref name="clr" scoped="" ref="0x7eba3730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7eba2ba8" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7eba2ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eba2d80"/>
        <function-ref name="isInput" scoped="" ref="0x7eba2e60"/>
        <function-ref name="toggle" scoped="" ref="0x7eba1010"/>
        <function-ref name="isOutput" scoped="" ref="0x7eba10f0"/>
        <function-ref name="get" scoped="" ref="0x7eba11d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eba12b0"/>
        <function-ref name="set" scoped="" ref="0x7eba1390"/>
        <function-ref name="clr" scoped="" ref="0x7eba1470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7ebb0bc0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7ebb0bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ebb0d98"/>
        <function-ref name="isInput" scoped="" ref="0x7ebb0e78"/>
        <function-ref name="toggle" scoped="" ref="0x7eba5010"/>
        <function-ref name="isOutput" scoped="" ref="0x7eba50f0"/>
        <function-ref name="get" scoped="" ref="0x7eba51d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eba52b0"/>
        <function-ref name="set" scoped="" ref="0x7eba5390"/>
        <function-ref name="clr" scoped="" ref="0x7eba5470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7eba3890" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7eba3890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eba3a68"/>
        <function-ref name="isInput" scoped="" ref="0x7eba3b48"/>
        <function-ref name="toggle" scoped="" ref="0x7eba3c28"/>
        <function-ref name="isOutput" scoped="" ref="0x7eba3d08"/>
        <function-ref name="get" scoped="" ref="0x7eba3de8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eba3ec8"/>
        <function-ref name="set" scoped="" ref="0x7eba2010"/>
        <function-ref name="clr" scoped="" ref="0x7eba20f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7eba15d0" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7eba15d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eba17a8"/>
        <function-ref name="isInput" scoped="" ref="0x7eba1888"/>
        <function-ref name="toggle" scoped="" ref="0x7eba1968"/>
        <function-ref name="isOutput" scoped="" ref="0x7eba1a48"/>
        <function-ref name="get" scoped="" ref="0x7eba1b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eba1c08"/>
        <function-ref name="set" scoped="" ref="0x7eba1ce8"/>
        <function-ref name="clr" scoped="" ref="0x7eba1dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7eba55d0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7eba55d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eba57a8"/>
        <function-ref name="isInput" scoped="" ref="0x7eba5888"/>
        <function-ref name="toggle" scoped="" ref="0x7eba5968"/>
        <function-ref name="isOutput" scoped="" ref="0x7eba5a48"/>
        <function-ref name="get" scoped="" ref="0x7eba5b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eba5c08"/>
        <function-ref name="set" scoped="" ref="0x7eba5ce8"/>
        <function-ref name="clr" scoped="" ref="0x7eba5dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7eba2250" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7eba2250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eba2428"/>
        <function-ref name="isInput" scoped="" ref="0x7eba2508"/>
        <function-ref name="toggle" scoped="" ref="0x7eba25e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7eba26c8"/>
        <function-ref name="get" scoped="" ref="0x7eba27a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eba2888"/>
        <function-ref name="set" scoped="" ref="0x7eba2968"/>
        <function-ref name="clr" scoped="" ref="0x7eba2a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7eba1f28" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7eba1f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eba0110"/>
        <function-ref name="isInput" scoped="" ref="0x7eba01f0"/>
        <function-ref name="toggle" scoped="" ref="0x7eba02d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eba03b0"/>
        <function-ref name="get" scoped="" ref="0x7eba0490"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eba0570"/>
        <function-ref name="set" scoped="" ref="0x7eba0650"/>
        <function-ref name="clr" scoped="" ref="0x7eba0730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dde4d08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dde4d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dde4ee0"/>
        <function-ref name="isInput" scoped="" ref="0x7dde1010"/>
        <function-ref name="toggle" scoped="" ref="0x7dde10f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7dde11d0"/>
        <function-ref name="get" scoped="" ref="0x7dde12b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dde1390"/>
        <function-ref name="set" scoped="" ref="0x7dde1470"/>
        <function-ref name="clr" scoped="" ref="0x7dde1550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dde0718" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dde0718"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dde08f0"/>
        <function-ref name="isInput" scoped="" ref="0x7dde09d0"/>
        <function-ref name="toggle" scoped="" ref="0x7dde0ab0"/>
        <function-ref name="isOutput" scoped="" ref="0x7dde0b90"/>
        <function-ref name="get" scoped="" ref="0x7dde0c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dde0d50"/>
        <function-ref name="set" scoped="" ref="0x7dde0e30"/>
        <function-ref name="clr" scoped="" ref="0x7dde0f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ddde0f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ddde0f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ddde2d0"/>
        <function-ref name="isInput" scoped="" ref="0x7ddde3b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ddde490"/>
        <function-ref name="isOutput" scoped="" ref="0x7ddde570"/>
        <function-ref name="get" scoped="" ref="0x7ddde650"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ddde730"/>
        <function-ref name="set" scoped="" ref="0x7ddde810"/>
        <function-ref name="clr" scoped="" ref="0x7ddde8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ddddac8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ddddac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ddddca0"/>
        <function-ref name="isInput" scoped="" ref="0x7ddddd80"/>
        <function-ref name="toggle" scoped="" ref="0x7dddde60"/>
        <function-ref name="isOutput" scoped="" ref="0x7dddc010"/>
        <function-ref name="get" scoped="" ref="0x7dddc0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dddc1d0"/>
        <function-ref name="set" scoped="" ref="0x7dddc2b0"/>
        <function-ref name="clr" scoped="" ref="0x7dddc390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dddb570" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dddb570"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dddb748"/>
        <function-ref name="isInput" scoped="" ref="0x7dddb828"/>
        <function-ref name="toggle" scoped="" ref="0x7dddb908"/>
        <function-ref name="isOutput" scoped="" ref="0x7dddb9e8"/>
        <function-ref name="get" scoped="" ref="0x7dddbac8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dddbba8"/>
        <function-ref name="set" scoped="" ref="0x7dddbc88"/>
        <function-ref name="clr" scoped="" ref="0x7dddbd68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ddd9010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ddd9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ddd91e8"/>
        <function-ref name="isInput" scoped="" ref="0x7ddd92c8"/>
        <function-ref name="toggle" scoped="" ref="0x7ddd93a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ddd9488"/>
        <function-ref name="get" scoped="" ref="0x7ddd9568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ddd9648"/>
        <function-ref name="set" scoped="" ref="0x7ddd9728"/>
        <function-ref name="clr" scoped="" ref="0x7ddd9808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ddd89e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ddd89e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ddd8bc0"/>
        <function-ref name="isInput" scoped="" ref="0x7ddd8ca0"/>
        <function-ref name="toggle" scoped="" ref="0x7ddd8d80"/>
        <function-ref name="isOutput" scoped="" ref="0x7ddd8e60"/>
        <function-ref name="get" scoped="" ref="0x7ddd7010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ddd70f0"/>
        <function-ref name="set" scoped="" ref="0x7ddd71d0"/>
        <function-ref name="clr" scoped="" ref="0x7ddd72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ddd6538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ddd6538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ddd6710"/>
        <function-ref name="isInput" scoped="" ref="0x7ddd67f0"/>
        <function-ref name="toggle" scoped="" ref="0x7ddd68d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ddd69b0"/>
        <function-ref name="get" scoped="" ref="0x7ddd6a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ddd6b70"/>
        <function-ref name="set" scoped="" ref="0x7ddd6c50"/>
        <function-ref name="clr" scoped="" ref="0x7ddd6d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7eb925d0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7eb925d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb927a8"/>
        <function-ref name="isInput" scoped="" ref="0x7eb92888"/>
        <function-ref name="toggle" scoped="" ref="0x7eb92968"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb92a48"/>
        <function-ref name="get" scoped="" ref="0x7eb92b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb92c08"/>
        <function-ref name="set" scoped="" ref="0x7eb92ce8"/>
        <function-ref name="clr" scoped="" ref="0x7eb92dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7eb85250" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7eb85250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb85428"/>
        <function-ref name="isInput" scoped="" ref="0x7eb85508"/>
        <function-ref name="toggle" scoped="" ref="0x7eb855e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb856c8"/>
        <function-ref name="get" scoped="" ref="0x7eb857a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb85888"/>
        <function-ref name="set" scoped="" ref="0x7eb85968"/>
        <function-ref name="clr" scoped="" ref="0x7eb85a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7eb932a0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7eb932a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb93478"/>
        <function-ref name="isInput" scoped="" ref="0x7eb93558"/>
        <function-ref name="toggle" scoped="" ref="0x7eb93638"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb93718"/>
        <function-ref name="get" scoped="" ref="0x7eb937f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb938d8"/>
        <function-ref name="set" scoped="" ref="0x7eb939b8"/>
        <function-ref name="clr" scoped="" ref="0x7eb93a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7eb92f28" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7eb92f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb91110"/>
        <function-ref name="isInput" scoped="" ref="0x7eb911f0"/>
        <function-ref name="toggle" scoped="" ref="0x7eb912d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb913b0"/>
        <function-ref name="get" scoped="" ref="0x7eb91490"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb91570"/>
        <function-ref name="set" scoped="" ref="0x7eb91650"/>
        <function-ref name="clr" scoped="" ref="0x7eb91730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7eb85ba8" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7eb85ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb85d80"/>
        <function-ref name="isInput" scoped="" ref="0x7eb85e60"/>
        <function-ref name="toggle" scoped="" ref="0x7eb84010"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb840f0"/>
        <function-ref name="get" scoped="" ref="0x7eb841d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb842b0"/>
        <function-ref name="set" scoped="" ref="0x7eb84390"/>
        <function-ref name="clr" scoped="" ref="0x7eb84470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7eb93bf8" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7eb93bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb93dd0"/>
        <function-ref name="isInput" scoped="" ref="0x7eb93eb0"/>
        <function-ref name="toggle" scoped="" ref="0x7eb92010"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb920f0"/>
        <function-ref name="get" scoped="" ref="0x7eb921d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb922b0"/>
        <function-ref name="set" scoped="" ref="0x7eb92390"/>
        <function-ref name="clr" scoped="" ref="0x7eb92470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7eb91890" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7eb91890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb91a68"/>
        <function-ref name="isInput" scoped="" ref="0x7eb91b48"/>
        <function-ref name="toggle" scoped="" ref="0x7eb91c28"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb91d08"/>
        <function-ref name="get" scoped="" ref="0x7eb91de8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb91ec8"/>
        <function-ref name="set" scoped="" ref="0x7eb85010"/>
        <function-ref name="clr" scoped="" ref="0x7eb850f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7eb845d0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7eb845d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb847a8"/>
        <function-ref name="isInput" scoped="" ref="0x7eb84888"/>
        <function-ref name="toggle" scoped="" ref="0x7eb84968"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb84a48"/>
        <function-ref name="get" scoped="" ref="0x7eb84b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb84c08"/>
        <function-ref name="set" scoped="" ref="0x7eb84ce8"/>
        <function-ref name="clr" scoped="" ref="0x7eb84dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dd9b2b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dd9b2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dd9b488"/>
        <function-ref name="isInput" scoped="" ref="0x7dd9b568"/>
        <function-ref name="toggle" scoped="" ref="0x7dd9b648"/>
        <function-ref name="isOutput" scoped="" ref="0x7dd9b728"/>
        <function-ref name="get" scoped="" ref="0x7dd9b808"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dd9b8e8"/>
        <function-ref name="set" scoped="" ref="0x7dd9b9c8"/>
        <function-ref name="clr" scoped="" ref="0x7dd9baa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dd9ac78" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dd9ac78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dd9ae50"/>
        <function-ref name="isInput" scoped="" ref="0x7dd99010"/>
        <function-ref name="toggle" scoped="" ref="0x7dd990f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7dd991d0"/>
        <function-ref name="get" scoped="" ref="0x7dd992b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dd99390"/>
        <function-ref name="set" scoped="" ref="0x7dd99470"/>
        <function-ref name="clr" scoped="" ref="0x7dd99550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dd98718" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dd98718"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dd988f0"/>
        <function-ref name="isInput" scoped="" ref="0x7dd989d0"/>
        <function-ref name="toggle" scoped="" ref="0x7dd98ab0"/>
        <function-ref name="isOutput" scoped="" ref="0x7dd98b90"/>
        <function-ref name="get" scoped="" ref="0x7dd98c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dd98d50"/>
        <function-ref name="set" scoped="" ref="0x7dd98e30"/>
        <function-ref name="clr" scoped="" ref="0x7dd98f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dd960f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dd960f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dd962d0"/>
        <function-ref name="isInput" scoped="" ref="0x7dd963b0"/>
        <function-ref name="toggle" scoped="" ref="0x7dd96490"/>
        <function-ref name="isOutput" scoped="" ref="0x7dd96570"/>
        <function-ref name="get" scoped="" ref="0x7dd96650"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dd96730"/>
        <function-ref name="set" scoped="" ref="0x7dd96810"/>
        <function-ref name="clr" scoped="" ref="0x7dd968f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dd95ac8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dd95ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dd95ca0"/>
        <function-ref name="isInput" scoped="" ref="0x7dd95d80"/>
        <function-ref name="toggle" scoped="" ref="0x7dd95e60"/>
        <function-ref name="isOutput" scoped="" ref="0x7dd94010"/>
        <function-ref name="get" scoped="" ref="0x7dd940f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dd941d0"/>
        <function-ref name="set" scoped="" ref="0x7dd942b0"/>
        <function-ref name="clr" scoped="" ref="0x7dd94390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dd93570" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dd93570"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dd93748"/>
        <function-ref name="isInput" scoped="" ref="0x7dd93828"/>
        <function-ref name="toggle" scoped="" ref="0x7dd93908"/>
        <function-ref name="isOutput" scoped="" ref="0x7dd939e8"/>
        <function-ref name="get" scoped="" ref="0x7dd93ac8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dd93ba8"/>
        <function-ref name="set" scoped="" ref="0x7dd93c88"/>
        <function-ref name="clr" scoped="" ref="0x7dd93d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dd91010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dd91010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dd911e8"/>
        <function-ref name="isInput" scoped="" ref="0x7dd912c8"/>
        <function-ref name="toggle" scoped="" ref="0x7dd913a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7dd91488"/>
        <function-ref name="get" scoped="" ref="0x7dd91568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dd91648"/>
        <function-ref name="set" scoped="" ref="0x7dd91728"/>
        <function-ref name="clr" scoped="" ref="0x7dd91808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dd909e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dd909e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dd90bc0"/>
        <function-ref name="isInput" scoped="" ref="0x7dd90ca0"/>
        <function-ref name="toggle" scoped="" ref="0x7dd90d80"/>
        <function-ref name="isOutput" scoped="" ref="0x7dd90e60"/>
        <function-ref name="get" scoped="" ref="0x7dd87010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dd870f0"/>
        <function-ref name="set" scoped="" ref="0x7dd871d0"/>
        <function-ref name="clr" scoped="" ref="0x7dd872b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7eb80c88" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7eb80c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb80e60"/>
        <function-ref name="isInput" scoped="" ref="0x7eb75010"/>
        <function-ref name="toggle" scoped="" ref="0x7eb750f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb751d0"/>
        <function-ref name="get" scoped="" ref="0x7eb752b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb75390"/>
        <function-ref name="set" scoped="" ref="0x7eb75470"/>
        <function-ref name="clr" scoped="" ref="0x7eb75550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7eb74988" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7eb74988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb74b60"/>
        <function-ref name="isInput" scoped="" ref="0x7eb74c40"/>
        <function-ref name="toggle" scoped="" ref="0x7eb74d20"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb74e00"/>
        <function-ref name="get" scoped="" ref="0x7eb74ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb73010"/>
        <function-ref name="set" scoped="" ref="0x7eb730f0"/>
        <function-ref name="clr" scoped="" ref="0x7eb731d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7eb819c0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7eb819c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb81b98"/>
        <function-ref name="isInput" scoped="" ref="0x7eb81c78"/>
        <function-ref name="toggle" scoped="" ref="0x7eb81d58"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb81e38"/>
        <function-ref name="get" scoped="" ref="0x7eb81f18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb80010"/>
        <function-ref name="set" scoped="" ref="0x7eb800f0"/>
        <function-ref name="clr" scoped="" ref="0x7eb801d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7eb756b0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7eb756b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb75888"/>
        <function-ref name="isInput" scoped="" ref="0x7eb75968"/>
        <function-ref name="toggle" scoped="" ref="0x7eb75a48"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb75b28"/>
        <function-ref name="get" scoped="" ref="0x7eb75c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb75ce8"/>
        <function-ref name="set" scoped="" ref="0x7eb75dc8"/>
        <function-ref name="clr" scoped="" ref="0x7eb75ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7eb73330" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7eb73330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb73508"/>
        <function-ref name="isInput" scoped="" ref="0x7eb735e8"/>
        <function-ref name="toggle" scoped="" ref="0x7eb736c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb737a8"/>
        <function-ref name="get" scoped="" ref="0x7eb73888"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb73968"/>
        <function-ref name="set" scoped="" ref="0x7eb73a48"/>
        <function-ref name="clr" scoped="" ref="0x7eb73b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7eb80330" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7eb80330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb80508"/>
        <function-ref name="isInput" scoped="" ref="0x7eb805e8"/>
        <function-ref name="toggle" scoped="" ref="0x7eb806c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb807a8"/>
        <function-ref name="get" scoped="" ref="0x7eb80888"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb80968"/>
        <function-ref name="set" scoped="" ref="0x7eb80a48"/>
        <function-ref name="clr" scoped="" ref="0x7eb80b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7eb74030" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7eb74030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb74208"/>
        <function-ref name="isInput" scoped="" ref="0x7eb742e8"/>
        <function-ref name="toggle" scoped="" ref="0x7eb743c8"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb744a8"/>
        <function-ref name="get" scoped="" ref="0x7eb74588"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb74668"/>
        <function-ref name="set" scoped="" ref="0x7eb74748"/>
        <function-ref name="clr" scoped="" ref="0x7eb74828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7eb73c88" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7eb73c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb73e60"/>
        <function-ref name="isInput" scoped="" ref="0x7eb72010"/>
        <function-ref name="toggle" scoped="" ref="0x7eb720f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb721d0"/>
        <function-ref name="get" scoped="" ref="0x7eb722b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb72390"/>
        <function-ref name="set" scoped="" ref="0x7eb72470"/>
        <function-ref name="clr" scoped="" ref="0x7eb72550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dd587f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dd587f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dd589d0"/>
        <function-ref name="isInput" scoped="" ref="0x7dd58ab0"/>
        <function-ref name="toggle" scoped="" ref="0x7dd58b90"/>
        <function-ref name="isOutput" scoped="" ref="0x7dd58c70"/>
        <function-ref name="get" scoped="" ref="0x7dd58d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dd58e30"/>
        <function-ref name="set" scoped="" ref="0x7dd58f10"/>
        <function-ref name="clr" scoped="" ref="0x7dd57010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dd56228" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dd56228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dd56400"/>
        <function-ref name="isInput" scoped="" ref="0x7dd564e0"/>
        <function-ref name="toggle" scoped="" ref="0x7dd565c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7dd566a0"/>
        <function-ref name="get" scoped="" ref="0x7dd56780"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dd56860"/>
        <function-ref name="set" scoped="" ref="0x7dd56940"/>
        <function-ref name="clr" scoped="" ref="0x7dd56a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dd55c08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dd55c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dd55de0"/>
        <function-ref name="isInput" scoped="" ref="0x7dd55ec0"/>
        <function-ref name="toggle" scoped="" ref="0x7dd54010"/>
        <function-ref name="isOutput" scoped="" ref="0x7dd540f0"/>
        <function-ref name="get" scoped="" ref="0x7dd541d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dd542b0"/>
        <function-ref name="set" scoped="" ref="0x7dd54390"/>
        <function-ref name="clr" scoped="" ref="0x7dd54470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dd536c0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dd536c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dd53898"/>
        <function-ref name="isInput" scoped="" ref="0x7dd53978"/>
        <function-ref name="toggle" scoped="" ref="0x7dd53a58"/>
        <function-ref name="isOutput" scoped="" ref="0x7dd53b38"/>
        <function-ref name="get" scoped="" ref="0x7dd53c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dd53cf8"/>
        <function-ref name="set" scoped="" ref="0x7dd53dd8"/>
        <function-ref name="clr" scoped="" ref="0x7dd53eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dd510b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dd510b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dd51288"/>
        <function-ref name="isInput" scoped="" ref="0x7dd51368"/>
        <function-ref name="toggle" scoped="" ref="0x7dd51448"/>
        <function-ref name="isOutput" scoped="" ref="0x7dd51528"/>
        <function-ref name="get" scoped="" ref="0x7dd51608"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dd516e8"/>
        <function-ref name="set" scoped="" ref="0x7dd517c8"/>
        <function-ref name="clr" scoped="" ref="0x7dd518a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dd50a88" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dd50a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dd50c60"/>
        <function-ref name="isInput" scoped="" ref="0x7dd50d40"/>
        <function-ref name="toggle" scoped="" ref="0x7dd50e20"/>
        <function-ref name="isOutput" scoped="" ref="0x7dd50f00"/>
        <function-ref name="get" scoped="" ref="0x7dd46010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dd460f0"/>
        <function-ref name="set" scoped="" ref="0x7dd461d0"/>
        <function-ref name="clr" scoped="" ref="0x7dd462b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dd45538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dd45538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dd45710"/>
        <function-ref name="isInput" scoped="" ref="0x7dd457f0"/>
        <function-ref name="toggle" scoped="" ref="0x7dd458d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7dd459b0"/>
        <function-ref name="get" scoped="" ref="0x7dd45a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dd45b70"/>
        <function-ref name="set" scoped="" ref="0x7dd45c50"/>
        <function-ref name="clr" scoped="" ref="0x7dd45d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dd43010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dd43010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dd431e8"/>
        <function-ref name="isInput" scoped="" ref="0x7dd432c8"/>
        <function-ref name="toggle" scoped="" ref="0x7dd433a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7dd43488"/>
        <function-ref name="get" scoped="" ref="0x7dd43568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dd43648"/>
        <function-ref name="set" scoped="" ref="0x7dd43728"/>
        <function-ref name="clr" scoped="" ref="0x7dd43808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7eb63410" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7eb63410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb635e8"/>
        <function-ref name="isInput" scoped="" ref="0x7eb636c8"/>
        <function-ref name="toggle" scoped="" ref="0x7eb637a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb63888"/>
        <function-ref name="get" scoped="" ref="0x7eb63968"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb63a48"/>
        <function-ref name="set" scoped="" ref="0x7eb63b28"/>
        <function-ref name="clr" scoped="" ref="0x7eb63c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7eb61170" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7eb61170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb61348"/>
        <function-ref name="isInput" scoped="" ref="0x7eb61428"/>
        <function-ref name="toggle" scoped="" ref="0x7eb61508"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb615e8"/>
        <function-ref name="get" scoped="" ref="0x7eb616c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb617a8"/>
        <function-ref name="set" scoped="" ref="0x7eb61888"/>
        <function-ref name="clr" scoped="" ref="0x7eb61968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7eb640c0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7eb640c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb64298"/>
        <function-ref name="isInput" scoped="" ref="0x7eb64378"/>
        <function-ref name="toggle" scoped="" ref="0x7eb64458"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb64538"/>
        <function-ref name="get" scoped="" ref="0x7eb64618"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb646f8"/>
        <function-ref name="set" scoped="" ref="0x7eb647d8"/>
        <function-ref name="clr" scoped="" ref="0x7eb648b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7eb63d68" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7eb63d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb62010"/>
        <function-ref name="isInput" scoped="" ref="0x7eb620f0"/>
        <function-ref name="toggle" scoped="" ref="0x7eb621d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb622b0"/>
        <function-ref name="get" scoped="" ref="0x7eb62390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb62470"/>
        <function-ref name="set" scoped="" ref="0x7eb62550"/>
        <function-ref name="clr" scoped="" ref="0x7eb62630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7eb61ac8" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7eb61ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb61ca0"/>
        <function-ref name="isInput" scoped="" ref="0x7eb61d80"/>
        <function-ref name="toggle" scoped="" ref="0x7eb61e60"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb60010"/>
        <function-ref name="get" scoped="" ref="0x7eb600f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb601d0"/>
        <function-ref name="set" scoped="" ref="0x7eb602b0"/>
        <function-ref name="clr" scoped="" ref="0x7eb60390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7eb64a18" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7eb64a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb64bf0"/>
        <function-ref name="isInput" scoped="" ref="0x7eb64cd0"/>
        <function-ref name="toggle" scoped="" ref="0x7eb64db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb64e90"/>
        <function-ref name="get" scoped="" ref="0x7eb63010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb630f0"/>
        <function-ref name="set" scoped="" ref="0x7eb631d0"/>
        <function-ref name="clr" scoped="" ref="0x7eb632b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7eb62790" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7eb62790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb62968"/>
        <function-ref name="isInput" scoped="" ref="0x7eb62a48"/>
        <function-ref name="toggle" scoped="" ref="0x7eb62b28"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb62c08"/>
        <function-ref name="get" scoped="" ref="0x7eb62ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb62dc8"/>
        <function-ref name="set" scoped="" ref="0x7eb62ea8"/>
        <function-ref name="clr" scoped="" ref="0x7eb61010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7eb604f0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7eb604f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb606c8"/>
        <function-ref name="isInput" scoped="" ref="0x7eb607a8"/>
        <function-ref name="toggle" scoped="" ref="0x7eb60888"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb60968"/>
        <function-ref name="get" scoped="" ref="0x7eb60a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb60b28"/>
        <function-ref name="set" scoped="" ref="0x7eb60c08"/>
        <function-ref name="clr" scoped="" ref="0x7eb60ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dd135e0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dd135e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dd137b8"/>
        <function-ref name="isInput" scoped="" ref="0x7dd13898"/>
        <function-ref name="toggle" scoped="" ref="0x7dd13978"/>
        <function-ref name="isOutput" scoped="" ref="0x7dd13a58"/>
        <function-ref name="get" scoped="" ref="0x7dd13b38"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dd13c18"/>
        <function-ref name="set" scoped="" ref="0x7dd13cf8"/>
        <function-ref name="clr" scoped="" ref="0x7dd13dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dd110b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dd110b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dd11288"/>
        <function-ref name="isInput" scoped="" ref="0x7dd11368"/>
        <function-ref name="toggle" scoped="" ref="0x7dd11448"/>
        <function-ref name="isOutput" scoped="" ref="0x7dd11528"/>
        <function-ref name="get" scoped="" ref="0x7dd11608"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dd116e8"/>
        <function-ref name="set" scoped="" ref="0x7dd117c8"/>
        <function-ref name="clr" scoped="" ref="0x7dd118a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dd10a88" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dd10a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dd10c60"/>
        <function-ref name="isInput" scoped="" ref="0x7dd10d40"/>
        <function-ref name="toggle" scoped="" ref="0x7dd10e20"/>
        <function-ref name="isOutput" scoped="" ref="0x7dd10f00"/>
        <function-ref name="get" scoped="" ref="0x7dd07010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dd070f0"/>
        <function-ref name="set" scoped="" ref="0x7dd071d0"/>
        <function-ref name="clr" scoped="" ref="0x7dd072b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dd06538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dd06538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dd06710"/>
        <function-ref name="isInput" scoped="" ref="0x7dd067f0"/>
        <function-ref name="toggle" scoped="" ref="0x7dd068d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7dd069b0"/>
        <function-ref name="get" scoped="" ref="0x7dd06a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dd06b70"/>
        <function-ref name="set" scoped="" ref="0x7dd06c50"/>
        <function-ref name="clr" scoped="" ref="0x7dd06d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dd04010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dd04010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dd041e8"/>
        <function-ref name="isInput" scoped="" ref="0x7dd042c8"/>
        <function-ref name="toggle" scoped="" ref="0x7dd043a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7dd04488"/>
        <function-ref name="get" scoped="" ref="0x7dd04568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dd04648"/>
        <function-ref name="set" scoped="" ref="0x7dd04728"/>
        <function-ref name="clr" scoped="" ref="0x7dd04808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dd039e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dd039e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dd03bc0"/>
        <function-ref name="isInput" scoped="" ref="0x7dd03ca0"/>
        <function-ref name="toggle" scoped="" ref="0x7dd03d80"/>
        <function-ref name="isOutput" scoped="" ref="0x7dd03e60"/>
        <function-ref name="get" scoped="" ref="0x7dd02010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dd020f0"/>
        <function-ref name="set" scoped="" ref="0x7dd021d0"/>
        <function-ref name="clr" scoped="" ref="0x7dd022b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dd01538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dd01538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dd01710"/>
        <function-ref name="isInput" scoped="" ref="0x7dd017f0"/>
        <function-ref name="toggle" scoped="" ref="0x7dd018d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7dd019b0"/>
        <function-ref name="get" scoped="" ref="0x7dd01a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dd01b70"/>
        <function-ref name="set" scoped="" ref="0x7dd01c50"/>
        <function-ref name="clr" scoped="" ref="0x7dd01d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dcff010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dcff010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dcff1e8"/>
        <function-ref name="isInput" scoped="" ref="0x7dcff2c8"/>
        <function-ref name="toggle" scoped="" ref="0x7dcff3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7dcff488"/>
        <function-ref name="get" scoped="" ref="0x7dcff568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dcff648"/>
        <function-ref name="set" scoped="" ref="0x7dcff728"/>
        <function-ref name="clr" scoped="" ref="0x7dcff808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7eb519e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7eb519e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb51bc0"/>
        <function-ref name="isInput" scoped="" ref="0x7eb51ca0"/>
        <function-ref name="toggle" scoped="" ref="0x7eb51d80"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb51e60"/>
        <function-ref name="get" scoped="" ref="0x7eb50010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb500f0"/>
        <function-ref name="set" scoped="" ref="0x7eb501d0"/>
        <function-ref name="clr" scoped="" ref="0x7eb502b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7eb45790" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7eb45790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb45968"/>
        <function-ref name="isInput" scoped="" ref="0x7eb45a48"/>
        <function-ref name="toggle" scoped="" ref="0x7eb45b28"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb45c08"/>
        <function-ref name="get" scoped="" ref="0x7eb45ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb45dc8"/>
        <function-ref name="set" scoped="" ref="0x7eb45ea8"/>
        <function-ref name="clr" scoped="" ref="0x7eb44010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7eb526f8" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7eb526f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb528d0"/>
        <function-ref name="isInput" scoped="" ref="0x7eb529b0"/>
        <function-ref name="toggle" scoped="" ref="0x7eb52a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb52b70"/>
        <function-ref name="get" scoped="" ref="0x7eb52c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb52d30"/>
        <function-ref name="set" scoped="" ref="0x7eb52e10"/>
        <function-ref name="clr" scoped="" ref="0x7eb52ef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7eb50410" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7eb50410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb505e8"/>
        <function-ref name="isInput" scoped="" ref="0x7eb506c8"/>
        <function-ref name="toggle" scoped="" ref="0x7eb507a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb50888"/>
        <function-ref name="get" scoped="" ref="0x7eb50968"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb50a48"/>
        <function-ref name="set" scoped="" ref="0x7eb50b28"/>
        <function-ref name="clr" scoped="" ref="0x7eb50c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7eb44170" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7eb44170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb44348"/>
        <function-ref name="isInput" scoped="" ref="0x7eb44428"/>
        <function-ref name="toggle" scoped="" ref="0x7eb44508"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb445e8"/>
        <function-ref name="get" scoped="" ref="0x7eb446c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb447a8"/>
        <function-ref name="set" scoped="" ref="0x7eb44888"/>
        <function-ref name="clr" scoped="" ref="0x7eb44968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7eb51090" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7eb51090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb51268"/>
        <function-ref name="isInput" scoped="" ref="0x7eb51348"/>
        <function-ref name="toggle" scoped="" ref="0x7eb51428"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb51508"/>
        <function-ref name="get" scoped="" ref="0x7eb515e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb516c8"/>
        <function-ref name="set" scoped="" ref="0x7eb517a8"/>
        <function-ref name="clr" scoped="" ref="0x7eb51888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7eb50d68" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7eb50d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb45010"/>
        <function-ref name="isInput" scoped="" ref="0x7eb450f0"/>
        <function-ref name="toggle" scoped="" ref="0x7eb451d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb452b0"/>
        <function-ref name="get" scoped="" ref="0x7eb45390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb45470"/>
        <function-ref name="set" scoped="" ref="0x7eb45550"/>
        <function-ref name="clr" scoped="" ref="0x7eb45630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7eb44ac8" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7eb44ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb44ca0"/>
        <function-ref name="isInput" scoped="" ref="0x7eb44d80"/>
        <function-ref name="toggle" scoped="" ref="0x7eb44e60"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb43010"/>
        <function-ref name="get" scoped="" ref="0x7eb430f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb431d0"/>
        <function-ref name="set" scoped="" ref="0x7eb432b0"/>
        <function-ref name="clr" scoped="" ref="0x7eb43390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dcd2d08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dcd2d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dcd2ee0"/>
        <function-ref name="isInput" scoped="" ref="0x7dcc8010"/>
        <function-ref name="toggle" scoped="" ref="0x7dcc80f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7dcc81d0"/>
        <function-ref name="get" scoped="" ref="0x7dcc82b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dcc8390"/>
        <function-ref name="set" scoped="" ref="0x7dcc8470"/>
        <function-ref name="clr" scoped="" ref="0x7dcc8550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dcc7718" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dcc7718"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dcc78f0"/>
        <function-ref name="isInput" scoped="" ref="0x7dcc79d0"/>
        <function-ref name="toggle" scoped="" ref="0x7dcc7ab0"/>
        <function-ref name="isOutput" scoped="" ref="0x7dcc7b90"/>
        <function-ref name="get" scoped="" ref="0x7dcc7c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dcc7d50"/>
        <function-ref name="set" scoped="" ref="0x7dcc7e30"/>
        <function-ref name="clr" scoped="" ref="0x7dcc7f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dcc50f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dcc50f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dcc52d0"/>
        <function-ref name="isInput" scoped="" ref="0x7dcc53b0"/>
        <function-ref name="toggle" scoped="" ref="0x7dcc5490"/>
        <function-ref name="isOutput" scoped="" ref="0x7dcc5570"/>
        <function-ref name="get" scoped="" ref="0x7dcc5650"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dcc5730"/>
        <function-ref name="set" scoped="" ref="0x7dcc5810"/>
        <function-ref name="clr" scoped="" ref="0x7dcc58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dcc4ac8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dcc4ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dcc4ca0"/>
        <function-ref name="isInput" scoped="" ref="0x7dcc4d80"/>
        <function-ref name="toggle" scoped="" ref="0x7dcc4e60"/>
        <function-ref name="isOutput" scoped="" ref="0x7dcc3010"/>
        <function-ref name="get" scoped="" ref="0x7dcc30f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dcc31d0"/>
        <function-ref name="set" scoped="" ref="0x7dcc32b0"/>
        <function-ref name="clr" scoped="" ref="0x7dcc3390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dcc2570" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dcc2570"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dcc2748"/>
        <function-ref name="isInput" scoped="" ref="0x7dcc2828"/>
        <function-ref name="toggle" scoped="" ref="0x7dcc2908"/>
        <function-ref name="isOutput" scoped="" ref="0x7dcc29e8"/>
        <function-ref name="get" scoped="" ref="0x7dcc2ac8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dcc2ba8"/>
        <function-ref name="set" scoped="" ref="0x7dcc2c88"/>
        <function-ref name="clr" scoped="" ref="0x7dcc2d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dcc0010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dcc0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dcc01e8"/>
        <function-ref name="isInput" scoped="" ref="0x7dcc02c8"/>
        <function-ref name="toggle" scoped="" ref="0x7dcc03a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7dcc0488"/>
        <function-ref name="get" scoped="" ref="0x7dcc0568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dcc0648"/>
        <function-ref name="set" scoped="" ref="0x7dcc0728"/>
        <function-ref name="clr" scoped="" ref="0x7dcc0808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dcbf9e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dcbf9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dcbfbc0"/>
        <function-ref name="isInput" scoped="" ref="0x7dcbfca0"/>
        <function-ref name="toggle" scoped="" ref="0x7dcbfd80"/>
        <function-ref name="isOutput" scoped="" ref="0x7dcbfe60"/>
        <function-ref name="get" scoped="" ref="0x7dcbe010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dcbe0f0"/>
        <function-ref name="set" scoped="" ref="0x7dcbe1d0"/>
        <function-ref name="clr" scoped="" ref="0x7dcbe2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7dcbd538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7dcbd538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7dcbd710"/>
        <function-ref name="isInput" scoped="" ref="0x7dcbd7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7dcbd8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7dcbd9b0"/>
        <function-ref name="get" scoped="" ref="0x7dcbda90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7dcbdb70"/>
        <function-ref name="set" scoped="" ref="0x7dcbdc50"/>
        <function-ref name="clr" scoped="" ref="0x7dcbdd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7eb35228" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7eb35228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb35400"/>
        <function-ref name="isInput" scoped="" ref="0x7eb354e0"/>
        <function-ref name="toggle" scoped="" ref="0x7eb355c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb356a0"/>
        <function-ref name="get" scoped="" ref="0x7eb35780"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb35860"/>
        <function-ref name="set" scoped="" ref="0x7eb35940"/>
        <function-ref name="clr" scoped="" ref="0x7eb35a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7eb145e8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7eb145e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb147c0"/>
        <function-ref name="isInput" scoped="" ref="0x7eb148a0"/>
        <function-ref name="toggle" scoped="" ref="0x7eb14980"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb14a60"/>
        <function-ref name="get" scoped="" ref="0x7eb14b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb14c20"/>
        <function-ref name="set" scoped="" ref="0x7eb14d00"/>
        <function-ref name="clr" scoped="" ref="0x7eb14de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7eb11a90" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7eb11a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb11c68"/>
        <function-ref name="isInput" scoped="" ref="0x7eb11d48"/>
        <function-ref name="toggle" scoped="" ref="0x7eb11e28"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb11f08"/>
        <function-ref name="get" scoped="" ref="0x7eb10010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb100f0"/>
        <function-ref name="set" scoped="" ref="0x7eb101d0"/>
        <function-ref name="clr" scoped="" ref="0x7eb102b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7eb05e60" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7eb05e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb04050"/>
        <function-ref name="isInput" scoped="" ref="0x7eb04130"/>
        <function-ref name="toggle" scoped="" ref="0x7eb04210"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb042f0"/>
        <function-ref name="get" scoped="" ref="0x7eb043d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb044b0"/>
        <function-ref name="set" scoped="" ref="0x7eb04590"/>
        <function-ref name="clr" scoped="" ref="0x7eb04670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7eb01228" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7eb01228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eb01400"/>
        <function-ref name="isInput" scoped="" ref="0x7eb014e0"/>
        <function-ref name="toggle" scoped="" ref="0x7eb015c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7eb016a0"/>
        <function-ref name="get" scoped="" ref="0x7eb01780"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eb01860"/>
        <function-ref name="set" scoped="" ref="0x7eb01940"/>
        <function-ref name="clr" scoped="" ref="0x7eb01a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7eaf55e8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7eaf55e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eaf57c0"/>
        <function-ref name="isInput" scoped="" ref="0x7eaf58a0"/>
        <function-ref name="toggle" scoped="" ref="0x7eaf5980"/>
        <function-ref name="isOutput" scoped="" ref="0x7eaf5a60"/>
        <function-ref name="get" scoped="" ref="0x7eaf5b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eaf5c20"/>
        <function-ref name="set" scoped="" ref="0x7eaf5d00"/>
        <function-ref name="clr" scoped="" ref="0x7eaf5de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7eaf3b10" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7eaf3b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eaf3ce8"/>
        <function-ref name="isInput" scoped="" ref="0x7eaf3dc8"/>
        <function-ref name="toggle" scoped="" ref="0x7eaf3ea8"/>
        <function-ref name="isOutput" scoped="" ref="0x7eaf1010"/>
        <function-ref name="get" scoped="" ref="0x7eaf10f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eaf11d0"/>
        <function-ref name="set" scoped="" ref="0x7eaf12b0"/>
        <function-ref name="clr" scoped="" ref="0x7eaf1390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7eae6010" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7eae6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eae61e8"/>
        <function-ref name="isInput" scoped="" ref="0x7eae62c8"/>
        <function-ref name="toggle" scoped="" ref="0x7eae63a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7eae6488"/>
        <function-ref name="get" scoped="" ref="0x7eae6568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eae6648"/>
        <function-ref name="set" scoped="" ref="0x7eae6728"/>
        <function-ref name="clr" scoped="" ref="0x7eae6808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7eae42d8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7eae42d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eae44b0"/>
        <function-ref name="isInput" scoped="" ref="0x7eae4590"/>
        <function-ref name="toggle" scoped="" ref="0x7eae4670"/>
        <function-ref name="isOutput" scoped="" ref="0x7eae4750"/>
        <function-ref name="get" scoped="" ref="0x7eae4830"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eae4910"/>
        <function-ref name="set" scoped="" ref="0x7eae49f0"/>
        <function-ref name="clr" scoped="" ref="0x7eae4ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7eae1590" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7eae1590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7eae1768"/>
        <function-ref name="isInput" scoped="" ref="0x7eae1848"/>
        <function-ref name="toggle" scoped="" ref="0x7eae1928"/>
        <function-ref name="isOutput" scoped="" ref="0x7eae1a08"/>
        <function-ref name="get" scoped="" ref="0x7eae1ae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7eae1bc8"/>
        <function-ref name="set" scoped="" ref="0x7eae1ca8"/>
        <function-ref name="clr" scoped="" ref="0x7eae1d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ead6880" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ead6880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ead6a58"/>
        <function-ref name="isInput" scoped="" ref="0x7ead6b38"/>
        <function-ref name="toggle" scoped="" ref="0x7ead6c18"/>
        <function-ref name="isOutput" scoped="" ref="0x7ead6cf8"/>
        <function-ref name="get" scoped="" ref="0x7ead6dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ead6eb8"/>
        <function-ref name="set" scoped="" ref="0x7ead5010"/>
        <function-ref name="clr" scoped="" ref="0x7ead50f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ead3bc0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ead3bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ead3d98"/>
        <function-ref name="isInput" scoped="" ref="0x7ead3e78"/>
        <function-ref name="toggle" scoped="" ref="0x7ead2010"/>
        <function-ref name="isOutput" scoped="" ref="0x7ead20f0"/>
        <function-ref name="get" scoped="" ref="0x7ead21d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ead22b0"/>
        <function-ref name="set" scoped="" ref="0x7ead2390"/>
        <function-ref name="clr" scoped="" ref="0x7ead2470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ead1f20" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7ead1f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ead0110"/>
        <function-ref name="isInput" scoped="" ref="0x7ead01f0"/>
        <function-ref name="toggle" scoped="" ref="0x7ead02d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ead03b0"/>
        <function-ref name="get" scoped="" ref="0x7ead0490"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ead0570"/>
        <function-ref name="set" scoped="" ref="0x7ead0650"/>
        <function-ref name="clr" scoped="" ref="0x7ead0730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7ea75a40" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="Ch8_Dimmer_181C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7ea75a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120888"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120a08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e837368"/>
        <function-ref name="fired" scoped="" ref="0x7ea74768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ea74d08"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ea74b28"/>
        <function-ref name="getdt" scoped="" ref="0x7e837728"/>
        <function-ref name="gett0" scoped="" ref="0x7e837548"/>
        <function-ref name="isRunning" scoped="" ref="0x7ea74948"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ea74088"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e837048"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ea74308"/>
        <function-ref name="stop" scoped="" ref="0x7ea74588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7ea63848" loc="38:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7ea63848"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120888"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120a08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ea61170"/>
        <function-ref name="fired" scoped="" ref="0x7ea62570"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ea62b10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ea62930"/>
        <function-ref name="getdt" scoped="" ref="0x7ea61530"/>
        <function-ref name="gett0" scoped="" ref="0x7ea61350"/>
        <function-ref name="isRunning" scoped="" ref="0x7ea62750"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ea63e70"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ea62e30"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ea62110"/>
        <function-ref name="stop" scoped="" ref="0x7ea62390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7ea52100" loc="35:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7ea52100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120888"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120a08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ea51a10"/>
        <function-ref name="fired" scoped="" ref="0x7ea52e08"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ea513d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ea511f0"/>
        <function-ref name="getdt" scoped="" ref="0x7ea51dd0"/>
        <function-ref name="gett0" scoped="" ref="0x7ea51bf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7ea51010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ea52728"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ea516f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ea529a8"/>
        <function-ref name="stop" scoped="" ref="0x7ea52c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7ea429b0" loc="36:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7ea429b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120888"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120a08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ea44010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ea53988" loc="34:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7ea53988"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ea53b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x7ea161f0" loc="26:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x7ea161f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120888"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120a08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ea16940"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ea16d40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ea16b40"/>
        <function-ref name="overflow" scoped="" ref="0x7ea23010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ea36730" loc="24:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7ea36730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ea36908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x7ea25398" loc="25:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x7ea25398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120888"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120a08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ea34750"/>
        <function-ref name="fired" scoped="" ref="0x7ea34010"/>
        <function-ref name="startAt" scoped="" ref="0x7ea34410"/>
        <function-ref name="isRunning" scoped="" ref="0x7ea34210"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ea34950"/>
        <function-ref name="start" scoped="" ref="0x7ea25ae8"/>
        <function-ref name="stop" scoped="" ref="0x7ea25d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7e9f2d90" loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7e9f2d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7e9f6010"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7e9f60f0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7e9f61d0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7e9f62b0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7e9f6390"/>
        <function-ref name="setControl" scoped="" ref="0x7e9f6470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ea13708" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7ea13708"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f2500e0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f2500e0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ea138e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7e9e3348" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7e9e3348"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7e9f1648"/>
        <function-ref name="fired" scoped="" ref="0x7e9e3e30"/>
        <function-ref name="get" scoped="" ref="0x7e9e3990"/>
        <function-ref name="reset" scoped="" ref="0x7e9f1048"/>
        <function-ref name="isOn" scoped="" ref="0x7e9f1848"/>
        <function-ref name="set" scoped="" ref="0x7e9e3b90"/>
        <function-ref name="start" scoped="" ref="0x7e9f1248"/>
        <function-ref name="stop" scoped="" ref="0x7e9f1448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7ea025f0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7ea025f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7ea10cf8"/>
        <function-ref name="test" scoped="" ref="0x7ea108f8"/>
        <function-ref name="get" scoped="" ref="0x7ea02c38"/>
        <function-ref name="setScale" scoped="" ref="0x7ea10ef8"/>
        <function-ref name="getScale" scoped="" ref="0x7ea061c0"/>
        <function-ref name="reset" scoped="" ref="0x7ea102f8"/>
        <function-ref name="overflow" scoped="" ref="0x7ea100f8"/>
        <function-ref name="isOn" scoped="" ref="0x7ea10af8"/>
        <function-ref name="set" scoped="" ref="0x7ea02e38"/>
        <function-ref name="start" scoped="" ref="0x7ea104f8"/>
        <function-ref name="stop" scoped="" ref="0x7ea106f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e992580" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="AlarmCounterMilliP.MilliInit"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e992580"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f2500e0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f2500e0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e992758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7e992968" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="AlarmCounterMilliP.MilliInit"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e992968"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7e9810d8"/>
        <function-ref name="test" scoped="" ref="0x7e982cb0"/>
        <function-ref name="get" scoped="" ref="0x7e982010"/>
        <function-ref name="setScale" scoped="" ref="0x7e9812d8"/>
        <function-ref name="getScale" scoped="" ref="0x7e981578"/>
        <function-ref name="reset" scoped="" ref="0x7e9826b0"/>
        <function-ref name="overflow" scoped="" ref="0x7e9824b0"/>
        <function-ref name="isOn" scoped="" ref="0x7e982eb0"/>
        <function-ref name="set" scoped="" ref="0x7e982210"/>
        <function-ref name="start" scoped="" ref="0x7e9828b0"/>
        <function-ref name="stop" scoped="" ref="0x7e982ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7e976f20" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmCounterMilliP.MilliAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7e976f20"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x7f251f28"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x7f251f28"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120888"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120a08"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e953278"/>
        <function-ref name="fired" scoped="" ref="0x7e975b28"/>
        <function-ref name="startAt" scoped="" ref="0x7e975f28"/>
        <function-ref name="isRunning" scoped="" ref="0x7e975d28"/>
        <function-ref name="getAlarm" scoped="" ref="0x7e953478"/>
        <function-ref name="start" scoped="" ref="0x7e975688"/>
        <function-ref name="stop" scoped="" ref="0x7e975928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x7e9504f8" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmCounterMilliP.MilliAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x7e9504f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7e946810"/>
        <function-ref name="fired" scoped="" ref="0x7e946010"/>
        <function-ref name="get" scoped="" ref="0x7e950b40"/>
        <function-ref name="reset" scoped="" ref="0x7e946210"/>
        <function-ref name="isOn" scoped="" ref="0x7e946a10"/>
        <function-ref name="set" scoped="" ref="0x7e950d40"/>
        <function-ref name="start" scoped="" ref="0x7e946410"/>
        <function-ref name="stop" scoped="" ref="0x7e946610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x7e9536c0" loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmCounterMilliP.MilliAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x7e9536c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7e951dc0"/>
        <function-ref name="test" scoped="" ref="0x7e9519c0"/>
        <function-ref name="get" scoped="" ref="0x7e953d08"/>
        <function-ref name="setScale" scoped="" ref="0x7e950010"/>
        <function-ref name="getScale" scoped="" ref="0x7e9502b0"/>
        <function-ref name="reset" scoped="" ref="0x7e9513c0"/>
        <function-ref name="overflow" scoped="" ref="0x7e9511c0"/>
        <function-ref name="isOn" scoped="" ref="0x7e951bc0"/>
        <function-ref name="set" scoped="" ref="0x7e953f08"/>
        <function-ref name="start" scoped="" ref="0x7e9515c0"/>
        <function-ref name="stop" scoped="" ref="0x7e9517c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7e943d48" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="AlarmCounterMilliP.MilliCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7e943d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120888"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120a08"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e9314e8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7e9318e8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7e9316e8"/>
        <function-ref name="overflow" scoped="" ref="0x7e931ae8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7e931d50" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="AlarmCounterMilliP.MilliCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e931d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7e9274a8"/>
        <function-ref name="test" scoped="" ref="0x7e9270a8"/>
        <function-ref name="get" scoped="" ref="0x7e9303e0"/>
        <function-ref name="setScale" scoped="" ref="0x7e9276a8"/>
        <function-ref name="getScale" scoped="" ref="0x7e927948"/>
        <function-ref name="reset" scoped="" ref="0x7e930a80"/>
        <function-ref name="overflow" scoped="" ref="0x7e930880"/>
        <function-ref name="isOn" scoped="" ref="0x7e9272a8"/>
        <function-ref name="set" scoped="" ref="0x7e9305e0"/>
        <function-ref name="start" scoped="" ref="0x7e930c80"/>
        <function-ref name="stop" scoped="" ref="0x7e930e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7e8e1010" loc="61:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
      <component-ref qname="AlarmCounterMilliP.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7e8e1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120888"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120a08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e8e0350"/>
        <function-ref name="fired" scoped="" ref="0x7e8e1c00"/>
        <function-ref name="startAt" scoped="" ref="0x7e8e0010"/>
        <function-ref name="isRunning" scoped="" ref="0x7e8e1e00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7e8e0550"/>
        <function-ref name="start" scoped="" ref="0x7e8e1760"/>
        <function-ref name="stop" scoped="" ref="0x7e8e1a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7e8d6908" loc="63:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
      <component-ref qname="AlarmCounterMilliP.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7e8d6908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120888"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120a08"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e8d5068"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7e8d5468"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7e8d5268"/>
        <function-ref name="overflow" scoped="" ref="0x7e8d5668"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7e8e0848" loc="62:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
      <component-ref qname="AlarmCounterMilliP.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7e8e0848"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120888"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120a08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e8d6010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7e8d6410"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7e8d6210"/>
        <function-ref name="overflow" scoped="" ref="0x7e8d6610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7e8d5960" loc="64:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmCounterC.nc">
      <component-ref qname="AlarmCounterMilliP.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x7e8d5960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120888"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120a08"/></typename>
          </type-tag>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e8d3cb8"/>
        <function-ref name="fired" scoped="" ref="0x7e8d3578"/>
        <function-ref name="startAt" scoped="" ref="0x7e8d3978"/>
        <function-ref name="isRunning" scoped="" ref="0x7e8d3778"/>
        <function-ref name="getAlarm" scoped="" ref="0x7e8d3eb8"/>
        <function-ref name="start" scoped="" ref="0x7e8d30d8"/>
        <function-ref name="stop" scoped="" ref="0x7e8d3378"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7e8972d0" loc="63:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x7e8972d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e8974a8"/>
        <function-ref name="runTask" scoped="" ref="0x7e897588"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7e8a1b60" loc="38:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7e8a1b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120888"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120a08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e8a0ee8"/>
        <function-ref name="fired" scoped="" ref="0x7e8a07a8"/>
        <function-ref name="startAt" scoped="" ref="0x7e8a0ba8"/>
        <function-ref name="isRunning" scoped="" ref="0x7e8a09a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7e8970f8"/>
        <function-ref name="start" scoped="" ref="0x7e8a0308"/>
        <function-ref name="stop" scoped="" ref="0x7e8a05a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e8c6b60" loc="37:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e8c6b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120888"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120a08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e8a14c8"/>
        <function-ref name="fired" scoped="" ref="0x7e8a28c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e8a2e60"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e8a2c80"/>
        <function-ref name="getdt" scoped="" ref="0x7e8a1888"/>
        <function-ref name="gett0" scoped="" ref="0x7e8a16a8"/>
        <function-ref name="isRunning" scoped="" ref="0x7e8a2aa0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e8a21e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e8a11a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e8a2460"/>
        <function-ref name="stop" scoped="" ref="0x7e8a26e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7e851c90" loc="60:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x7e851c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e851e68"/>
        <function-ref name="runTask" scoped="" ref="0x7e850010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7e854dc0" loc="38:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x7e854dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120888"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120a08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e8516f8"/>
        <function-ref name="fired" scoped="" ref="0x7e853ae8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e8510b8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e853ea8"/>
        <function-ref name="getdt" scoped="" ref="0x7e851ab8"/>
        <function-ref name="gett0" scoped="" ref="0x7e8518d8"/>
        <function-ref name="isRunning" scoped="" ref="0x7e853cc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e853408"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e8513d8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e853688"/>
        <function-ref name="stop" scoped="" ref="0x7e853908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e894da8" loc="37:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e894da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120888"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120a08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e854768"/>
        <function-ref name="fired" scoped="" ref="0x7e893b00"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e854108"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e893ee0"/>
        <function-ref name="getdt" scoped="" ref="0x7e854b48"/>
        <function-ref name="gett0" scoped="" ref="0x7e854958"/>
        <function-ref name="isRunning" scoped="" ref="0x7e893cf0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e8933f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e854438"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e893680"/>
        <function-ref name="stop" scoped="" ref="0x7e893910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7e8474c8" loc="37:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7e8474c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120888"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120a08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e847b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7e847de8" loc="38:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7e847de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120888"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120a08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e840570"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7e840970"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7e840770"/>
        <function-ref name="overflow" scoped="" ref="0x7e840b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x7e6264b0" loc="47:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11C.nc">
      <component-ref qname="Ch8_Dimmer_181C.SensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Humidity" scoped="" ref="0x7e6264b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e626ad8"/>
        <function-ref name="readDone" scoped="" ref="0x7e626cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x7e8338d8" loc="46:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11C.nc">
      <component-ref qname="Ch8_Dimmer_181C.SensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temperature" scoped="" ref="0x7e8338d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e833f00"/>
        <function-ref name="readDone" scoped="" ref="0x7e626108"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Hum" ref="0x7dbefcc8" loc="50:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="Ch8_Dimmer_181C.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sht11Hum" scoped="" ref="0x7dbefcc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7dbefea0"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7dbee010"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7dbee0f0"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7dbee1d0"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7dbee2b0"/>
        <function-ref name="reset" scoped="" ref="0x7dbee390"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7dbee470"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7dbee550"/>
        <function-ref name="resetDone" scoped="" ref="0x7dbee630"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7dbee710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x7dbf1850" loc="45:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="Ch8_Dimmer_181C.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Humidity" scoped="" ref="0x7dbf1850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dbf1e78"/>
        <function-ref name="readDone" scoped="" ref="0x7dbf0068"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempResource" ref="0x7dbf0380" loc="47:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="Ch8_Dimmer_181C.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TempResource" scoped="" ref="0x7dbf0380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7dbf0558"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7dbf0638"/>
        <function-ref name="request" scoped="" ref="0x7dbf0718"/>
        <function-ref name="granted" scoped="" ref="0x7dbf07f8"/>
        <function-ref name="isOwner" scoped="" ref="0x7dbf08d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Temp" ref="0x7dbef190" loc="49:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="Ch8_Dimmer_181C.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sht11Temp" scoped="" ref="0x7dbef190"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7dbef368"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7dbef448"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7dbef528"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7dbef608"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7dbef6e8"/>
        <function-ref name="reset" scoped="" ref="0x7dbef7c8"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7dbef8a8"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7dbef988"/>
        <function-ref name="resetDone" scoped="" ref="0x7dbefa68"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7dbefb48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HumResource" ref="0x7dbf0a58" loc="48:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="Ch8_Dimmer_181C.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HumResource" scoped="" ref="0x7dbf0a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7dbf0c30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7dbf0d10"/>
        <function-ref name="request" scoped="" ref="0x7dbf0df0"/>
        <function-ref name="granted" scoped="" ref="0x7dbf0ed0"/>
        <function-ref name="isOwner" scoped="" ref="0x7dbef010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x7dbf3c70" loc="44:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="Ch8_Dimmer_181C.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temperature" scoped="" ref="0x7dbf3c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dbf12c8"/>
        <function-ref name="readDone" scoped="" ref="0x7dbf14a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht11" ref="0x7e7e1ad0" loc="45:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HalSensirionSht11C.nc">
      <component-ref qname="HalSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SensirionSht11" scoped="" ref="0x7e7e1ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7e7e1ca8"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7e7e1d88"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7e7e1e68"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7e7e0010"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7e7e00f0"/>
        <function-ref name="reset" scoped="" ref="0x7e7e01d0"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7e7e02b0"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7e7e0390"/>
        <function-ref name="resetDone" scoped="" ref="0x7e7e0470"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7e7e0550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e7e1178" loc="44:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HalSensirionSht11C.nc">
      <component-ref qname="HalSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e7e1178"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e7e1350"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e7e1430"/>
        <function-ref name="request" scoped="" ref="0x7e7e1510"/>
        <function-ref name="granted" scoped="" ref="0x7e7e15f0"/>
        <function-ref name="isOwner" scoped="" ref="0x7e7e16d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptDATA" ref="0x7e770358" loc="58:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptDATA" scoped="" ref="0x7e770358"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e770530"/>
        <function-ref name="disable" scoped="" ref="0x7e770610"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7e7706f0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7e7707d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readSensor" ref="0x7e766948" loc="102:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="readSensor" scoped="" ref="0x7e766948"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e766b20"/>
        <function-ref name="runTask" scoped="" ref="0x7e766c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalStatusDone" ref="0x7e766510" loc="103:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalStatusDone" scoped="" ref="0x7e766510"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e7666e8"/>
        <function-ref name="runTask" scoped="" ref="0x7e7667c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CLOCK" ref="0x7e7719c8" loc="57:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CLOCK" scoped="" ref="0x7e7719c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e771ba0"/>
        <function-ref name="isInput" scoped="" ref="0x7e771c80"/>
        <function-ref name="toggle" scoped="" ref="0x7e771d60"/>
        <function-ref name="isOutput" scoped="" ref="0x7e771e40"/>
        <function-ref name="get" scoped="" ref="0x7e771f20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e770018"/>
        <function-ref name="set" scoped="" ref="0x7e7700f8"/>
        <function-ref name="clr" scoped="" ref="0x7e7701d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht11" ref="0x7e7724d8" loc="54:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SensirionSht11" scoped="" ref="0x7e7724d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7e7726c0"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7e7727a0"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7e772880"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7e772960"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7e772a40"/>
        <function-ref name="reset" scoped="" ref="0x7e772b20"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7e772c00"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7e772ce0"/>
        <function-ref name="resetDone" scoped="" ref="0x7e772dc0"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7e772ea0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0x7e771050" loc="56:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DATA" scoped="" ref="0x7e771050"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e771228"/>
        <function-ref name="isInput" scoped="" ref="0x7e771308"/>
        <function-ref name="toggle" scoped="" ref="0x7e7713e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7e7714c8"/>
        <function-ref name="get" scoped="" ref="0x7e7715a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e771688"/>
        <function-ref name="set" scoped="" ref="0x7e771768"/>
        <function-ref name="clr" scoped="" ref="0x7e771848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7e7678a8" loc="62:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7e7678a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7e767a80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7e767b60"/>
        <function-ref name="led1On" scoped="" ref="0x7e767c40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7e767d20"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7e767e00"/>
        <function-ref name="get" scoped="" ref="0x7e767ee0"/>
        <function-ref name="led1Off" scoped="" ref="0x7e766010"/>
        <function-ref name="led2On" scoped="" ref="0x7e766390"/>
        <function-ref name="set" scoped="" ref="0x7e7661d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7e7660f0"/>
        <function-ref name="led0On" scoped="" ref="0x7e7662b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7e7709c0" loc="60:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e7709c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120888"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120a08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e767330"/>
        <function-ref name="fired" scoped="" ref="0x7e7686f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e768c90"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e768ab0"/>
        <function-ref name="getdt" scoped="" ref="0x7e7676f0"/>
        <function-ref name="gett0" scoped="" ref="0x7e767510"/>
        <function-ref name="isRunning" scoped="" ref="0x7e7688d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e768010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e767010"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e768290"/>
        <function-ref name="stop" scoped="" ref="0x7e768510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptDATA" ref="0x7e758d00" loc="47:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptDATA" scoped="" ref="0x7e758d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e758ed8"/>
        <function-ref name="disable" scoped="" ref="0x7e757010"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7e7570f0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7e7571d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCK" ref="0x7e758368" loc="46:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x7e758368"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e758540"/>
        <function-ref name="isInput" scoped="" ref="0x7e758620"/>
        <function-ref name="toggle" scoped="" ref="0x7e758700"/>
        <function-ref name="isOutput" scoped="" ref="0x7e7587e0"/>
        <function-ref name="get" scoped="" ref="0x7e7588c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e7589a0"/>
        <function-ref name="set" scoped="" ref="0x7e758a80"/>
        <function-ref name="clr" scoped="" ref="0x7e758b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DATA" ref="0x7e7609c0" loc="45:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DATA" scoped="" ref="0x7e7609c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e760b98"/>
        <function-ref name="isInput" scoped="" ref="0x7e760c78"/>
        <function-ref name="toggle" scoped="" ref="0x7e760d58"/>
        <function-ref name="isOutput" scoped="" ref="0x7e760e38"/>
        <function-ref name="get" scoped="" ref="0x7e760f18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e758010"/>
        <function-ref name="set" scoped="" ref="0x7e7580f0"/>
        <function-ref name="clr" scoped="" ref="0x7e7581d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e7602d0" loc="44:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e7602d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e7604a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e760588"/>
        <function-ref name="request" scoped="" ref="0x7e760668"/>
        <function-ref name="granted" scoped="" ref="0x7e760748"/>
        <function-ref name="isOwner" scoped="" ref="0x7e760828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7e753e20" loc="43:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7e753e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7e752010"/>
        <function-ref name="stopDone" scoped="" ref="0x7e7520f0"/>
        <function-ref name="start" scoped="" ref="0x7e7521d0"/>
        <function-ref name="stop" scoped="" ref="0x7e7522b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7e749ba0" loc="49:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7e749ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e749d78"/>
        <function-ref name="runTask" scoped="" ref="0x7e749e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7e750d70" loc="46:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x7e750d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e749010"/>
        <function-ref name="isInput" scoped="" ref="0x7e7490f0"/>
        <function-ref name="toggle" scoped="" ref="0x7e7491d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e7492b0"/>
        <function-ref name="get" scoped="" ref="0x7e749390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e749470"/>
        <function-ref name="set" scoped="" ref="0x7e749550"/>
        <function-ref name="clr" scoped="" ref="0x7e749630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0x7e7503e0" loc="45:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DATA" scoped="" ref="0x7e7503e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e7505b8"/>
        <function-ref name="isInput" scoped="" ref="0x7e750698"/>
        <function-ref name="toggle" scoped="" ref="0x7e750778"/>
        <function-ref name="isOutput" scoped="" ref="0x7e750858"/>
        <function-ref name="get" scoped="" ref="0x7e750938"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e750a18"/>
        <function-ref name="set" scoped="" ref="0x7e750af8"/>
        <function-ref name="clr" scoped="" ref="0x7e750bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7e7524b0" loc="44:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e7524b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120888"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120a08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e751dd0"/>
        <function-ref name="fired" scoped="" ref="0x7e7511f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e751790"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e7515b0"/>
        <function-ref name="getdt" scoped="" ref="0x7e7501f0"/>
        <function-ref name="gett0" scoped="" ref="0x7e750010"/>
        <function-ref name="isRunning" scoped="" ref="0x7e7513d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e752ad8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e751ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e752d58"/>
        <function-ref name="stop" scoped="" ref="0x7e751010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e7548c8" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="HplSensirionSht11C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e7548c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120888"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120a08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e742208"/>
        <function-ref name="fired" scoped="" ref="0x7e743600"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e743ba0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e7439c0"/>
        <function-ref name="getdt" scoped="" ref="0x7e7425c8"/>
        <function-ref name="gett0" scoped="" ref="0x7e7423e8"/>
        <function-ref name="isRunning" scoped="" ref="0x7e7437e0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e754ef0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e743ec0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e7431a0"/>
        <function-ref name="stop" scoped="" ref="0x7e743420"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x7e730430" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x7e730430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e730608"/>
        <function-ref name="fired" scoped="" ref="0x7e7306e8"/>
        <function-ref name="disable" scoped="" ref="0x7e7307c8"/>
        <function-ref name="edge" scoped="" ref="0x7e7308a8"/>
        <function-ref name="enable" scoped="" ref="0x7e730988"/>
        <function-ref name="getValue" scoped="" ref="0x7e730a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x7e731ba8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x7e731ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e731d80"/>
        <function-ref name="fired" scoped="" ref="0x7e731e60"/>
        <function-ref name="disable" scoped="" ref="0x7e735010"/>
        <function-ref name="edge" scoped="" ref="0x7e7350f0"/>
        <function-ref name="enable" scoped="" ref="0x7e7351d0"/>
        <function-ref name="getValue" scoped="" ref="0x7e7352b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x7e734430" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x7e734430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e734608"/>
        <function-ref name="fired" scoped="" ref="0x7e7346e8"/>
        <function-ref name="disable" scoped="" ref="0x7e7347c8"/>
        <function-ref name="edge" scoped="" ref="0x7e7348a8"/>
        <function-ref name="enable" scoped="" ref="0x7e734988"/>
        <function-ref name="getValue" scoped="" ref="0x7e734a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x7e730be8" loc="43:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x7e730be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e730dc0"/>
        <function-ref name="fired" scoped="" ref="0x7e730ea0"/>
        <function-ref name="disable" scoped="" ref="0x7e729010"/>
        <function-ref name="edge" scoped="" ref="0x7e7290f0"/>
        <function-ref name="enable" scoped="" ref="0x7e7291d0"/>
        <function-ref name="getValue" scoped="" ref="0x7e7292b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x7e735430" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x7e735430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e735608"/>
        <function-ref name="fired" scoped="" ref="0x7e7356e8"/>
        <function-ref name="disable" scoped="" ref="0x7e7357c8"/>
        <function-ref name="edge" scoped="" ref="0x7e7358a8"/>
        <function-ref name="enable" scoped="" ref="0x7e735988"/>
        <function-ref name="getValue" scoped="" ref="0x7e735a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x7e734be8" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x7e734be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e734dc0"/>
        <function-ref name="fired" scoped="" ref="0x7e734ea0"/>
        <function-ref name="disable" scoped="" ref="0x7e730010"/>
        <function-ref name="edge" scoped="" ref="0x7e7300f0"/>
        <function-ref name="enable" scoped="" ref="0x7e7301d0"/>
        <function-ref name="getValue" scoped="" ref="0x7e7302b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x7e7313f0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x7e7313f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e7315c8"/>
        <function-ref name="fired" scoped="" ref="0x7e7316a8"/>
        <function-ref name="disable" scoped="" ref="0x7e731788"/>
        <function-ref name="edge" scoped="" ref="0x7e731868"/>
        <function-ref name="enable" scoped="" ref="0x7e731948"/>
        <function-ref name="getValue" scoped="" ref="0x7e731a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x7e735be8" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x7e735be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e735dc0"/>
        <function-ref name="fired" scoped="" ref="0x7e735ea0"/>
        <function-ref name="disable" scoped="" ref="0x7e734010"/>
        <function-ref name="edge" scoped="" ref="0x7e7340f0"/>
        <function-ref name="enable" scoped="" ref="0x7e7341d0"/>
        <function-ref name="getValue" scoped="" ref="0x7e7342b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x7e723a78" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x7e723a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e723c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x7e721848" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x7e721848"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e721a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x7e723388" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x7e723388"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e723560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x7e723df0" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x7e723df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e722010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x7e721bc0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x7e721bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e721d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x7e723700" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x7e723700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e7238d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x7e7214d0" loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x7e7214d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e7216a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x7e723010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x7e723010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e7231e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7e706010" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7e706010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e7061e8"/>
        <function-ref name="fired" scoped="" ref="0x7e7062c8"/>
        <function-ref name="disable" scoped="" ref="0x7e7063a8"/>
        <function-ref name="edge" scoped="" ref="0x7e706488"/>
        <function-ref name="enable" scoped="" ref="0x7e706568"/>
        <function-ref name="getValue" scoped="" ref="0x7e706648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7e7067c8" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7e7067c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e7069a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7e6f6010" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7e6f6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e6f61e8"/>
        <function-ref name="fired" scoped="" ref="0x7e6f62c8"/>
        <function-ref name="disable" scoped="" ref="0x7e6f63a8"/>
        <function-ref name="edge" scoped="" ref="0x7e6f6488"/>
        <function-ref name="enable" scoped="" ref="0x7e6f6568"/>
        <function-ref name="getValue" scoped="" ref="0x7e6f6648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7e6f67c8" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7e6f67c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e6f69a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7e6f3010" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7e6f3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e6f31e8"/>
        <function-ref name="fired" scoped="" ref="0x7e6f32c8"/>
        <function-ref name="disable" scoped="" ref="0x7e6f33a8"/>
        <function-ref name="edge" scoped="" ref="0x7e6f3488"/>
        <function-ref name="enable" scoped="" ref="0x7e6f3568"/>
        <function-ref name="getValue" scoped="" ref="0x7e6f3648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7e6f37c8" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7e6f37c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e6f39a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7e6f1010" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7e6f1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e6f11e8"/>
        <function-ref name="fired" scoped="" ref="0x7e6f12c8"/>
        <function-ref name="disable" scoped="" ref="0x7e6f13a8"/>
        <function-ref name="edge" scoped="" ref="0x7e6f1488"/>
        <function-ref name="enable" scoped="" ref="0x7e6f1568"/>
        <function-ref name="getValue" scoped="" ref="0x7e6f1648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7e6f17c8" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7e6f17c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e6f19a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7e6ea0b0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7e6ea0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e6ea288"/>
        <function-ref name="fired" scoped="" ref="0x7e6ea368"/>
        <function-ref name="disable" scoped="" ref="0x7e6ea448"/>
        <function-ref name="edge" scoped="" ref="0x7e6ea528"/>
        <function-ref name="enable" scoped="" ref="0x7e6ea608"/>
        <function-ref name="getValue" scoped="" ref="0x7e6ea6e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7e6ea868" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7e6ea868"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e6eaa40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7e6e8150" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7e6e8150"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e6e8328"/>
        <function-ref name="fired" scoped="" ref="0x7e6e8408"/>
        <function-ref name="disable" scoped="" ref="0x7e6e84e8"/>
        <function-ref name="edge" scoped="" ref="0x7e6e85c8"/>
        <function-ref name="enable" scoped="" ref="0x7e6e86a8"/>
        <function-ref name="getValue" scoped="" ref="0x7e6e8788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7e6e8908" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7e6e8908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e6e8ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7e6e5228" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7e6e5228"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e6e5400"/>
        <function-ref name="fired" scoped="" ref="0x7e6e54e0"/>
        <function-ref name="disable" scoped="" ref="0x7e6e55c0"/>
        <function-ref name="edge" scoped="" ref="0x7e6e56a0"/>
        <function-ref name="enable" scoped="" ref="0x7e6e5780"/>
        <function-ref name="getValue" scoped="" ref="0x7e6e5860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7e6e59e0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7e6e59e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e6e5bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7e6e32d0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7e6e32d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e6e34a8"/>
        <function-ref name="fired" scoped="" ref="0x7e6e3588"/>
        <function-ref name="disable" scoped="" ref="0x7e6e3668"/>
        <function-ref name="edge" scoped="" ref="0x7e6e3748"/>
        <function-ref name="enable" scoped="" ref="0x7e6e3828"/>
        <function-ref name="getValue" scoped="" ref="0x7e6e3908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7e6e3a88" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7e6e3a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e6e3c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7e6d9b38" loc="9:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplSensirionSht11C.InterruptDATAC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7e6d9b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e6d9d10"/>
        <function-ref name="fired" scoped="" ref="0x7e6d9df0"/>
        <function-ref name="disable" scoped="" ref="0x7e6d9ed0"/>
        <function-ref name="edge" scoped="" ref="0x7e6d1010"/>
        <function-ref name="enable" scoped="" ref="0x7e6d10f0"/>
        <function-ref name="getValue" scoped="" ref="0x7e6d11d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7e6d9540" loc="8:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplSensirionSht11C.InterruptDATAC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7e6d9540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e6d9718"/>
        <function-ref name="disable" scoped="" ref="0x7e6d97f8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7e6d98d8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7e6d99b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7e6645c8" loc="82:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7e6645c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7e6647b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7e664890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7e663528" loc="86:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7e663528"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7e663710"/>
        <function-ref name="configure" scoped="" ref="0x7e6637f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceController" ref="0x7e6649d0" loc="83:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceController" scoped="" ref="0x7e6649d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceController"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e664ba8"/>
        <function-ref name="requested" scoped="" ref="0x7e664c88"/>
        <function-ref name="granted" scoped="" ref="0x7e664d68"/>
        <function-ref name="isOwner" scoped="" ref="0x7e664e48"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7e664f28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e6c8e78" loc="81:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e6c8e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e664070"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e664150"/>
        <function-ref name="request" scoped="" ref="0x7e664230"/>
        <function-ref name="granted" scoped="" ref="0x7e664310"/>
        <function-ref name="isOwner" scoped="" ref="0x7e6643f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7e663078" loc="84:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7e663078"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7e663250"/>
        <function-ref name="userId" scoped="" ref="0x7e663330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7db80628" loc="34:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7db80628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7db80800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7db80960" loc="35:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7db80960"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7db80b38"/>
        <function-ref name="isEmpty" scoped="" ref="0x7db80c18"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7db80cf8"/>
        <function-ref name="dequeue" scoped="" ref="0x7db80dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7db793a8" loc="54:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7db793a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7db79590"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7db79670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7db78338" loc="59:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7db78338"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7db78520"/>
        <function-ref name="configure" scoped="" ref="0x7db78600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7db78760" loc="60:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7db78760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7db78938"/>
        <function-ref name="isEmpty" scoped="" ref="0x7db78a18"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7db78af8"/>
        <function-ref name="dequeue" scoped="" ref="0x7db78bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceController" ref="0x7db797b0" loc="55:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceController" scoped="" ref="0x7db797b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceController"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7db79988"/>
        <function-ref name="requested" scoped="" ref="0x7db79a68"/>
        <function-ref name="granted" scoped="" ref="0x7db79b48"/>
        <function-ref name="isOwner" scoped="" ref="0x7db79c28"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7db79d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7db78d18" loc="61:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7db78d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7db78ef0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7db76010"/>
        <function-ref name="led1On" scoped="" ref="0x7db760f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7db761d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7db762b0"/>
        <function-ref name="get" scoped="" ref="0x7db76390"/>
        <function-ref name="led1Off" scoped="" ref="0x7db76470"/>
        <function-ref name="led0On" scoped="" ref="0x7db767f0"/>
        <function-ref name="set" scoped="" ref="0x7db76630"/>
        <function-ref name="led2On" scoped="" ref="0x7db76550"/>
        <function-ref name="led2Off" scoped="" ref="0x7db76710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7db7abc0" loc="53:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7db7abc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7db7ada8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7db7ae88"/>
        <function-ref name="request" scoped="" ref="0x7db79010"/>
        <function-ref name="granted" scoped="" ref="0x7db790f0"/>
        <function-ref name="isOwner" scoped="" ref="0x7db791d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7db79e48" loc="56:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7db79e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7db78050"/>
        <function-ref name="userId" scoped="" ref="0x7db78130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7db76970" loc="73:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7db76970"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7db76b48"/>
        <function-ref name="runTask" scoped="" ref="0x7db76c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7e660aa8" loc="59:/opt/tinyos-2.x/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7e660aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7e660c80"/>
        <function-ref name="stopDone" scoped="" ref="0x7e660d60"/>
        <function-ref name="start" scoped="" ref="0x7e660e40"/>
        <function-ref name="stop" scoped="" ref="0x7e660f20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7e65a078" loc="61:/opt/tinyos-2.x/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7e65a078"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7e65a250"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceController" ref="0x7e65a390" loc="62:/opt/tinyos-2.x/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceController" scoped="" ref="0x7e65a390"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceController"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e65a568"/>
        <function-ref name="requested" scoped="" ref="0x7e65a648"/>
        <function-ref name="granted" scoped="" ref="0x7e65a728"/>
        <function-ref name="isOwner" scoped="" ref="0x7e65a808"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7e65a8e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7e65aa28" loc="63:/opt/tinyos-2.x/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7e65aa28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7e65ac00"/>
        <function-ref name="userId" scoped="" ref="0x7e65ace0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7db60a80" loc="51:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7db60a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7db60c58"/>
        <function-ref name="stopDone" scoped="" ref="0x7db60d38"/>
        <function-ref name="start" scoped="" ref="0x7db60e18"/>
        <function-ref name="stop" scoped="" ref="0x7db60ef8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7db59070" loc="53:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7db59070"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7db59248"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7db59e58" loc="68:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7db59e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7db58050"/>
        <function-ref name="runTask" scoped="" ref="0x7db58130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceController" ref="0x7db59388" loc="54:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceController" scoped="" ref="0x7db59388"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceController"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7db59560"/>
        <function-ref name="requested" scoped="" ref="0x7db59640"/>
        <function-ref name="granted" scoped="" ref="0x7db59720"/>
        <function-ref name="isOwner" scoped="" ref="0x7db59800"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7db598e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x7db582b0" loc="63:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x7db582b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7db58488"/>
        <function-ref name="runTask" scoped="" ref="0x7db58568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7db60688" loc="50:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7db60688"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7db60860"/>
        <function-ref name="stop" scoped="" ref="0x7db60940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7db59a20" loc="55:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7db59a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7db59bf8"/>
        <function-ref name="userId" scoped="" ref="0x7db59cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e631a48" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="HalSensirionSht11C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e631a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120888"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120a08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e62a368"/>
        <function-ref name="fired" scoped="" ref="0x7e630768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e630d08"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e630b28"/>
        <function-ref name="getdt" scoped="" ref="0x7e62a728"/>
        <function-ref name="gett0" scoped="" ref="0x7e62a548"/>
        <function-ref name="isRunning" scoped="" ref="0x7e630948"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e630088"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e62a048"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e630308"/>
        <function-ref name="stop" scoped="" ref="0x7e630588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7e618ac8" loc="21:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/PhotoSensorC.nc">
      <component-ref qname="Ch8_Dimmer_181C.PhotoSensorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7e618ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e623108"/>
        <function-ref name="readDone" scoped="" ref="0x7e6232e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7db4dc40" loc="28:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/PhotoC.nc">
      <component-ref qname="Ch8_Dimmer_181C.PhotoSensorC.DemoChannel"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7db4dc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7db4c278"/>
        <function-ref name="readDone" scoped="" ref="0x7db4c458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7db4a3d8" loc="28:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/ADC_ShiftM.nc">
      <component-ref qname="Ch8_Dimmer_181C.PhotoSensorC.DemoChannel.ADC_ShiftM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7db4a3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7db4aa00"/>
        <function-ref name="readDone" scoped="" ref="0x7db4abe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="subRead" ref="0x7db49010" loc="29:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/ADC_ShiftM.nc">
      <component-ref qname="Ch8_Dimmer_181C.PhotoSensorC.DemoChannel.ADC_ShiftM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="subRead" scoped="" ref="0x7db49010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7db49638"/>
        <function-ref name="readDone" scoped="" ref="0x7db49818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7db483b8" loc="27:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/PhotoProC.nc">
      <component-ref qname="Ch8_Dimmer_181C.PhotoSensorC.DemoChannel.PhotoProC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7db483b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7db489e0"/>
        <function-ref name="readDone" scoped="" ref="0x7db48bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7db449d0" loc="25:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="Ch8_Dimmer_181C.PhotoSensorC.DemoChannel.PhotoProC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7db449d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7db44ba8"/>
        <function-ref name="configure" scoped="" ref="0x7db44c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7db46980" loc="22:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="Ch8_Dimmer_181C.PhotoSensorC.DemoChannel.PhotoProC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7db46980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7db44010"/>
        <function-ref name="readDone" scoped="" ref="0x7db441f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7db444f8" loc="24:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="Ch8_Dimmer_181C.PhotoSensorC.DemoChannel.PhotoProC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7db444f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7db446d0"/>
        <function-ref name="getChannel" scoped="" ref="0x7db447b0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7db44890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7e5f4878" loc="18:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7e5f4878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e5f4ea0"/>
        <function-ref name="readDone" scoped="" ref="0x7e5f3098"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7e5e9390" loc="19:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x7e5e9390"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e5e99d8"/>
        <function-ref name="readDone" scoped="" ref="0x7e5e9bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7e5f11a8" loc="22:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7e5f11a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7e5f1380"/>
        <function-ref name="getChannel" scoped="" ref="0x7e5f1460"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7e5f1540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7e5f1920" loc="23:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e5f1920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e5f1af8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e5f1bd8"/>
        <function-ref name="request" scoped="" ref="0x7e5f1cb8"/>
        <function-ref name="granted" scoped="" ref="0x7e5f1d98"/>
        <function-ref name="isOwner" scoped="" ref="0x7e5f1e78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7e5e1100" loc="49:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7e5e1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7e5e12d8"/>
        <function-ref name="configure" scoped="" ref="0x7e5e13b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x7e5d49c0" loc="47:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7e5d49c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7e5d4b98"/>
        <function-ref name="dataReady" scoped="" ref="0x7e5d4c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x7e5d9568" loc="46:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7e5d9568"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7e5d9740"/>
        <function-ref name="cancel" scoped="" ref="0x7e5d9820"/>
        <function-ref name="dataReady" scoped="" ref="0x7e5d9900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e5e56e8" loc="45:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e5e56e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e5e58c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e5e59a0"/>
        <function-ref name="request" scoped="" ref="0x7e5e5a80"/>
        <function-ref name="granted" scoped="" ref="0x7e5e5b60"/>
        <function-ref name="isOwner" scoped="" ref="0x7e5e5c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e5d0d30" loc="65:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e5d0d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e5d0f08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x7e5c9040" loc="68:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7e5c9040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7e5c9218"/>
        <function-ref name="dataReady" scoped="" ref="0x7e5c92f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x7e5c7b18" loc="67:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7e5c7b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7e5c7cf0"/>
        <function-ref name="cancel" scoped="" ref="0x7e5c7dd0"/>
        <function-ref name="dataReady" scoped="" ref="0x7e5c7eb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Adc" ref="0x7e5ba468" loc="71:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x7e5ba468"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7e5ba640"/>
        <function-ref name="getAdmux" scoped="" ref="0x7e5ba720"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7e5ba800"/>
        <function-ref name="isEnabled" scoped="" ref="0x7e5ba8e0"/>
        <function-ref name="enableAdc" scoped="" ref="0x7e5ba9c0"/>
        <function-ref name="setAdmux" scoped="" ref="0x7e5baaa0"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7e5bab80"/>
        <function-ref name="isComplete" scoped="" ref="0x7e5bac60"/>
        <function-ref name="cancel" scoped="" ref="0x7e5bad40"/>
        <function-ref name="disableAdc" scoped="" ref="0x7e5bae20"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7e5baf00"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7e5c6010"/>
        <function-ref name="startConversion" scoped="" ref="0x7e5c60f0"/>
        <function-ref name="isStarted" scoped="" ref="0x7e5c6250"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7e5c6330"/>
        <function-ref name="setContinuous" scoped="" ref="0x7e5c6410"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7e5c64f0"/>
        <function-ref name="getValue" scoped="" ref="0x7e5c65d0"/>
        <function-ref name="dataReady" scoped="" ref="0x7e5c66b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7e5c7710" loc="66:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7e5c7710"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e5c78e8"/>
        <function-ref name="stop" scoped="" ref="0x7e5c79c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x7e5c6800" loc="72:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7e5c6800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7e5c69d8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7e5c6ab8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7e5c6b98"/>
        <function-ref name="actualMicro" scoped="" ref="0x7e5c6c78"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7e5c6d58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x7e598468" loc="36:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <component-ref qname="HplAtm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x7e598468"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7e598640"/>
        <function-ref name="getAdmux" scoped="" ref="0x7e598720"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7e598800"/>
        <function-ref name="isEnabled" scoped="" ref="0x7e5988e0"/>
        <function-ref name="enableAdc" scoped="" ref="0x7e5989c0"/>
        <function-ref name="setAdmux" scoped="" ref="0x7e598aa0"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7e598b80"/>
        <function-ref name="isComplete" scoped="" ref="0x7e598c60"/>
        <function-ref name="cancel" scoped="" ref="0x7e598d40"/>
        <function-ref name="disableAdc" scoped="" ref="0x7e598e20"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7e598f00"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7e597010"/>
        <function-ref name="startConversion" scoped="" ref="0x7e5970f0"/>
        <function-ref name="isStarted" scoped="" ref="0x7e597250"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7e597330"/>
        <function-ref name="setContinuous" scoped="" ref="0x7e597410"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7e5974f0"/>
        <function-ref name="getValue" scoped="" ref="0x7e5975d0"/>
        <function-ref name="dataReady" scoped="" ref="0x7e5976b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x7e593c70" loc="36:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x7e593c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7e593e48"/>
        <function-ref name="getAdmux" scoped="" ref="0x7e593f28"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7e592018"/>
        <function-ref name="isEnabled" scoped="" ref="0x7e5920f8"/>
        <function-ref name="enableAdc" scoped="" ref="0x7e5921d8"/>
        <function-ref name="setAdmux" scoped="" ref="0x7e5922b8"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7e592398"/>
        <function-ref name="isComplete" scoped="" ref="0x7e592478"/>
        <function-ref name="cancel" scoped="" ref="0x7e592558"/>
        <function-ref name="disableAdc" scoped="" ref="0x7e592638"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7e592718"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7e5927f8"/>
        <function-ref name="startConversion" scoped="" ref="0x7e5928d8"/>
        <function-ref name="isStarted" scoped="" ref="0x7e592a38"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7e592b18"/>
        <function-ref name="setContinuous" scoped="" ref="0x7e592bf8"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7e592cd8"/>
        <function-ref name="getValue" scoped="" ref="0x7e592db8"/>
        <function-ref name="dataReady" scoped="" ref="0x7e592e98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7e591040" loc="37:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7e591040"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7e591218"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7e56cc28" loc="82:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7e56cc28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7e56ce10"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7e56cef0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7e54bbb8" loc="86:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7e54bbb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7e54bda0"/>
        <function-ref name="configure" scoped="" ref="0x7e54be80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceController" ref="0x7e54b070" loc="83:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceController" scoped="" ref="0x7e54b070"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceController"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e54b248"/>
        <function-ref name="requested" scoped="" ref="0x7e54b328"/>
        <function-ref name="granted" scoped="" ref="0x7e54b408"/>
        <function-ref name="isOwner" scoped="" ref="0x7e54b4e8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7e54b5c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e56c4e8" loc="81:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e56c4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e56c6d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e56c7b0"/>
        <function-ref name="request" scoped="" ref="0x7e56c890"/>
        <function-ref name="granted" scoped="" ref="0x7e56c970"/>
        <function-ref name="isOwner" scoped="" ref="0x7e56ca50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7e54b708" loc="84:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7e54b708"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7e54b8e0"/>
        <function-ref name="userId" scoped="" ref="0x7e54b9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7db37908" loc="34:/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7db37908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7db37ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7db37c40" loc="35:/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7db37c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7db37e18"/>
        <function-ref name="isEmpty" scoped="" ref="0x7db37ef8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7db35010"/>
        <function-ref name="dequeue" scoped="" ref="0x7db350f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7db33568" loc="54:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7db33568"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7db33750"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7db33830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7db324f0" loc="59:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7db324f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7db326d8"/>
        <function-ref name="configure" scoped="" ref="0x7db327b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7db32918" loc="60:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7db32918"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7db32af0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7db32bd0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7db32cb0"/>
        <function-ref name="dequeue" scoped="" ref="0x7db32d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceController" ref="0x7db33970" loc="55:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceController" scoped="" ref="0x7db33970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceController"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7db33b48"/>
        <function-ref name="requested" scoped="" ref="0x7db33c28"/>
        <function-ref name="granted" scoped="" ref="0x7db33d08"/>
        <function-ref name="isOwner" scoped="" ref="0x7db33de8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7db33ec8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7db32ed0" loc="61:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7db32ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7db310c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7db311a0"/>
        <function-ref name="led1On" scoped="" ref="0x7db31280"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7db31360"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7db31440"/>
        <function-ref name="get" scoped="" ref="0x7db31520"/>
        <function-ref name="led1Off" scoped="" ref="0x7db31600"/>
        <function-ref name="led0On" scoped="" ref="0x7db31980"/>
        <function-ref name="set" scoped="" ref="0x7db317c0"/>
        <function-ref name="led2On" scoped="" ref="0x7db316e0"/>
        <function-ref name="led2Off" scoped="" ref="0x7db318a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7db35dc8" loc="53:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7db35dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7db33010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7db330f0"/>
        <function-ref name="request" scoped="" ref="0x7db331d0"/>
        <function-ref name="granted" scoped="" ref="0x7db332b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7db33390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7db32030" loc="56:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7db32030"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7db32208"/>
        <function-ref name="userId" scoped="" ref="0x7db322e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7db31b00" loc="73:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7db31b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7db31cd8"/>
        <function-ref name="runTask" scoped="" ref="0x7db31db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7e548428" loc="62:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7e548428"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7e548600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceController" ref="0x7e548740" loc="63:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceController" scoped="" ref="0x7e548740"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceController"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e548918"/>
        <function-ref name="requested" scoped="" ref="0x7e5489f8"/>
        <function-ref name="granted" scoped="" ref="0x7e548ad8"/>
        <function-ref name="isOwner" scoped="" ref="0x7e548bb8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7e548c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7e548030" loc="60:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7e548030"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e548208"/>
        <function-ref name="stop" scoped="" ref="0x7e5482e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7e548dd8" loc="64:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7e548dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7e547010"/>
        <function-ref name="userId" scoped="" ref="0x7e5470f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7db02150" loc="52:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7db02150"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7db02328"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceController" ref="0x7db02468" loc="53:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceController" scoped="" ref="0x7db02468"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceController"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7db02640"/>
        <function-ref name="requested" scoped="" ref="0x7db02720"/>
        <function-ref name="granted" scoped="" ref="0x7db02800"/>
        <function-ref name="isOwner" scoped="" ref="0x7db028e0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7db029c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7db04d10" loc="50:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7db04d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7db04ee8"/>
        <function-ref name="stop" scoped="" ref="0x7db02010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7db02b00" loc="54:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7db02b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7db02cd8"/>
        <function-ref name="userId" scoped="" ref="0x7db02db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7e5328c8" loc="48:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7e5328c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e532ef0"/>
        <function-ref name="readDone" scoped="" ref="0x7e531108"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7e531718" loc="49:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x7e531718"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e531d60"/>
        <function-ref name="readDone" scoped="" ref="0x7e530010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7e530ab0" loc="53:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7e530ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7e530c88"/>
        <function-ref name="getChannel" scoped="" ref="0x7e530d68"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7e530e48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0x7e530338" loc="52:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7e530338"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7e530510"/>
        <function-ref name="cancel" scoped="" ref="0x7e5305f0"/>
        <function-ref name="dataReady" scoped="" ref="0x7e5306d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x7e525f20" loc="103:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x7e525f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e523110"/>
        <function-ref name="runTask" scoped="" ref="0x7e5231f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7e516888" loc="24:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7e516888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e516ec0"/>
        <function-ref name="readDone" scoped="" ref="0x7e5150d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7e515538" loc="26:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x7e515538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e515b70"/>
        <function-ref name="readDone" scoped="" ref="0x7e515d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7e505108" loc="27:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e505108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e5052f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e5053d0"/>
        <function-ref name="request" scoped="" ref="0x7e5054b0"/>
        <function-ref name="granted" scoped="" ref="0x7e505590"/>
        <function-ref name="isOwner" scoped="" ref="0x7e505670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7e4fc878" loc="31:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/PhotoDeviceP.nc">
      <component-ref qname="PhotoDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7e4fc878"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7e4fca50"/>
        <function-ref name="configure" scoped="" ref="0x7e4fcb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x7e4fcc80" loc="32:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/PhotoDeviceP.nc">
      <component-ref qname="PhotoDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7e4fcc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7e4fce58"/>
        <function-ref name="getChannel" scoped="" ref="0x7e4fb010"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7e4fb0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7e4f7040" loc="30:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/PhotoP.nc">
      <component-ref qname="PhotoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7e4f7040"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7e4f7218"/>
        <function-ref name="configure" scoped="" ref="0x7e4f72f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhotoPin" ref="0x7e4f79a0" loc="34:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/PhotoP.nc">
      <component-ref qname="PhotoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoPin" scoped="" ref="0x7e4f79a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e4f7b78"/>
        <function-ref name="isInput" scoped="" ref="0x7e4f7c58"/>
        <function-ref name="toggle" scoped="" ref="0x7e4f7d38"/>
        <function-ref name="isOutput" scoped="" ref="0x7e4f7e18"/>
        <function-ref name="get" scoped="" ref="0x7e4f7ef8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e4f5010"/>
        <function-ref name="set" scoped="" ref="0x7e4f50f0"/>
        <function-ref name="clr" scoped="" ref="0x7e4f51d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x7e4f7448" loc="31:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/PhotoP.nc">
      <component-ref qname="PhotoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7e4f7448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7e4f7620"/>
        <function-ref name="getChannel" scoped="" ref="0x7e4f7700"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7e4f77e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7e4f15f0" loc="36:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/PhotoP.nc">
      <component-ref qname="PhotoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7e4f15f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7e4f17c8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7e4f18a8"/>
        <function-ref name="led1On" scoped="" ref="0x7e4f1988"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7e4f1a68"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7e4f1b48"/>
        <function-ref name="get" scoped="" ref="0x7e4f1c28"/>
        <function-ref name="led1Off" scoped="" ref="0x7e4f1d08"/>
        <function-ref name="led2Off" scoped="" ref="0x7e4f30f0"/>
        <function-ref name="set" scoped="" ref="0x7e4f1de8"/>
        <function-ref name="led0On" scoped="" ref="0x7e4f1ec8"/>
        <function-ref name="led2On" scoped="" ref="0x7e4f3010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhotoAdc" ref="0x7e4f12d0" loc="35:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/PhotoP.nc">
      <component-ref qname="PhotoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoAdc" scoped="" ref="0x7e4f12d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7e4f14a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x7e4e4068" loc="40:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x7e4e4068"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7e4e4240"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW3" ref="0x7e4e85e8" loc="32:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW3" scoped="" ref="0x7e4e85e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e4e87c0"/>
        <function-ref name="isInput" scoped="" ref="0x7e4e88a0"/>
        <function-ref name="toggle" scoped="" ref="0x7e4e8980"/>
        <function-ref name="isOutput" scoped="" ref="0x7e4e8a60"/>
        <function-ref name="get" scoped="" ref="0x7e4e8b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e4e8c20"/>
        <function-ref name="set" scoped="" ref="0x7e4e8d00"/>
        <function-ref name="clr" scoped="" ref="0x7e4e8de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW6" ref="0x7e4e6348" loc="35:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW6" scoped="" ref="0x7e4e6348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e4e6520"/>
        <function-ref name="isInput" scoped="" ref="0x7e4e6600"/>
        <function-ref name="toggle" scoped="" ref="0x7e4e66e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e4e67c0"/>
        <function-ref name="get" scoped="" ref="0x7e4e68a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e4e6980"/>
        <function-ref name="set" scoped="" ref="0x7e4e6a60"/>
        <function-ref name="clr" scoped="" ref="0x7e4e6b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x7e4e4a58" loc="43:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x7e4e4a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7e4e4cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x7e4e31c8" loc="45:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x7e4e31c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7e4e33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW1" ref="0x7e4e9268" loc="30:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW1" scoped="" ref="0x7e4e9268"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e4e9440"/>
        <function-ref name="isInput" scoped="" ref="0x7e4e9520"/>
        <function-ref name="toggle" scoped="" ref="0x7e4e9600"/>
        <function-ref name="isOutput" scoped="" ref="0x7e4e96e0"/>
        <function-ref name="get" scoped="" ref="0x7e4e97c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e4e98a0"/>
        <function-ref name="set" scoped="" ref="0x7e4e9980"/>
        <function-ref name="clr" scoped="" ref="0x7e4e9a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW4" ref="0x7e4e7010" loc="33:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW4" scoped="" ref="0x7e4e7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e4e71e8"/>
        <function-ref name="isInput" scoped="" ref="0x7e4e72c8"/>
        <function-ref name="toggle" scoped="" ref="0x7e4e73a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7e4e7488"/>
        <function-ref name="get" scoped="" ref="0x7e4e7568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e4e7648"/>
        <function-ref name="set" scoped="" ref="0x7e4e7728"/>
        <function-ref name="clr" scoped="" ref="0x7e4e7808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7e4e56c8" loc="37:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7e4e56c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e4e58a0"/>
        <function-ref name="isInput" scoped="" ref="0x7e4e5980"/>
        <function-ref name="toggle" scoped="" ref="0x7e4e5a60"/>
        <function-ref name="isOutput" scoped="" ref="0x7e4e5b40"/>
        <function-ref name="get" scoped="" ref="0x7e4e5c20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e4e5d00"/>
        <function-ref name="set" scoped="" ref="0x7e4e5de0"/>
        <function-ref name="clr" scoped="" ref="0x7e4e5ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x7e4e43b8" loc="41:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x7e4e43b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7e4e4590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW7" ref="0x7e4e6cb8" loc="36:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW7" scoped="" ref="0x7e4e6cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e4e6e90"/>
        <function-ref name="isInput" scoped="" ref="0x7e4e5010"/>
        <function-ref name="toggle" scoped="" ref="0x7e4e50f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e4e51d0"/>
        <function-ref name="get" scoped="" ref="0x7e4e52b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e4e5390"/>
        <function-ref name="set" scoped="" ref="0x7e4e5470"/>
        <function-ref name="clr" scoped="" ref="0x7e4e5550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x7e4e3518" loc="46:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x7e4e3518"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7e4e36f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW2" ref="0x7e4e9bd8" loc="31:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW2" scoped="" ref="0x7e4e9bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e4e9db0"/>
        <function-ref name="isInput" scoped="" ref="0x7e4e9e90"/>
        <function-ref name="toggle" scoped="" ref="0x7e4e8010"/>
        <function-ref name="isOutput" scoped="" ref="0x7e4e80f0"/>
        <function-ref name="get" scoped="" ref="0x7e4e81d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e4e82b0"/>
        <function-ref name="set" scoped="" ref="0x7e4e8390"/>
        <function-ref name="clr" scoped="" ref="0x7e4e8470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW5" ref="0x7e4e7980" loc="34:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW5" scoped="" ref="0x7e4e7980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e4e7b58"/>
        <function-ref name="isInput" scoped="" ref="0x7e4e7c38"/>
        <function-ref name="toggle" scoped="" ref="0x7e4e7d18"/>
        <function-ref name="isOutput" scoped="" ref="0x7e4e7df8"/>
        <function-ref name="get" scoped="" ref="0x7e4e7ed8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e4e6010"/>
        <function-ref name="set" scoped="" ref="0x7e4e60f0"/>
        <function-ref name="clr" scoped="" ref="0x7e4e61d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x7e4e4708" loc="42:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x7e4e4708"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7e4e48e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x7e4e4e28" loc="44:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x7e4e4e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7e4e3050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x7e4e3868" loc="47:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x7e4e3868"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7e4e3a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW0" ref="0x7e4ea818" loc="29:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusC.nc">
      <component-ref qname="ZigbexBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW0" scoped="" ref="0x7e4ea818"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e4ea9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7e4eaad0"/>
        <function-ref name="toggle" scoped="" ref="0x7e4eabb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e4eac90"/>
        <function-ref name="get" scoped="" ref="0x7e4ead70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e4eae50"/>
        <function-ref name="set" scoped="" ref="0x7e4e9010"/>
        <function-ref name="clr" scoped="" ref="0x7e4e90f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x7e4e2ae0" loc="29:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusP.nc">
      <component-ref qname="ZigbexBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x7e4e2ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7e4e2cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x7e4dc518" loc="32:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusP.nc">
      <component-ref qname="ZigbexBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x7e4dc518"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7e4dc6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x7e4dcbb8" loc="34:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusP.nc">
      <component-ref qname="ZigbexBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x7e4dcbb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7e4dcd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x7e4e2e30" loc="30:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusP.nc">
      <component-ref qname="ZigbexBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x7e4e2e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7e4dc050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x7e4dcf08" loc="35:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusP.nc">
      <component-ref qname="ZigbexBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x7e4dcf08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7e4da0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x7e4dc1c8" loc="31:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusP.nc">
      <component-ref qname="ZigbexBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x7e4dc1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7e4dc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x7e4dc868" loc="33:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusP.nc">
      <component-ref qname="ZigbexBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x7e4dc868"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7e4dca40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x7e4da268" loc="36:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusP.nc">
      <component-ref qname="ZigbexBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x7e4da268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7e4da440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7e4d2990" loc="21:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/UltraredSensorC.nc">
      <component-ref qname="Ch8_Dimmer_181C.UltraredSensorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7e4d2990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e4d1010"/>
        <function-ref name="readDone" scoped="" ref="0x7e4d11f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7daf7448" loc="28:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/UltraredC.nc">
      <component-ref qname="Ch8_Dimmer_181C.UltraredSensorC.DemoChannel"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7daf7448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7daf7a70"/>
        <function-ref name="readDone" scoped="" ref="0x7daf7c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7daf6ca8" loc="28:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/ADC_ShiftM.nc">
      <component-ref qname="Ch8_Dimmer_181C.UltraredSensorC.DemoChannel.ADC_ShiftM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7daf6ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7daf52e8"/>
        <function-ref name="readDone" scoped="" ref="0x7daf54c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="subRead" ref="0x7daf5870" loc="29:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/ADC_ShiftM.nc">
      <component-ref qname="Ch8_Dimmer_181C.UltraredSensorC.DemoChannel.ADC_ShiftM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="subRead" scoped="" ref="0x7daf5870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7daf5e98"/>
        <function-ref name="readDone" scoped="" ref="0x7daf3098"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7daf3c08" loc="30:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/UltraredProC.nc">
      <component-ref qname="Ch8_Dimmer_181C.UltraredSensorC.DemoChannel.UltraredProC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7daf3c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7daf2258"/>
        <function-ref name="readDone" scoped="" ref="0x7daf2438"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7daea230" loc="25:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="Ch8_Dimmer_181C.UltraredSensorC.DemoChannel.UltraredProC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7daea230"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7daea408"/>
        <function-ref name="configure" scoped="" ref="0x7daea4e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7daf01d0" loc="22:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="Ch8_Dimmer_181C.UltraredSensorC.DemoChannel.UltraredProC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7daf01d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7daf07f8"/>
        <function-ref name="readDone" scoped="" ref="0x7daf09d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7daf0ce0" loc="24:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="Ch8_Dimmer_181C.UltraredSensorC.DemoChannel.UltraredProC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7daf0ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7daf0eb8"/>
        <function-ref name="getChannel" scoped="" ref="0x7daea010"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7daea0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7e4b8060" loc="31:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/UltraredDeviceP.nc">
      <component-ref qname="UltraredDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7e4b8060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7e4b8238"/>
        <function-ref name="configure" scoped="" ref="0x7e4b8318"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x7e4b8468" loc="32:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/UltraredDeviceP.nc">
      <component-ref qname="UltraredDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7e4b8468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7e4b8640"/>
        <function-ref name="getChannel" scoped="" ref="0x7e4b8720"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7e4b8800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7e4b4760" loc="30:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/UltraredP.nc">
      <component-ref qname="UltraredP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7e4b4760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7e4b4938"/>
        <function-ref name="configure" scoped="" ref="0x7e4b4a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UltraredAdc" ref="0x7e4b3a58" loc="35:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/UltraredP.nc">
      <component-ref qname="UltraredP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UltraredAdc" scoped="" ref="0x7e4b3a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ZigbexBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7e4b3c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UltraredPin" ref="0x7e4b30e0" loc="34:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/UltraredP.nc">
      <component-ref qname="UltraredP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UltraredPin" scoped="" ref="0x7e4b30e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e4b32b8"/>
        <function-ref name="isInput" scoped="" ref="0x7e4b3398"/>
        <function-ref name="toggle" scoped="" ref="0x7e4b3478"/>
        <function-ref name="isOutput" scoped="" ref="0x7e4b3558"/>
        <function-ref name="get" scoped="" ref="0x7e4b3638"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e4b3718"/>
        <function-ref name="set" scoped="" ref="0x7e4b37f8"/>
        <function-ref name="clr" scoped="" ref="0x7e4b38d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x7e4b4b68" loc="31:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/UltraredP.nc">
      <component-ref qname="UltraredP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7e4b4b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7e4b4d40"/>
        <function-ref name="getChannel" scoped="" ref="0x7e4b4e20"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7e4b4f00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7e4b99d8" loc="28:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/VoltageC.nc">
      <component-ref qname="Ch8_Dimmer_181C.VoltageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7e4b99d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e4b5010"/>
        <function-ref name="readDone" scoped="" ref="0x7e4b51f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7dae5770" loc="28:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/ADC_ShiftM.nc">
      <component-ref qname="Ch8_Dimmer_181C.VoltageC.ADC_ShiftM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7dae5770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dae5d98"/>
        <function-ref name="readDone" scoped="" ref="0x7dae4010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="subRead" ref="0x7dae43b8" loc="29:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/ADC_ShiftM.nc">
      <component-ref qname="Ch8_Dimmer_181C.VoltageC.ADC_ShiftM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="subRead" scoped="" ref="0x7dae43b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dae49e0"/>
        <function-ref name="readDone" scoped="" ref="0x7dae4bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7dae3778" loc="30:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/VoltageProC.nc">
      <component-ref qname="Ch8_Dimmer_181C.VoltageC.VoltageProC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7dae3778"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dae3da0"/>
        <function-ref name="readDone" scoped="" ref="0x7dae2010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7dadfd80" loc="25:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="Ch8_Dimmer_181C.VoltageC.VoltageProC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7dadfd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7dade010"/>
        <function-ref name="configure" scoped="" ref="0x7dade0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7dae0d48" loc="22:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="Ch8_Dimmer_181C.VoltageC.VoltageProC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7dae0d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dadf3c0"/>
        <function-ref name="readDone" scoped="" ref="0x7dadf5a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7dadf8a8" loc="24:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="Ch8_Dimmer_181C.VoltageC.VoltageProC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7dadf8a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7dadfa80"/>
        <function-ref name="getChannel" scoped="" ref="0x7dadfb60"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7dadfc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7e499010" loc="22:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/VoltageDeviceP.nc">
      <component-ref qname="VoltageDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7e499010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7e4991e8"/>
        <function-ref name="configure" scoped="" ref="0x7e4992c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x7e49aac8" loc="21:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/VoltageDeviceP.nc">
      <component-ref qname="VoltageDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7e49aac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7e49aca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7e49ad80"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7e49ae60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7e495290" loc="33:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/VoltageP.nc">
      <component-ref qname="VoltageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7e495290"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7e495468"/>
        <function-ref name="configure" scoped="" ref="0x7e495548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VoltageConfig" ref="0x7e4956c8" loc="34:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/VoltageP.nc">
      <component-ref qname="VoltageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VoltageConfig" scoped="" ref="0x7e4956c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7e4958a0"/>
        <function-ref name="getChannel" scoped="" ref="0x7e495980"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7e495a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BatMon" ref="0x7e495c08" loc="36:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/VoltageP.nc">
      <component-ref qname="VoltageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BatMon" scoped="" ref="0x7e495c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e495de0"/>
        <function-ref name="isInput" scoped="" ref="0x7e495ec0"/>
        <function-ref name="toggle" scoped="" ref="0x7e493010"/>
        <function-ref name="isOutput" scoped="" ref="0x7e4930f0"/>
        <function-ref name="get" scoped="" ref="0x7e4931d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e4932b0"/>
        <function-ref name="set" scoped="" ref="0x7e493390"/>
        <function-ref name="clr" scoped="" ref="0x7e493470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7e49bc50" loc="49:/opt/tinyos-2.x/tos/platforms/homenet/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7e49bc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7e49be28"/>
        <function-ref name="stopDone" scoped="" ref="0x7e49bf08"/>
        <function-ref name="start" scoped="" ref="0x7e48b010"/>
        <function-ref name="stop" scoped="" ref="0x7e48b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7e48b4c8" loc="51:/opt/tinyos-2.x/tos/platforms/homenet/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7e48b4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e48b6a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7e48b780"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e48b860"/>
        <function-ref name="cancel" scoped="" ref="0x7e48b940"/>
        <function-ref name="sendDone" scoped="" ref="0x7e48ba20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7e48a5d0" loc="53:/opt/tinyos-2.x/tos/platforms/homenet/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7e48a5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e48a7a8"/>
        <function-ref name="receive" scoped="" ref="0x7e48a888"/>
        <function-ref name="getPayload" scoped="" ref="0x7e48a968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7e483e20" loc="55:/opt/tinyos-2.x/tos/platforms/homenet/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7e483e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e487010"/>
        <function-ref name="payloadLength" scoped="" ref="0x7e4870f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7e4871d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e4872b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7e487390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7e48bdf8" loc="52:/opt/tinyos-2.x/tos/platforms/homenet/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7e48bdf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e48a010"/>
        <function-ref name="receive" scoped="" ref="0x7e48a0f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7e48a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7e475eb0" loc="57:/opt/tinyos-2.x/tos/platforms/homenet/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e475eb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7e4770c0"/>
        <function-ref name="noAck" scoped="" ref="0x7e4771a0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7e477280"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7e4793b8" loc="56:/opt/tinyos-2.x/tos/platforms/homenet/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7e4793b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7e479590"/>
        <function-ref name="address" scoped="" ref="0x7e479670"/>
        <function-ref name="destination" scoped="" ref="0x7e479750"/>
        <function-ref name="setSource" scoped="" ref="0x7e479830"/>
        <function-ref name="setDestination" scoped="" ref="0x7e479910"/>
        <function-ref name="type" scoped="" ref="0x7e4799f0"/>
        <function-ref name="setType" scoped="" ref="0x7e479ad0"/>
        <function-ref name="isForMe" scoped="" ref="0x7e479bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7e472878" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7e472878"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7e472a50"/>
        <function-ref name="stopDone" scoped="" ref="0x7e472b30"/>
        <function-ref name="start" scoped="" ref="0x7e472c10"/>
        <function-ref name="stop" scoped="" ref="0x7e472cf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7e471100" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7e471100"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ed94078"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e4712d8"/>
        <function-ref name="getPayload" scoped="" ref="0x7e4713b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e471498"/>
        <function-ref name="cancel" scoped="" ref="0x7e471578"/>
        <function-ref name="sendDone" scoped="" ref="0x7e471658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7e4701e8" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7e4701e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ed94078"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e4703c0"/>
        <function-ref name="receive" scoped="" ref="0x7e4704a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7e470580"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7e46d040" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7e46d040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e46d218"/>
        <function-ref name="payloadLength" scoped="" ref="0x7e46d2f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7e46d3d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e46d4b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7e46d598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7e468b48" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7e468b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7e468d20"/>
        <function-ref name="getRssi" scoped="" ref="0x7e468e00"/>
        <function-ref name="getPower" scoped="" ref="0x7e468ee0"/>
        <function-ref name="getLqi" scoped="" ref="0x7e46b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7e471a30" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7e471a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ed94078"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e471c08"/>
        <function-ref name="receive" scoped="" ref="0x7e471ce8"/>
        <function-ref name="getPayload" scoped="" ref="0x7e471dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7e46b168" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7e46b168"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7e46b340"/>
        <function-ref name="noAck" scoped="" ref="0x7e46b420"/>
        <function-ref name="wasAcked" scoped="" ref="0x7e46b500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7e4706d0" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7e4706d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7e4708a8"/>
        <function-ref name="address" scoped="" ref="0x7e470988"/>
        <function-ref name="destination" scoped="" ref="0x7e470a68"/>
        <function-ref name="setSource" scoped="" ref="0x7e470b48"/>
        <function-ref name="setDestination" scoped="" ref="0x7e470c28"/>
        <function-ref name="type" scoped="" ref="0x7e470d08"/>
        <function-ref name="setType" scoped="" ref="0x7e470de8"/>
        <function-ref name="isForMe" scoped="" ref="0x7e470ec8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7e45a6c8" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7e45a6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e45a8a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7e45a980"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e45aa60"/>
        <function-ref name="cancel" scoped="" ref="0x7e45ab40"/>
        <function-ref name="sendDone" scoped="" ref="0x7e45ac20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7e45ad98" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7e45ad98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e45d010"/>
        <function-ref name="receive" scoped="" ref="0x7e45d0f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7e45d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7e465848" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7e465848"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ed94078"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e465a20"/>
        <function-ref name="getPayload" scoped="" ref="0x7e465b00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e465be0"/>
        <function-ref name="cancel" scoped="" ref="0x7e465cc0"/>
        <function-ref name="sendDone" scoped="" ref="0x7e465da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7e464938" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7e464938"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ed94078"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e464b10"/>
        <function-ref name="receive" scoped="" ref="0x7e464bf0"/>
        <function-ref name="getPayload" scoped="" ref="0x7e464cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7e462778" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7e462778"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e462950"/>
        <function-ref name="payloadLength" scoped="" ref="0x7e462a30"/>
        <function-ref name="getPayload" scoped="" ref="0x7e462b10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e462bf0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7e462cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7e4641a0" loc="38:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7e4641a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ed94078"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e464378"/>
        <function-ref name="receive" scoped="" ref="0x7e464458"/>
        <function-ref name="getPayload" scoped="" ref="0x7e464538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7e464e20" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7e464e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7e462010"/>
        <function-ref name="address" scoped="" ref="0x7e4620f0"/>
        <function-ref name="destination" scoped="" ref="0x7e4621d0"/>
        <function-ref name="setSource" scoped="" ref="0x7e4622b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7e462390"/>
        <function-ref name="type" scoped="" ref="0x7e462470"/>
        <function-ref name="setType" scoped="" ref="0x7e462550"/>
        <function-ref name="isForMe" scoped="" ref="0x7e462630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7e42b010" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7e42b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7e42b1e8"/>
        <function-ref name="stopDone" scoped="" ref="0x7e42b2c8"/>
        <function-ref name="start" scoped="" ref="0x7e42b3a8"/>
        <function-ref name="stop" scoped="" ref="0x7e42b488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7e42b5f0" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7e42b5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e42b7c8"/>
        <function-ref name="getPayload" scoped="" ref="0x7e42b8a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e42b988"/>
        <function-ref name="cancel" scoped="" ref="0x7e42ba68"/>
        <function-ref name="sendDone" scoped="" ref="0x7e42bb48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7e42bcb0" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7e42bcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7e42be88"/>
        <function-ref name="receive" scoped="" ref="0x7e42a010"/>
        <function-ref name="getPayload" scoped="" ref="0x7e42a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7e42a260" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7e42a260"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7e42a438"/>
        <function-ref name="address" scoped="" ref="0x7e42a518"/>
        <function-ref name="destination" scoped="" ref="0x7e42a5f8"/>
        <function-ref name="setSource" scoped="" ref="0x7e42a6d8"/>
        <function-ref name="setDestination" scoped="" ref="0x7e42a7b8"/>
        <function-ref name="type" scoped="" ref="0x7e42a898"/>
        <function-ref name="setType" scoped="" ref="0x7e42a978"/>
        <function-ref name="isForMe" scoped="" ref="0x7e42aa58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7e428cd8" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7e428cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7e428eb0"/>
        <function-ref name="stopDone" scoped="" ref="0x7e425010"/>
        <function-ref name="start" scoped="" ref="0x7e4250f0"/>
        <function-ref name="stop" scoped="" ref="0x7e4251d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7e417e68" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x7e417e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e41c050"/>
        <function-ref name="cancel" scoped="" ref="0x7e41c130"/>
        <function-ref name="modify" scoped="" ref="0x7e41c210"/>
        <function-ref name="sendDone" scoped="" ref="0x7e41c2f0"/>
        <function-ref name="resendCCA" scoped="" ref="0x7e41c3d0"/>
        <function-ref name="resend" scoped="" ref="0x7e41c4b0"/>
        <function-ref name="sendCCA" scoped="" ref="0x7e41c590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7e425338" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7e425338"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e425510"/>
        <function-ref name="getPayload" scoped="" ref="0x7e4255f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7e4256d0"/>
        <function-ref name="cancel" scoped="" ref="0x7e4257b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7e425890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7e410690" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7e410690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7e410868"/>
        <function-ref name="rand32" scoped="" ref="0x7e410948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e428990" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e428990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e428b68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7e421610" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7e421610"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e4217e8"/>
        <function-ref name="stop" scoped="" ref="0x7e4218c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7e41dc28" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x7e41dc28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7e41de00"/>
        <function-ref name="rfOff" scoped="" ref="0x7e41dee0"/>
        <function-ref name="rxOn" scoped="" ref="0x7e421010"/>
        <function-ref name="startVReg" scoped="" ref="0x7e4210f0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7e4211d0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7e4212b0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7e421390"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7e421470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7e4124f8" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7e4124f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7e4126d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7e4127b0"/>
        <function-ref name="led1On" scoped="" ref="0x7e412890"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7e412970"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7e412a50"/>
        <function-ref name="get" scoped="" ref="0x7e412b30"/>
        <function-ref name="led1Off" scoped="" ref="0x7e412c10"/>
        <function-ref name="led2Off" scoped="" ref="0x7e411010"/>
        <function-ref name="set" scoped="" ref="0x7e412cf0"/>
        <function-ref name="led0On" scoped="" ref="0x7e412dd0"/>
        <function-ref name="led2On" scoped="" ref="0x7e412eb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7e425a00" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e425a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e425bd8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e425cb8"/>
        <function-ref name="request" scoped="" ref="0x7e425d98"/>
        <function-ref name="granted" scoped="" ref="0x7e425e78"/>
        <function-ref name="isOwner" scoped="" ref="0x7e423010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CsmaBackoff" ref="0x7e414ed8" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaBackoff" scoped="" ref="0x7e414ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="congestion" scoped="" ref="0x7e4160c0"/>
        <function-ref name="initial" scoped="" ref="0x7e4161a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7e410ab8" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7e410ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7e410c90"/>
        <function-ref name="address" scoped="" ref="0x7e410d70"/>
        <function-ref name="destination" scoped="" ref="0x7e410e50"/>
        <function-ref name="setSource" scoped="" ref="0x7e412010"/>
        <function-ref name="setDestination" scoped="" ref="0x7e4120f0"/>
        <function-ref name="type" scoped="" ref="0x7e4121d0"/>
        <function-ref name="setType" scoped="" ref="0x7e4122b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7e412390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7e40d6b8" loc="72:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDone_task" scoped="" ref="0x7e40d6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e40d890"/>
        <function-ref name="runTask" scoped="" ref="0x7e40d970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7e40ee60" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone_task" scoped="" ref="0x7e40ee60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e40d0e0"/>
        <function-ref name="runTask" scoped="" ref="0x7e40d1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7e40e730" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDone_task" scoped="" ref="0x7e40e730"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e40e908"/>
        <function-ref name="runTask" scoped="" ref="0x7e40e9e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7e3e6dd8" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7e3e6dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x7e3ea010"/>
        <function-ref name="setChannel" scoped="" ref="0x7e3ea0f0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7e3ea1d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7e3ea2b0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7e3ea390"/>
        <function-ref name="sync" scoped="" ref="0x7e3ea470"/>
        <function-ref name="getChannel" scoped="" ref="0x7e3ea550"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7e3ea630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e3ed578" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e3ed578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e3ed750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7e3ea7a0" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x7e3ea7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7e3ea978"/>
        <function-ref name="rfOff" scoped="" ref="0x7e3eaa58"/>
        <function-ref name="rxOn" scoped="" ref="0x7e3eab38"/>
        <function-ref name="startVReg" scoped="" ref="0x7e3eac18"/>
        <function-ref name="stopVReg" scoped="" ref="0x7e3eacf8"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7e3eadd8"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7e3eaeb8"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7e3e9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e3ed8c0" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e3ed8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e3eda98"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e3edb78"/>
        <function-ref name="request" scoped="" ref="0x7e3edc58"/>
        <function-ref name="granted" scoped="" ref="0x7e3edd38"/>
        <function-ref name="isOwner" scoped="" ref="0x7e3ede18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7e3e9180" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7e3e9180"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7e3e9358"/>
        <function-ref name="address" scoped="" ref="0x7e3e9438"/>
        <function-ref name="destination" scoped="" ref="0x7e3e9518"/>
        <function-ref name="setSource" scoped="" ref="0x7e3e95f8"/>
        <function-ref name="setDestination" scoped="" ref="0x7e3e96d8"/>
        <function-ref name="type" scoped="" ref="0x7e3e97b8"/>
        <function-ref name="setType" scoped="" ref="0x7e3e9898"/>
        <function-ref name="isForMe" scoped="" ref="0x7e3e9978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7e3e1728" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7e3e1728"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x7e3e1900"/>
        <function-ref name="setChannel" scoped="" ref="0x7e3e19e0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7e3e1ac0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7e3e1ba0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7e3e1c80"/>
        <function-ref name="sync" scoped="" ref="0x7e3e1d60"/>
        <function-ref name="getChannel" scoped="" ref="0x7e3e1e40"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7e3e1f20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7e3e0b70" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StartupTimer" scoped="" ref="0x7e3e0b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120cf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e3dfee8"/>
        <function-ref name="fired" scoped="" ref="0x7e3df7a8"/>
        <function-ref name="startAt" scoped="" ref="0x7e3dfba8"/>
        <function-ref name="isRunning" scoped="" ref="0x7e3df9a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7e3dd0f8"/>
        <function-ref name="start" scoped="" ref="0x7e3df308"/>
        <function-ref name="stop" scoped="" ref="0x7e3df5a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7e3d7030" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7e3d7030"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e3d7208"/>
        <function-ref name="write" scoped="" ref="0x7e3d72e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7e3ddc78" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7e3ddc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e3dde50"/>
        <function-ref name="isInput" scoped="" ref="0x7e3dc010"/>
        <function-ref name="toggle" scoped="" ref="0x7e3dc0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e3dc1d0"/>
        <function-ref name="get" scoped="" ref="0x7e3dc2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e3dc390"/>
        <function-ref name="set" scoped="" ref="0x7e3dc470"/>
        <function-ref name="clr" scoped="" ref="0x7e3dc550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7e3d26e0" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7e3d26e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e3d2938"/>
        <function-ref name="write" scoped="" ref="0x7e3d2a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7e3dd2e8" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7e3dd2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e3dd4c0"/>
        <function-ref name="isInput" scoped="" ref="0x7e3dd5a0"/>
        <function-ref name="toggle" scoped="" ref="0x7e3dd680"/>
        <function-ref name="isOutput" scoped="" ref="0x7e3dd760"/>
        <function-ref name="get" scoped="" ref="0x7e3dd840"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e3dd920"/>
        <function-ref name="set" scoped="" ref="0x7e3dda00"/>
        <function-ref name="clr" scoped="" ref="0x7e3ddae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7e3dc6e8" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x7e3dc6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e3dc8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7e3dc9a0"/>
        <function-ref name="toggle" scoped="" ref="0x7e3dca80"/>
        <function-ref name="isOutput" scoped="" ref="0x7e3dcb60"/>
        <function-ref name="get" scoped="" ref="0x7e3dcc40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e3dcd20"/>
        <function-ref name="set" scoped="" ref="0x7e3dce00"/>
        <function-ref name="clr" scoped="" ref="0x7e3dcee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e3e2ce8" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e3e2ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e3e2ec0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7e3d7488" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7e3d7488"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e3d7660"/>
        <function-ref name="write" scoped="" ref="0x7e3d7740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7e3db6a8" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7e3db6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e3db880"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e3db960"/>
        <function-ref name="request" scoped="" ref="0x7e3dba40"/>
        <function-ref name="granted" scoped="" ref="0x7e3dbb20"/>
        <function-ref name="isOwner" scoped="" ref="0x7e3dbc00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7e3d0580" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7e3d0580"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e3d0758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7e3d08f0" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7e3d08f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e3d0ac8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7e3cf610" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SyncResource" scoped="" ref="0x7e3cf610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e3cf7e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e3cf8c8"/>
        <function-ref name="request" scoped="" ref="0x7e3cf9a8"/>
        <function-ref name="granted" scoped="" ref="0x7e3cfa88"/>
        <function-ref name="isOwner" scoped="" ref="0x7e3cfb68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7e3e00a8" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x7e3e00a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7e3e0280"/>
        <function-ref name="rfOff" scoped="" ref="0x7e3e0360"/>
        <function-ref name="rxOn" scoped="" ref="0x7e3e0440"/>
        <function-ref name="startVReg" scoped="" ref="0x7e3e0520"/>
        <function-ref name="stopVReg" scoped="" ref="0x7e3e0600"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7e3e06e0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7e3e07c0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7e3e08a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7e3d2290" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7e3d2290"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e3d2468"/>
        <function-ref name="write" scoped="" ref="0x7e3d2548"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7e3d2bb0" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7e3d2bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e3d2d88"/>
        <function-ref name="write" scoped="" ref="0x7e3d2e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e3e1060" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e3e1060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e3e1238"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e3e1318"/>
        <function-ref name="request" scoped="" ref="0x7e3e13f8"/>
        <function-ref name="granted" scoped="" ref="0x7e3e14d8"/>
        <function-ref name="isOwner" scoped="" ref="0x7e3e15b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7e3d50b0" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7e3d50b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e3d5288"/>
        <function-ref name="write" scoped="" ref="0x7e3d5368"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7e3cee80" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7e3cee80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e3d0070"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7e3db090" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x7e3db090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e3db268"/>
        <function-ref name="disable" scoped="" ref="0x7e3db348"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7e3db428"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7e3db508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7e3d0c38" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7e3d0c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7e3d0e10"/>
        <function-ref name="address" scoped="" ref="0x7e3d0ef0"/>
        <function-ref name="destination" scoped="" ref="0x7e3cf010"/>
        <function-ref name="setSource" scoped="" ref="0x7e3cf0f0"/>
        <function-ref name="setDestination" scoped="" ref="0x7e3cf1d0"/>
        <function-ref name="type" scoped="" ref="0x7e3cf2b0"/>
        <function-ref name="setType" scoped="" ref="0x7e3cf390"/>
        <function-ref name="isForMe" scoped="" ref="0x7e3cf470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7e3cfcd0" loc="67:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7e3cfcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7e3cfea8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7e3cd010"/>
        <function-ref name="led1On" scoped="" ref="0x7e3cd0f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7e3cd1d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7e3cd2b0"/>
        <function-ref name="get" scoped="" ref="0x7e3cd390"/>
        <function-ref name="led1Off" scoped="" ref="0x7e3cd470"/>
        <function-ref name="led2Off" scoped="" ref="0x7e3cd7f0"/>
        <function-ref name="set" scoped="" ref="0x7e3cd550"/>
        <function-ref name="led0On" scoped="" ref="0x7e3cd630"/>
        <function-ref name="led2On" scoped="" ref="0x7e3cd710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7e3d0208" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7e3d0208"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e3d03e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone_task" ref="0x7e3cb260" loc="86:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="syncDone_task" scoped="" ref="0x7e3cb260"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e3cb438"/>
        <function-ref name="runTask" scoped="" ref="0x7e3cb518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e3a6b10" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e3a6b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e3a6ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7e3a4010" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm32khz32" scoped="" ref="0x7e3a4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120cf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e3a3350"/>
        <function-ref name="fired" scoped="" ref="0x7e3a4c00"/>
        <function-ref name="startAt" scoped="" ref="0x7e3a3010"/>
        <function-ref name="isRunning" scoped="" ref="0x7e3a4e00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7e3a3550"/>
        <function-ref name="start" scoped="" ref="0x7e3a4760"/>
        <function-ref name="stop" scoped="" ref="0x7e3a4a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7e3a1358" loc="67:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7e3a1358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120cf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e3a0750"/>
        <function-ref name="fired" scoped="" ref="0x7e3a0010"/>
        <function-ref name="startAt" scoped="" ref="0x7e3a0410"/>
        <function-ref name="isRunning" scoped="" ref="0x7e3a0210"/>
        <function-ref name="getAlarm" scoped="" ref="0x7e3a0950"/>
        <function-ref name="start" scoped="" ref="0x7e3a1aa8"/>
        <function-ref name="stop" scoped="" ref="0x7e3a1d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e3a0b08" loc="68:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e3a0b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e3a0ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7dad0758" loc="28:/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7dad0758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120cf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7dacaab0"/>
        <function-ref name="fired" scoped="" ref="0x7daca370"/>
        <function-ref name="startAt" scoped="" ref="0x7daca770"/>
        <function-ref name="isRunning" scoped="" ref="0x7daca570"/>
        <function-ref name="getAlarm" scoped="" ref="0x7dacacb0"/>
        <function-ref name="start" scoped="" ref="0x7dad0ea8"/>
        <function-ref name="stop" scoped="" ref="0x7daca170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7dac82c8" loc="30:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7dac82c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b70"/>
            <typename><typedef-ref name="TOne" ref="0x7f081ad8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7dac6618"/>
        <function-ref name="fired" scoped="" ref="0x7dac8eb8"/>
        <function-ref name="startAt" scoped="" ref="0x7dac62d8"/>
        <function-ref name="isRunning" scoped="" ref="0x7dac60d8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7dac6818"/>
        <function-ref name="start" scoped="" ref="0x7dac8a18"/>
        <function-ref name="stop" scoped="" ref="0x7dac8cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7e381b98" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7e381b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7e381d70"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x7e381e50"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7e386010"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x7e3860f0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7e3861d0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7e3862b0"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x7e386390"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x7e386470"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x7e386550"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x7e386630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7e37bb48" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7e37bb48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7e37f410"/>
        <function-ref name="test" scoped="" ref="0x7e37f010"/>
        <function-ref name="get" scoped="" ref="0x7e380200"/>
        <function-ref name="captured" scoped="" ref="0x7e3806a0"/>
        <function-ref name="reset" scoped="" ref="0x7e380940"/>
        <function-ref name="isOn" scoped="" ref="0x7e37f210"/>
        <function-ref name="set" scoped="" ref="0x7e380400"/>
        <function-ref name="start" scoped="" ref="0x7e380b40"/>
        <function-ref name="stop" scoped="" ref="0x7e380d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7e37f9b8" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7e37f9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7e379cb0"/>
        <function-ref name="fired" scoped="" ref="0x7e3794b0"/>
        <function-ref name="get" scoped="" ref="0x7e379010"/>
        <function-ref name="reset" scoped="" ref="0x7e3796b0"/>
        <function-ref name="isOn" scoped="" ref="0x7e379eb0"/>
        <function-ref name="set" scoped="" ref="0x7e379210"/>
        <function-ref name="start" scoped="" ref="0x7e3798b0"/>
        <function-ref name="stop" scoped="" ref="0x7e379ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e38b368" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e38b368"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7e38aa68"/>
        <function-ref name="test" scoped="" ref="0x7e38a668"/>
        <function-ref name="get" scoped="" ref="0x7e38b9b0"/>
        <function-ref name="setScale" scoped="" ref="0x7e38ac68"/>
        <function-ref name="getScale" scoped="" ref="0x7e38af08"/>
        <function-ref name="reset" scoped="" ref="0x7e38a068"/>
        <function-ref name="overflow" scoped="" ref="0x7e38be50"/>
        <function-ref name="isOn" scoped="" ref="0x7e38a868"/>
        <function-ref name="set" scoped="" ref="0x7e38bbb0"/>
        <function-ref name="start" scoped="" ref="0x7e38a268"/>
        <function-ref name="stop" scoped="" ref="0x7e38a468"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7e371370" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7e371370"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7e371548"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x7e371628"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7e371708"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x7e3717e8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7e3718c8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7e3719a8"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x7e371a88"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x7e371b68"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x7e371c48"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x7e371d28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0Ctrl" ref="0x7e368220" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0Ctrl" scoped="" ref="0x7e368220"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7e3683f8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7e3684d8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7e3685b8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7e368698"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7e368778"/>
        <function-ref name="setControl" scoped="" ref="0x7e368858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x7e36fb30" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x7e36fb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7e36dea0"/>
        <function-ref name="fired" scoped="" ref="0x7e36d6a0"/>
        <function-ref name="get" scoped="" ref="0x7e36d200"/>
        <function-ref name="reset" scoped="" ref="0x7e36d8a0"/>
        <function-ref name="isOn" scoped="" ref="0x7e36c0b8"/>
        <function-ref name="set" scoped="" ref="0x7e36d400"/>
        <function-ref name="start" scoped="" ref="0x7e36daa0"/>
        <function-ref name="stop" scoped="" ref="0x7e36dca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7e370010" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7e370010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7e36f810"/>
        <function-ref name="test" scoped="" ref="0x7e36f410"/>
        <function-ref name="get" scoped="" ref="0x7e370658"/>
        <function-ref name="captured" scoped="" ref="0x7e370af8"/>
        <function-ref name="reset" scoped="" ref="0x7e370d98"/>
        <function-ref name="isOn" scoped="" ref="0x7e36f610"/>
        <function-ref name="set" scoped="" ref="0x7e370858"/>
        <function-ref name="start" scoped="" ref="0x7e36f010"/>
        <function-ref name="stop" scoped="" ref="0x7e36f210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x7e36c338" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x7e36c338"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7e36a648"/>
        <function-ref name="fired" scoped="" ref="0x7e36ce20"/>
        <function-ref name="get" scoped="" ref="0x7e36c980"/>
        <function-ref name="reset" scoped="" ref="0x7e36a048"/>
        <function-ref name="isOn" scoped="" ref="0x7e36a848"/>
        <function-ref name="set" scoped="" ref="0x7e36cb80"/>
        <function-ref name="start" scoped="" ref="0x7e36a248"/>
        <function-ref name="stop" scoped="" ref="0x7e36a448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x7e36aac8" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x7e36aac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7e369dc8"/>
        <function-ref name="fired" scoped="" ref="0x7e3695c8"/>
        <function-ref name="get" scoped="" ref="0x7e369128"/>
        <function-ref name="reset" scoped="" ref="0x7e3697c8"/>
        <function-ref name="isOn" scoped="" ref="0x7e368010"/>
        <function-ref name="set" scoped="" ref="0x7e369328"/>
        <function-ref name="start" scoped="" ref="0x7e3699c8"/>
        <function-ref name="stop" scoped="" ref="0x7e369bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e3745d8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e3745d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7e372cd8"/>
        <function-ref name="test" scoped="" ref="0x7e3728d8"/>
        <function-ref name="get" scoped="" ref="0x7e374c20"/>
        <function-ref name="setScale" scoped="" ref="0x7e372ed8"/>
        <function-ref name="getScale" scoped="" ref="0x7e371190"/>
        <function-ref name="reset" scoped="" ref="0x7e3722d8"/>
        <function-ref name="overflow" scoped="" ref="0x7e3720d8"/>
        <function-ref name="isOn" scoped="" ref="0x7e372ad8"/>
        <function-ref name="set" scoped="" ref="0x7e374e20"/>
        <function-ref name="start" scoped="" ref="0x7e3724d8"/>
        <function-ref name="stop" scoped="" ref="0x7e3726d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e2e0f28" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e2e0f28"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f2500e0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f2500e0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e2c0110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7e2c0320" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e2c0320"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7e2bfa48"/>
        <function-ref name="test" scoped="" ref="0x7e2bf648"/>
        <function-ref name="get" scoped="" ref="0x7e2c0968"/>
        <function-ref name="setScale" scoped="" ref="0x7e2bfc48"/>
        <function-ref name="getScale" scoped="" ref="0x7e2bfee8"/>
        <function-ref name="reset" scoped="" ref="0x7e2bf048"/>
        <function-ref name="overflow" scoped="" ref="0x7e2c0e08"/>
        <function-ref name="isOn" scoped="" ref="0x7e2bf848"/>
        <function-ref name="set" scoped="" ref="0x7e2c0b68"/>
        <function-ref name="start" scoped="" ref="0x7e2bf248"/>
        <function-ref name="stop" scoped="" ref="0x7e2bf448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7dabd7f0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7dabd7f0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x7f251f28"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x7f251f28"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b70"/>
            <typename><typedef-ref name="TOne" ref="0x7f081ad8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7dabcbf0"/>
        <function-ref name="fired" scoped="" ref="0x7dabc4b0"/>
        <function-ref name="startAt" scoped="" ref="0x7dabc8b0"/>
        <function-ref name="isRunning" scoped="" ref="0x7dabc6b0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7dabcdf0"/>
        <function-ref name="start" scoped="" ref="0x7dabc010"/>
        <function-ref name="stop" scoped="" ref="0x7dabc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x7dab9ef8" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x7dab9ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7dab6248"/>
        <function-ref name="fired" scoped="" ref="0x7dab7a18"/>
        <function-ref name="get" scoped="" ref="0x7dab7578"/>
        <function-ref name="reset" scoped="" ref="0x7dab7c18"/>
        <function-ref name="isOn" scoped="" ref="0x7dab6448"/>
        <function-ref name="set" scoped="" ref="0x7dab7778"/>
        <function-ref name="start" scoped="" ref="0x7dab7e18"/>
        <function-ref name="stop" scoped="" ref="0x7dab6048"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x7daba058" loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x7daba058"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7dab9810"/>
        <function-ref name="test" scoped="" ref="0x7dab9410"/>
        <function-ref name="get" scoped="" ref="0x7daba6a0"/>
        <function-ref name="setScale" scoped="" ref="0x7dab9a10"/>
        <function-ref name="getScale" scoped="" ref="0x7dab9cb0"/>
        <function-ref name="reset" scoped="" ref="0x7dabad40"/>
        <function-ref name="overflow" scoped="" ref="0x7dabab40"/>
        <function-ref name="isOn" scoped="" ref="0x7dab9610"/>
        <function-ref name="set" scoped="" ref="0x7daba8a0"/>
        <function-ref name="start" scoped="" ref="0x7dab9010"/>
        <function-ref name="stop" scoped="" ref="0x7dab9210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7e2a0db0" loc="24:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7e2a0db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120cf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e29f518"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7e29f918"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7e29f718"/>
        <function-ref name="overflow" scoped="" ref="0x7e29fb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7e29a150" loc="24:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7e29a150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b70"/>
            <typename><typedef-ref name="TOne" ref="0x7f081ad8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e29a8a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7e29aca0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7e29aaa0"/>
        <function-ref name="overflow" scoped="" ref="0x7e29aea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7e299e88" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7e299e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b70"/>
            <typename><typedef-ref name="TOne" ref="0x7f081ad8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e297600"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7e297a00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7e297800"/>
        <function-ref name="overflow" scoped="" ref="0x7e297c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7e297e68" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e297e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7e294610"/>
        <function-ref name="test" scoped="" ref="0x7e294210"/>
        <function-ref name="get" scoped="" ref="0x7e2964d8"/>
        <function-ref name="setScale" scoped="" ref="0x7e294810"/>
        <function-ref name="getScale" scoped="" ref="0x7e294ab0"/>
        <function-ref name="reset" scoped="" ref="0x7e296b78"/>
        <function-ref name="overflow" scoped="" ref="0x7e296978"/>
        <function-ref name="isOn" scoped="" ref="0x7e294410"/>
        <function-ref name="set" scoped="" ref="0x7e2966d8"/>
        <function-ref name="start" scoped="" ref="0x7e296d78"/>
        <function-ref name="stop" scoped="" ref="0x7e294010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7e274620" loc="52:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7e274620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120cf0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e274d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7e273210"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7e273010"/>
        <function-ref name="overflow" scoped="" ref="0x7e273410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7e2925c0" loc="51:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7e2925c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120cf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7e292d10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7e274128"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7e292f10"/>
        <function-ref name="overflow" scoped="" ref="0x7e274328"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7dac59f8" loc="50:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7dac59f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120cf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7dac4de0"/>
        <function-ref name="fired" scoped="" ref="0x7dac46a0"/>
        <function-ref name="startAt" scoped="" ref="0x7dac4aa0"/>
        <function-ref name="isRunning" scoped="" ref="0x7dac48a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7dac3010"/>
        <function-ref name="start" scoped="" ref="0x7dac4200"/>
        <function-ref name="stop" scoped="" ref="0x7dac44a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7dac1340" loc="62:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x7dac1340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b70"/>
            <typename><typedef-ref name="TOne" ref="0x7f081ad8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7dac0750"/>
        <function-ref name="fired" scoped="" ref="0x7dac0010"/>
        <function-ref name="startAt" scoped="" ref="0x7dac0410"/>
        <function-ref name="isRunning" scoped="" ref="0x7dac0210"/>
        <function-ref name="getAlarm" scoped="" ref="0x7dac0950"/>
        <function-ref name="start" scoped="" ref="0x7dac1a90"/>
        <function-ref name="stop" scoped="" ref="0x7dac1d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7dac32e8" loc="57:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7dac32e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120cf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7dac3a38"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7dac3e38"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7dac3c38"/>
        <function-ref name="overflow" scoped="" ref="0x7dac1048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e233280" loc="18:/opt/tinyos-2.x/tos/system/NoInitC.nc">
      <component-ref qname="NoInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e233280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e233458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7e220268" loc="68:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x7e220268"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e220440"/>
        <function-ref name="isInput" scoped="" ref="0x7e220520"/>
        <function-ref name="toggle" scoped="" ref="0x7e220600"/>
        <function-ref name="isOutput" scoped="" ref="0x7e2206e0"/>
        <function-ref name="get" scoped="" ref="0x7e2207c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e2208a0"/>
        <function-ref name="set" scoped="" ref="0x7e220980"/>
        <function-ref name="clr" scoped="" ref="0x7e220a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7e220bd8" loc="69:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x7e220bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e220db0"/>
        <function-ref name="isInput" scoped="" ref="0x7e220e90"/>
        <function-ref name="toggle" scoped="" ref="0x7e21f010"/>
        <function-ref name="isOutput" scoped="" ref="0x7e21f0f0"/>
        <function-ref name="get" scoped="" ref="0x7e21f1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e21f2b0"/>
        <function-ref name="set" scoped="" ref="0x7e21f390"/>
        <function-ref name="clr" scoped="" ref="0x7e21f470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7e21f5e8" loc="70:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7e21f5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e21f7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7e21f8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7e21f980"/>
        <function-ref name="isOutput" scoped="" ref="0x7e21fa60"/>
        <function-ref name="get" scoped="" ref="0x7e21fb40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e21fc20"/>
        <function-ref name="set" scoped="" ref="0x7e21fd00"/>
        <function-ref name="clr" scoped="" ref="0x7e21fde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7e221858" loc="67:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7e221858"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e221a30"/>
        <function-ref name="isInput" scoped="" ref="0x7e221b10"/>
        <function-ref name="toggle" scoped="" ref="0x7e221bf0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e221cd0"/>
        <function-ref name="get" scoped="" ref="0x7e221db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e221e90"/>
        <function-ref name="set" scoped="" ref="0x7e220010"/>
        <function-ref name="clr" scoped="" ref="0x7e2200f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7e21e980" loc="72:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x7e21e980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e21eb58"/>
        <function-ref name="isInput" scoped="" ref="0x7e21ec38"/>
        <function-ref name="toggle" scoped="" ref="0x7e21ed18"/>
        <function-ref name="isOutput" scoped="" ref="0x7e21edf8"/>
        <function-ref name="get" scoped="" ref="0x7e21eed8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e21d010"/>
        <function-ref name="set" scoped="" ref="0x7e21d0f0"/>
        <function-ref name="clr" scoped="" ref="0x7e21d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7e3a8ea0" loc="66:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x7e3a8ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e2210c0"/>
        <function-ref name="isInput" scoped="" ref="0x7e2211a0"/>
        <function-ref name="toggle" scoped="" ref="0x7e221280"/>
        <function-ref name="isOutput" scoped="" ref="0x7e221360"/>
        <function-ref name="get" scoped="" ref="0x7e221440"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e221520"/>
        <function-ref name="set" scoped="" ref="0x7e221600"/>
        <function-ref name="clr" scoped="" ref="0x7e2216e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7e21e010" loc="71:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x7e21e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e21e1e8"/>
        <function-ref name="isInput" scoped="" ref="0x7e21e2c8"/>
        <function-ref name="toggle" scoped="" ref="0x7e21e3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7e21e488"/>
        <function-ref name="get" scoped="" ref="0x7e21e568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e21e648"/>
        <function-ref name="set" scoped="" ref="0x7e21e728"/>
        <function-ref name="clr" scoped="" ref="0x7e21e808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7e213ed0" loc="39:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x7e213ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7e2150c0"/>
        <function-ref name="disable" scoped="" ref="0x7e2151a0"/>
        <function-ref name="captured" scoped="" ref="0x7e215280"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7e215360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7e215500" loc="40:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x7e215500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e2156d8"/>
        <function-ref name="disable" scoped="" ref="0x7e2157b8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7e215898"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7e215978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7e215b18" loc="41:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7e215b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e215cf0"/>
        <function-ref name="disable" scoped="" ref="0x7e215dd0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7e215eb0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7e214010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7e211690" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7e211690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7e211868"/>
        <function-ref name="disable" scoped="" ref="0x7e211948"/>
        <function-ref name="captured" scoped="" ref="0x7e211a28"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7e211b08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Capture" ref="0x7e211d18" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Capture" scoped="" ref="0x7e211d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7e1f84d8"/>
        <function-ref name="test" scoped="" ref="0x7e1f80d8"/>
        <function-ref name="get" scoped="" ref="0x7e210370"/>
        <function-ref name="captured" scoped="" ref="0x7e210810"/>
        <function-ref name="reset" scoped="" ref="0x7e210ab0"/>
        <function-ref name="isOn" scoped="" ref="0x7e1f82d8"/>
        <function-ref name="set" scoped="" ref="0x7e210570"/>
        <function-ref name="start" scoped="" ref="0x7e210cb0"/>
        <function-ref name="stop" scoped="" ref="0x7e210eb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7e1f7cb0" loc="9:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7e1f7cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7e1f7e88"/>
        <function-ref name="fired" scoped="" ref="0x7e1f6010"/>
        <function-ref name="disable" scoped="" ref="0x7e1f60f0"/>
        <function-ref name="edge" scoped="" ref="0x7e1f61d0"/>
        <function-ref name="enable" scoped="" ref="0x7e1f62b0"/>
        <function-ref name="getValue" scoped="" ref="0x7e1f6390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7e1f76b8" loc="8:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7e1f76b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e1f7890"/>
        <function-ref name="disable" scoped="" ref="0x7e1f7970"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7e1f7a50"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7e1f7b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCATimer" ref="0x7e1f0300" loc="71:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCATimer" scoped="" ref="0x7e1f0300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120888"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120a08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e1e1c28"/>
        <function-ref name="fired" scoped="" ref="0x7e1e1048"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e1e15e8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e1e1408"/>
        <function-ref name="getdt" scoped="" ref="0x7e1df010"/>
        <function-ref name="gett0" scoped="" ref="0x7e1e1e08"/>
        <function-ref name="isRunning" scoped="" ref="0x7e1e1228"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e1f0928"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e1e1908"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e1f0ba8"/>
        <function-ref name="stop" scoped="" ref="0x7e1f0e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7e1dbd70" loc="113:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7e1dbd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e1da010"/>
        <function-ref name="runTask" scoped="" ref="0x7e1da0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC_CCA" ref="0x7e1f1870" loc="70:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC_CCA" scoped="" ref="0x7e1f1870"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e1f1a48"/>
        <function-ref name="isInput" scoped="" ref="0x7e1f1b28"/>
        <function-ref name="toggle" scoped="" ref="0x7e1f1c08"/>
        <function-ref name="isOutput" scoped="" ref="0x7e1f1ce8"/>
        <function-ref name="get" scoped="" ref="0x7e1f1dc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e1f1ea8"/>
        <function-ref name="set" scoped="" ref="0x7e1f0010"/>
        <function-ref name="clr" scoped="" ref="0x7e1f00f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7e1f1240" loc="67:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x7e1f1240"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7e1f1418"/>
        <function-ref name="disable" scoped="" ref="0x7e1f14f8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7e1f15d8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7e1f16b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCATask" ref="0x7e1dfd70" loc="87:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCATask" scoped="" ref="0x7e1dfd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7e1de010"/>
        <function-ref name="runTask" scoped="" ref="0x7e1de0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7e1f2a78" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="HplCC2420InterruptsC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7e1f2a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120888"/>
            <typename><typedef-ref name="TMilli" ref="0x7f120a08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e1d3388"/>
        <function-ref name="fired" scoped="" ref="0x7e1d4798"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7e1d4d38"/>
        <function-ref name="isOneShot" scoped="" ref="0x7e1d4b58"/>
        <function-ref name="getdt" scoped="" ref="0x7e1d3748"/>
        <function-ref name="gett0" scoped="" ref="0x7e1d3568"/>
        <function-ref name="isRunning" scoped="" ref="0x7e1d4978"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7e1d40b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7e1d3068"/>
        <function-ref name="startOneShot" scoped="" ref="0x7e1d4338"/>
        <function-ref name="stop" scoped="" ref="0x7e1d45b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7e0439a8" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7e0439a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e043b80"/>
        <function-ref name="write" scoped="" ref="0x7e043c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7e050260" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7e050260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e050438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7e042270" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7e042270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e042448"/>
        <function-ref name="write" scoped="" ref="0x7e042528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7e040368" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7e040368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e040540"/>
        <function-ref name="write" scoped="" ref="0x7e040620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7e0430b8" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7e0430b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e043290"/>
        <function-ref name="write" scoped="" ref="0x7e043370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7e051190" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7e051190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e051368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7e050910" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7e050910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e050ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7e043de0" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7e043de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e042010"/>
        <function-ref name="write" scoped="" ref="0x7e0420f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7e0505b8" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7e0505b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e050790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7e042f18" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7e042f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e040108"/>
        <function-ref name="write" scoped="" ref="0x7e0401e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7e0514e8" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7e0514e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e0516c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7e0407a0" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7e0407a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7e040978"/>
        <function-ref name="writeDone" scoped="" ref="0x7e040a58"/>
        <function-ref name="write" scoped="" ref="0x7e040b38"/>
        <function-ref name="beginRead" scoped="" ref="0x7e040c18"/>
        <function-ref name="readDone" scoped="" ref="0x7e040cf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7e0434f0" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7e0434f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e043748"/>
        <function-ref name="write" scoped="" ref="0x7e043828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7e050c68" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7e050c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e050e40"/>
        <function-ref name="write" scoped="" ref="0x7e050f20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7e051840" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7e051840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e051a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e0526e8" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e0526e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e0528c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e0529a0"/>
        <function-ref name="request" scoped="" ref="0x7e052a80"/>
        <function-ref name="granted" scoped="" ref="0x7e052b60"/>
        <function-ref name="isOwner" scoped="" ref="0x7e052c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7e042ae0" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7e042ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e042cb8"/>
        <function-ref name="write" scoped="" ref="0x7e042d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7e0426a8" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7e0426a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e042880"/>
        <function-ref name="write" scoped="" ref="0x7e042960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7e052dc0" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7e052dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e051010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7e051ef0" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7e051ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e0500e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7e051b98" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7e051b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e051d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7e040e78" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7e040e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7e03f070"/>
        <function-ref name="writeDone" scoped="" ref="0x7e03f150"/>
        <function-ref name="write" scoped="" ref="0x7e03f230"/>
        <function-ref name="beginRead" scoped="" ref="0x7e03f310"/>
        <function-ref name="readDone" scoped="" ref="0x7e03f3f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7e1a1c50" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x7e1a1c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7e1a1e28"/>
        <function-ref name="writeDone" scoped="" ref="0x7e1a1f08"/>
        <function-ref name="write" scoped="" ref="0x7e1a0010"/>
        <function-ref name="beginRead" scoped="" ref="0x7e1a00f0"/>
        <function-ref name="readDone" scoped="" ref="0x7e1a01d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7e1a0600" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x7e1a0600"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e1a07d8"/>
        <function-ref name="write" scoped="" ref="0x7e1a08b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7e1a0ce0" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x7e1a0ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e1a0eb8"/>
        <function-ref name="write" scoped="" ref="0x7e19f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e1a12d0" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e1a12d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e1a14a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e1a1588"/>
        <function-ref name="request" scoped="" ref="0x7e1a1668"/>
        <function-ref name="granted" scoped="" ref="0x7e1a1748"/>
        <function-ref name="isOwner" scoped="" ref="0x7e1a1828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7e19f438" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x7e19f438"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e19f610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7e182c08" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
      <component-ref qname="CC2420SpiImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7e182c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e182de0"/>
        <function-ref name="sendDone" scoped="" ref="0x7e182ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7e199158" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
      <component-ref qname="CC2420SpiImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x7e199158"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7e199330"/>
        <function-ref name="writeDone" scoped="" ref="0x7e199410"/>
        <function-ref name="write" scoped="" ref="0x7e1994f0"/>
        <function-ref name="beginRead" scoped="" ref="0x7e1995d0"/>
        <function-ref name="readDone" scoped="" ref="0x7e1996b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7e193438" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
      <component-ref qname="CC2420SpiImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7e193438"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7e193610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7e198c40" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
      <component-ref qname="CC2420SpiImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7e198c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e198e18"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e198ef8"/>
        <function-ref name="request" scoped="" ref="0x7e197010"/>
        <function-ref name="granted" scoped="" ref="0x7e1970f0"/>
        <function-ref name="isOwner" scoped="" ref="0x7e1971d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7e199ae0" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
      <component-ref qname="CC2420SpiImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x7e199ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e199cb8"/>
        <function-ref name="write" scoped="" ref="0x7e199d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7e1981e8" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
      <component-ref qname="CC2420SpiImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x7e1981e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e1983c0"/>
        <function-ref name="write" scoped="" ref="0x7e1984a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7e194040" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
      <component-ref qname="CC2420SpiImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7e194040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7e194218"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7e1942f8"/>
        <function-ref name="led1On" scoped="" ref="0x7e1943d8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7e1944b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7e194598"/>
        <function-ref name="get" scoped="" ref="0x7e194678"/>
        <function-ref name="led1Off" scoped="" ref="0x7e194758"/>
        <function-ref name="led2Off" scoped="" ref="0x7e194ad8"/>
        <function-ref name="set" scoped="" ref="0x7e194838"/>
        <function-ref name="led0On" scoped="" ref="0x7e194918"/>
        <function-ref name="led2On" scoped="" ref="0x7e1949f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e19b7b0" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
      <component-ref qname="CC2420SpiImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e19b7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e19b988"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e19ba68"/>
        <function-ref name="request" scoped="" ref="0x7e19bb48"/>
        <function-ref name="granted" scoped="" ref="0x7e19bc28"/>
        <function-ref name="isOwner" scoped="" ref="0x7e19bd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7e1988c8" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiImplP.nc">
      <component-ref qname="CC2420SpiImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x7e1988c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e198aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7e151a80" loc="43:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiP.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7e151a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e151c58"/>
        <function-ref name="sendDone" scoped="" ref="0x7e151d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7e151748" loc="42:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiP.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7e151748"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7e151920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e152d28" loc="39:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiP.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e152d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e152f00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e151090" loc="40:/opt/tinyos-2.x/tos/platforms/homenet/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiP.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e151090"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e151268"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e151348"/>
        <function-ref name="request" scoped="" ref="0x7e151428"/>
        <function-ref name="granted" scoped="" ref="0x7e151508"/>
        <function-ref name="isOwner" scoped="" ref="0x7e1515e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7e13e4c0" loc="68:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7e13e4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e13e698"/>
        <function-ref name="sendDone" scoped="" ref="0x7e13e778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7e13e178" loc="67:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7e13e178"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7e13e350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e142dd0" loc="66:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e142dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e13e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e13eb78" loc="69:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e13eb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e13ed50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e13ee30"/>
        <function-ref name="request" scoped="" ref="0x7e13ef10"/>
        <function-ref name="granted" scoped="" ref="0x7e13d010"/>
        <function-ref name="isOwner" scoped="" ref="0x7e13d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7e1399d8" loc="79:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7e1399d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e139bb0"/>
        <function-ref name="sendDone" scoped="" ref="0x7e139c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x7e135500" loc="84:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x7e135500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e1356d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e1357b8"/>
        <function-ref name="request" scoped="" ref="0x7e135898"/>
        <function-ref name="granted" scoped="" ref="0x7e135978"/>
        <function-ref name="isOwner" scoped="" ref="0x7e135a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7e1396b0" loc="78:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7e1396b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7e139888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e139390" loc="77:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e139390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e139568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x7e11b998" loc="83:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x7e11b998"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7e11bb70"/>
        <function-ref name="sleep" scoped="" ref="0x7e135010"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7e11bd30"/>
        <function-ref name="dataReady" scoped="" ref="0x7e1350f0"/>
        <function-ref name="initMaster" scoped="" ref="0x7e11bef0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7e136010"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7e1360f0"/>
        <function-ref name="read" scoped="" ref="0x7e1361d0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7e1362b0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7e136390"/>
        <function-ref name="setClock" scoped="" ref="0x7e136470"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7e136550"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7e136630"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7e136790"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7e136870"/>
        <function-ref name="write" scoped="" ref="0x7e136950"/>
        <function-ref name="enableSpi" scoped="" ref="0x7e136a30"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7e136b10"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7e136bf0"/>
        <function-ref name="getClock" scoped="" ref="0x7e136cd0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7e136db0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7e11bc50"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7e11be10"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7e136e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e138100" loc="80:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e138100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e1382d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e1383b8"/>
        <function-ref name="request" scoped="" ref="0x7e138498"/>
        <function-ref name="granted" scoped="" ref="0x7e138578"/>
        <function-ref name="isOwner" scoped="" ref="0x7e138658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7e119010" loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7e119010"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7e1191e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7e135ba8" loc="85:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7e135ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7e135d80"/>
        <function-ref name="userId" scoped="" ref="0x7e135e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x7e0e10f0" loc="59:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x7e0e10f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7e0e12c8"/>
        <function-ref name="sleep" scoped="" ref="0x7e0e0710"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7e0e1488"/>
        <function-ref name="dataReady" scoped="" ref="0x7e0e07f0"/>
        <function-ref name="initMaster" scoped="" ref="0x7e0e1648"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7e0e1728"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7e0e1808"/>
        <function-ref name="read" scoped="" ref="0x7e0e18e8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7e0e19c8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7e0e1aa8"/>
        <function-ref name="setClock" scoped="" ref="0x7e0e1b88"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7e0e1c68"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7e0e1d48"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7e0e1ea8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7e0e0010"/>
        <function-ref name="write" scoped="" ref="0x7e0e00f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7e0e01d0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7e0e02b0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7e0e0390"/>
        <function-ref name="getClock" scoped="" ref="0x7e0e0470"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7e0e0550"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7e0e13a8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7e0e1568"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7e0e0630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x7e0d7808" loc="64:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x7e0d7808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e0d79e0"/>
        <function-ref name="isInput" scoped="" ref="0x7e0d7ac0"/>
        <function-ref name="toggle" scoped="" ref="0x7e0d7ba0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e0d7c80"/>
        <function-ref name="get" scoped="" ref="0x7e0d7d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e0d7e40"/>
        <function-ref name="set" scoped="" ref="0x7e0d7f20"/>
        <function-ref name="clr" scoped="" ref="0x7e0d6018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7e0d9508" loc="62:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x7e0d9508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e0d96e0"/>
        <function-ref name="isInput" scoped="" ref="0x7e0d97c0"/>
        <function-ref name="toggle" scoped="" ref="0x7e0d98a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7e0d9980"/>
        <function-ref name="get" scoped="" ref="0x7e0d9a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e0d9b40"/>
        <function-ref name="set" scoped="" ref="0x7e0d9c20"/>
        <function-ref name="clr" scoped="" ref="0x7e0d9d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x7e0dab20" loc="61:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x7e0dab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e0dacf8"/>
        <function-ref name="isInput" scoped="" ref="0x7e0dadd8"/>
        <function-ref name="toggle" scoped="" ref="0x7e0daeb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7e0d9010"/>
        <function-ref name="get" scoped="" ref="0x7e0d90f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e0d91d0"/>
        <function-ref name="set" scoped="" ref="0x7e0d92b0"/>
        <function-ref name="clr" scoped="" ref="0x7e0d9390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7e0da6c0" loc="58:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7e0da6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e0da898"/>
        <function-ref name="stop" scoped="" ref="0x7e0da978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x7e0d6190" loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x7e0d6190"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7e0d6368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x7e0dcdb8" loc="57:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x7e0dcdb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7e0db010"/>
        <function-ref name="sleep" scoped="" ref="0x7e0da470"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7e0db1d0"/>
        <function-ref name="dataReady" scoped="" ref="0x7e0da550"/>
        <function-ref name="initMaster" scoped="" ref="0x7e0db390"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7e0db470"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7e0db550"/>
        <function-ref name="read" scoped="" ref="0x7e0db630"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7e0db710"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7e0db7f0"/>
        <function-ref name="setClock" scoped="" ref="0x7e0db8d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7e0db9b0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7e0dba90"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7e0dbbf0"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7e0dbcd0"/>
        <function-ref name="write" scoped="" ref="0x7e0dbdb0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7e0dbe90"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7e0da010"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7e0da0f0"/>
        <function-ref name="getClock" scoped="" ref="0x7e0da1d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7e0da2b0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7e0db0f0"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7e0db2b0"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7e0da390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x7e0d9e78" loc="63:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x7e0d9e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e0d7070"/>
        <function-ref name="isInput" scoped="" ref="0x7e0d7150"/>
        <function-ref name="toggle" scoped="" ref="0x7e0d7230"/>
        <function-ref name="isOutput" scoped="" ref="0x7e0d7310"/>
        <function-ref name="get" scoped="" ref="0x7e0d73f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e0d74d0"/>
        <function-ref name="set" scoped="" ref="0x7e0d75b0"/>
        <function-ref name="clr" scoped="" ref="0x7e0d7690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7e097750" loc="76:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7e097750"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7e097938"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7e097a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7e05b030" loc="79:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7e05b030"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7e05b218"/>
        <function-ref name="configure" scoped="" ref="0x7e05b2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e097010" loc="75:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e097010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e0971f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e0972d8"/>
        <function-ref name="request" scoped="" ref="0x7e0973b8"/>
        <function-ref name="granted" scoped="" ref="0x7e097498"/>
        <function-ref name="isOwner" scoped="" ref="0x7e097578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7e097b58" loc="77:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7e097b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7e097d30"/>
        <function-ref name="userId" scoped="" ref="0x7e097e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7da5c200" loc="34:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7da5c200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7da5c3d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7da5c538" loc="35:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7da5c538"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7da5c710"/>
        <function-ref name="isEmpty" scoped="" ref="0x7da5c7f0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7da5c8d0"/>
        <function-ref name="dequeue" scoped="" ref="0x7da5c9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7da5bcb8" loc="54:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7da5bcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7da5bea0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7da5a010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7da5a610" loc="58:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7da5a610"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7da5a7f8"/>
        <function-ref name="configure" scoped="" ref="0x7da5a8d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7da5aa38" loc="59:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7da5aa38"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7da5ac10"/>
        <function-ref name="isEmpty" scoped="" ref="0x7da5acf0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7da5add0"/>
        <function-ref name="dequeue" scoped="" ref="0x7da5aeb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7da5b578" loc="53:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7da5b578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7da5b760"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7da5b840"/>
        <function-ref name="request" scoped="" ref="0x7da5b920"/>
        <function-ref name="granted" scoped="" ref="0x7da5ba00"/>
        <function-ref name="isOwner" scoped="" ref="0x7da5bae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7da5a150" loc="55:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7da5a150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7da5a328"/>
        <function-ref name="userId" scoped="" ref="0x7da5a408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7da58050" loc="71:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7da58050"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7da58228"/>
        <function-ref name="runTask" scoped="" ref="0x7da58308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7e0380b0" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7e0380b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e038288"/>
        <function-ref name="write" scoped="" ref="0x7e038368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7e03b880" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7e03b880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e03ba58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7e038920" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7e038920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e038af8"/>
        <function-ref name="write" scoped="" ref="0x7e038bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7e037ae0" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7e037ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e037cb8"/>
        <function-ref name="write" scoped="" ref="0x7e037d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7e03a7a0" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7e03a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e03a978"/>
        <function-ref name="write" scoped="" ref="0x7e03aa58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7e03c788" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7e03c788"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e03c960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7e03a010" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7e03a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e03a1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7e0384e8" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7e0384e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e0386c0"/>
        <function-ref name="write" scoped="" ref="0x7e0387a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7e03bbd8" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7e03bbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e03bdb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7e0376a8" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7e0376a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e037880"/>
        <function-ref name="write" scoped="" ref="0x7e037960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7e03cae0" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7e03cae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e03ccb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7e037f18" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7e037f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7e036108"/>
        <function-ref name="writeDone" scoped="" ref="0x7e0361e8"/>
        <function-ref name="write" scoped="" ref="0x7e0362c8"/>
        <function-ref name="beginRead" scoped="" ref="0x7e0363a8"/>
        <function-ref name="readDone" scoped="" ref="0x7e036488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7e03abd8" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7e03abd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e03ae30"/>
        <function-ref name="write" scoped="" ref="0x7e03af10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7e03a368" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7e03a368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e03a540"/>
        <function-ref name="write" scoped="" ref="0x7e03a620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7e03ce38" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7e03ce38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e03b050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7e03dd28" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7e03dd28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e03df00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e03c010"/>
        <function-ref name="request" scoped="" ref="0x7e03c0f0"/>
        <function-ref name="granted" scoped="" ref="0x7e03c1d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7e03c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7e037270" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7e037270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e037448"/>
        <function-ref name="write" scoped="" ref="0x7e037528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7e038d58" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7e038d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e037010"/>
        <function-ref name="write" scoped="" ref="0x7e0370f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7e03c430" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7e03c430"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e03c608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7e03b528" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7e03b528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e03b700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7e03b1d0" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7e03b1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e03b3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7e036608" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7e036608"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7e0367e0"/>
        <function-ref name="writeDone" scoped="" ref="0x7e0368c0"/>
        <function-ref name="write" scoped="" ref="0x7e0369a0"/>
        <function-ref name="beginRead" scoped="" ref="0x7e036a80"/>
        <function-ref name="readDone" scoped="" ref="0x7e036b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7e020488" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x7e020488"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e020660"/>
        <function-ref name="cancel" scoped="" ref="0x7e020740"/>
        <function-ref name="modify" scoped="" ref="0x7e020820"/>
        <function-ref name="sendDone" scoped="" ref="0x7e020900"/>
        <function-ref name="resendCCA" scoped="" ref="0x7e0209e0"/>
        <function-ref name="resend" scoped="" ref="0x7e020ac0"/>
        <function-ref name="sendCCA" scoped="" ref="0x7e020ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e030cf0" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e030cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e030ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7e020060" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7e020060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e020238"/>
        <function-ref name="stop" scoped="" ref="0x7e020318"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaBackoff" ref="0x7e020d10" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaBackoff" scoped="" ref="0x7e020d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="congestion" scoped="" ref="0x7e020ee8"/>
        <function-ref name="initial" scoped="" ref="0x7e01f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioTimeStamping" ref="0x7e01bbf8" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioTimeStamping" scoped="" ref="0x7e01bbf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioTimeStamping"/>
      </instance>
      <interface-functions>
        <function-ref name="transmittedSFD" scoped="" ref="0x7e01bdd0"/>
        <function-ref name="receivedSFD" scoped="" ref="0x7e01beb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7e0031f0" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7e0031f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e0033c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7e014010" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x7e014010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7e0141e8"/>
        <function-ref name="disable" scoped="" ref="0x7e0142c8"/>
        <function-ref name="captured" scoped="" ref="0x7e0143a8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7e014488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7e016860" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BackoffTimer" scoped="" ref="0x7e016860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120b70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f120cf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea06c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7e015bf0"/>
        <function-ref name="fired" scoped="" ref="0x7e0154b0"/>
        <function-ref name="startAt" scoped="" ref="0x7e0158b0"/>
        <function-ref name="isRunning" scoped="" ref="0x7e0156b0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7e015df0"/>
        <function-ref name="start" scoped="" ref="0x7e015010"/>
        <function-ref name="stop" scoped="" ref="0x7e0152b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7e0101b0" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7e0101b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e010408"/>
        <function-ref name="write" scoped="" ref="0x7e0104e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7e0175d0" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7e0175d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7e0177a8"/>
        <function-ref name="cancel" scoped="" ref="0x7e017888"/>
        <function-ref name="modify" scoped="" ref="0x7e017968"/>
        <function-ref name="sendDone" scoped="" ref="0x7e017a48"/>
        <function-ref name="resendCCA" scoped="" ref="0x7e017b28"/>
        <function-ref name="resend" scoped="" ref="0x7e017c08"/>
        <function-ref name="sendCCA" scoped="" ref="0x7e017ce8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7e010680" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7e010680"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7e010858"/>
        <function-ref name="write" scoped="" ref="0x7e010938"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7e003568" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7e003568"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e003740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7e013010" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7e013010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e0131e8"/>
        <function-ref name="isInput" scoped="" ref="0x7e0132c8"/>
        <function-ref name="toggle" scoped="" ref="0x7e0133a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7e013488"/>
        <function-ref name="get" scoped="" ref="0x7e013568"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e013648"/>
        <function-ref name="set" scoped="" ref="0x7e013728"/>
        <function-ref name="clr" scoped="" ref="0x7e013808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7dffe5b8" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x7dffe5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7dffe790"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7dffe870"/>
        <function-ref name="sfd" scoped="" ref="0x7dffe950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7e01dd98" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7e01dd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7e017010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7e012370" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7e012370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7e012548"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7e012628"/>
        <function-ref name="request" scoped="" ref="0x7e012708"/>
        <function-ref name="granted" scoped="" ref="0x7e0127e8"/>
        <function-ref name="isOwner" scoped="" ref="0x7e0128c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7e014620" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x7e014620"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e0147f8"/>
        <function-ref name="isInput" scoped="" ref="0x7e0148d8"/>
        <function-ref name="toggle" scoped="" ref="0x7e0149b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7e014a98"/>
        <function-ref name="get" scoped="" ref="0x7e014b78"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e014c58"/>
        <function-ref name="set" scoped="" ref="0x7e014d38"/>
        <function-ref name="clr" scoped="" ref="0x7e014e18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7e010ad0" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7e010ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e010ca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7e0139a0" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x7e0139a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7e013b78"/>
        <function-ref name="isInput" scoped="" ref="0x7e013c58"/>
        <function-ref name="toggle" scoped="" ref="0x7e013d38"/>
        <function-ref name="isOutput" scoped="" ref="0x7e013e18"/>
        <function-ref name="get" scoped="" ref="0x7e013ef8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7e012010"/>
        <function-ref name="set" scoped="" ref="0x7e0120f0"/>
        <function-ref name="clr" scoped="" ref="0x7e0121d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7dffeab8" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7dffeab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7dffec90"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7dffed70"/>
        <function-ref name="led1On" scoped="" ref="0x7dffee50"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7e001010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7e0010f0"/>
        <function-ref name="get" scoped="" ref="0x7e0011d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7e0012b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7e001630"/>
        <function-ref name="set" scoped="" ref="0x7e001390"/>
        <function-ref name="led0On" scoped="" ref="0x7e001470"/>
        <function-ref name="led2On" scoped="" ref="0x7e001550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7e017180" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7e017180"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7e017358"/>
        <function-ref name="stop" scoped="" ref="0x7e017438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaBackoff" ref="0x7e017e58" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaBackoff" scoped="" ref="0x7e017e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="congestion" scoped="" ref="0x7e016050"/>
        <function-ref name="initial" scoped="" ref="0x7e016130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeStamp" ref="0x7e0162d8" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStamp" scoped="" ref="0x7e0162d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioTimeStamping"/>
      </instance>
      <interface-functions>
        <function-ref name="transmittedSFD" scoped="" ref="0x7e0164b0"/>
        <function-ref name="receivedSFD" scoped="" ref="0x7e016590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7e012a60" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7e012a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7e012c38"/>
        <function-ref name="writeDone" scoped="" ref="0x7e012d18"/>
        <function-ref name="write" scoped="" ref="0x7e012df8"/>
        <function-ref name="beginRead" scoped="" ref="0x7e012ed8"/>
        <function-ref name="readDone" scoped="" ref="0x7e010010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7e010e40" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7e010e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7e003050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7dfa4900" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7dfa4900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dfa4ad8"/>
        <function-ref name="write" scoped="" ref="0x7dfa4bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7dfb0190" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7dfb0190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dfb0368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7dfa3190" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7dfa3190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dfa3368"/>
        <function-ref name="write" scoped="" ref="0x7dfa3448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7dfa12b0" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7dfa12b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dfa1488"/>
        <function-ref name="write" scoped="" ref="0x7dfa1568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7dfa4010" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7dfa4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dfa41e8"/>
        <function-ref name="write" scoped="" ref="0x7dfa42c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7dfb10b0" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7dfb10b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dfb1288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7dfb0840" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7dfb0840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dfb0a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7dfa4d38" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7dfa4d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dfa4f10"/>
        <function-ref name="write" scoped="" ref="0x7dfa3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7dfb04e8" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7dfb04e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dfb06c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7dfa3e38" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7dfa3e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dfa1050"/>
        <function-ref name="write" scoped="" ref="0x7dfa1130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7dfb1408" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7dfb1408"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dfb15e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7dfa16e8" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7dfa16e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7dfa18c0"/>
        <function-ref name="writeDone" scoped="" ref="0x7dfa19a0"/>
        <function-ref name="write" scoped="" ref="0x7dfa1a80"/>
        <function-ref name="beginRead" scoped="" ref="0x7dfa1b60"/>
        <function-ref name="readDone" scoped="" ref="0x7dfa1c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7dfa4448" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7dfa4448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dfa46a0"/>
        <function-ref name="write" scoped="" ref="0x7dfa4780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7dfb0b98" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7dfb0b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dfb0d70"/>
        <function-ref name="write" scoped="" ref="0x7dfb0e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7dfb1760" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7dfb1760"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dfb1938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7dfb2650" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7dfb2650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7dfb2828"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7dfb2908"/>
        <function-ref name="request" scoped="" ref="0x7dfb29e8"/>
        <function-ref name="granted" scoped="" ref="0x7dfb2ac8"/>
        <function-ref name="isOwner" scoped="" ref="0x7dfb2ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7dfa3a00" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7dfa3a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dfa3bd8"/>
        <function-ref name="write" scoped="" ref="0x7dfa3cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7dfa35c8" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7dfa35c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7dfa37a0"/>
        <function-ref name="write" scoped="" ref="0x7dfa3880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7dfb2d28" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7dfb2d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dfb2f00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7dfb1e10" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7dfb1e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dfb0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7dfb1ab8" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7dfb1ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7dfb1c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7dfa1dc0" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7dfa1dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7dfa0010"/>
        <function-ref name="writeDone" scoped="" ref="0x7dfa00f0"/>
        <function-ref name="write" scoped="" ref="0x7dfa01d0"/>
        <function-ref name="beginRead" scoped="" ref="0x7dfa02b0"/>
        <function-ref name="readDone" scoped="" ref="0x7dfa0390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7df9a780" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x7df9a780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7df9a958"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7df9aa38"/>
        <function-ref name="sfd" scoped="" ref="0x7df9ab18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7df9a010" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7df9a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7df9a1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7df9ac80" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7df9ac80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7df9ae58"/>
        <function-ref name="receive" scoped="" ref="0x7df99010"/>
        <function-ref name="getPayload" scoped="" ref="0x7df990f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7df9a358" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7df9a358"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7df9a530"/>
        <function-ref name="stop" scoped="" ref="0x7df9a610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7df94c18" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x7df94c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df94df0"/>
        <function-ref name="isInput" scoped="" ref="0x7df94ed0"/>
        <function-ref name="toggle" scoped="" ref="0x7df93010"/>
        <function-ref name="isOutput" scoped="" ref="0x7df930f0"/>
        <function-ref name="get" scoped="" ref="0x7df931d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df932b0"/>
        <function-ref name="set" scoped="" ref="0x7df93390"/>
        <function-ref name="clr" scoped="" ref="0x7df93470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7df81178" loc="85:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveDone_task" scoped="" ref="0x7df81178"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7df81350"/>
        <function-ref name="runTask" scoped="" ref="0x7df81430"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7df93608" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x7df93608"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df937e0"/>
        <function-ref name="isInput" scoped="" ref="0x7df938c0"/>
        <function-ref name="toggle" scoped="" ref="0x7df939a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7df93a80"/>
        <function-ref name="get" scoped="" ref="0x7df93b60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df93c40"/>
        <function-ref name="set" scoped="" ref="0x7df93d20"/>
        <function-ref name="clr" scoped="" ref="0x7df93e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7df95780" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x7df95780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7df95958"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7df95a38"/>
        <function-ref name="sfd" scoped="" ref="0x7df95b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7df91448" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7df91448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7df91620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7df94288" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7df94288"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7df94460"/>
        <function-ref name="isInput" scoped="" ref="0x7df94540"/>
        <function-ref name="toggle" scoped="" ref="0x7df94620"/>
        <function-ref name="isOutput" scoped="" ref="0x7df94700"/>
        <function-ref name="get" scoped="" ref="0x7df947e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7df948c0"/>
        <function-ref name="set" scoped="" ref="0x7df949a0"/>
        <function-ref name="clr" scoped="" ref="0x7df94a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7df95010" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7df95010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7df951e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7df95c80" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7df95c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7df95e58"/>
        <function-ref name="receive" scoped="" ref="0x7df94010"/>
        <function-ref name="getPayload" scoped="" ref="0x7df940f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7df92628" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7df92628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7df92800"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7df928e0"/>
        <function-ref name="request" scoped="" ref="0x7df929c0"/>
        <function-ref name="granted" scoped="" ref="0x7df92aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7df92b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7df92d18" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7df92d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7df92ef0"/>
        <function-ref name="writeDone" scoped="" ref="0x7df91010"/>
        <function-ref name="write" scoped="" ref="0x7df910f0"/>
        <function-ref name="beginRead" scoped="" ref="0x7df911d0"/>
        <function-ref name="readDone" scoped="" ref="0x7df912b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7df91b00" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7df91b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7df91d58"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7df91e38"/>
        <function-ref name="led1On" scoped="" ref="0x7df91f18"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7df90010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7df900f0"/>
        <function-ref name="get" scoped="" ref="0x7df901d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7df902b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7df90630"/>
        <function-ref name="set" scoped="" ref="0x7df90390"/>
        <function-ref name="led0On" scoped="" ref="0x7df90470"/>
        <function-ref name="led2On" scoped="" ref="0x7df90550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7df95358" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7df95358"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7df95530"/>
        <function-ref name="stop" scoped="" ref="0x7df95610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7df92010" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7df92010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7df921e8"/>
        <function-ref name="disable" scoped="" ref="0x7df922c8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7df923a8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7df92488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7df917c0" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7df917c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7df91998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7df539a8" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7df539a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7df53b80"/>
        <function-ref name="write" scoped="" ref="0x7df53c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7df54260" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7df54260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7df54438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7df51270" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7df51270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7df51448"/>
        <function-ref name="write" scoped="" ref="0x7df51528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7df50368" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7df50368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7df50540"/>
        <function-ref name="write" scoped="" ref="0x7df50620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7df530b8" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7df530b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7df53290"/>
        <function-ref name="write" scoped="" ref="0x7df53370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7df55190" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7df55190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7df55368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7df54910" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7df54910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7df54ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7df53de0" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7df53de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7df51010"/>
        <function-ref name="write" scoped="" ref="0x7df510f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7df545b8" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7df545b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7df54790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7df51f18" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7df51f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7df50108"/>
        <function-ref name="write" scoped="" ref="0x7df501e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7df554e8" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7df554e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7df556c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7df507a0" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7df507a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7df50978"/>
        <function-ref name="writeDone" scoped="" ref="0x7df50a58"/>
        <function-ref name="write" scoped="" ref="0x7df50b38"/>
        <function-ref name="beginRead" scoped="" ref="0x7df50c18"/>
        <function-ref name="readDone" scoped="" ref="0x7df50cf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7df534f0" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7df534f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7df53748"/>
        <function-ref name="write" scoped="" ref="0x7df53828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7df54c68" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7df54c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7df54e40"/>
        <function-ref name="write" scoped="" ref="0x7df54f20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7df55840" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7df55840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7df55a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7df56690" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7df56690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7df56868"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7df56948"/>
        <function-ref name="request" scoped="" ref="0x7df56a28"/>
        <function-ref name="granted" scoped="" ref="0x7df56b08"/>
        <function-ref name="isOwner" scoped="" ref="0x7df56be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7df51ae0" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7df51ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7df51cb8"/>
        <function-ref name="write" scoped="" ref="0x7df51d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7df516a8" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7df516a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7df51880"/>
        <function-ref name="write" scoped="" ref="0x7df51960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7df56d68" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7df56d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7df55010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7df55ef0" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7df55ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7df540e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7df55b98" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7df55b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7df55d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7df50e78" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7df50e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7df44070"/>
        <function-ref name="writeDone" scoped="" ref="0x7df44150"/>
        <function-ref name="write" scoped="" ref="0x7df44230"/>
        <function-ref name="beginRead" scoped="" ref="0x7df44310"/>
        <function-ref name="readDone" scoped="" ref="0x7df443f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7df35b38" loc="35:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7df35b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7df35d10"/>
        <function-ref name="rand32" scoped="" ref="0x7df35df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7df35288" loc="34:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7df35288"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7df358b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7df3a5f0" loc="33:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7df3a5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7df3a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7df31a00" loc="34:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7df31a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7df31bd8"/>
        <function-ref name="rand32" scoped="" ref="0x7df31cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7df31150" loc="33:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7df31150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7df31778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7df37d20" loc="32:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7df37d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7df37ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7df21968" loc="37:/opt/tinyos-2.x/tos/system/RandomMlcgP.nc">
      <component-ref qname="RandomMlcgP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7df21968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7df21b40"/>
        <function-ref name="rand32" scoped="" ref="0x7df21c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7df210b8" loc="36:/opt/tinyos-2.x/tos/system/RandomMlcgP.nc">
      <component-ref qname="RandomMlcgP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7df210b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7df216e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7df30c78" loc="35:/opt/tinyos-2.x/tos/system/RandomMlcgP.nc">
      <component-ref qname="RandomMlcgP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7df30c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7df30e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7df19c20" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7df19c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7df19df8"/>
        <function-ref name="getRssi" scoped="" ref="0x7df19ed8"/>
        <function-ref name="getPower" scoped="" ref="0x7df12010"/>
        <function-ref name="getLqi" scoped="" ref="0x7df120f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7df12290" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7df12290"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7df12468"/>
        <function-ref name="noAck" scoped="" ref="0x7df12548"/>
        <function-ref name="wasAcked" scoped="" ref="0x7df12628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7def93b8" loc="41:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="Ch8_Dimmer_181C.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7def93b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7def9590"/>
        <function-ref name="getPayload" scoped="" ref="0x7def9670"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7def9750"/>
        <function-ref name="cancel" scoped="" ref="0x7def9830"/>
        <function-ref name="sendDone" scoped="" ref="0x7def9910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7def9a50" loc="42:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="Ch8_Dimmer_181C.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7def9a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7def9c28"/>
        <function-ref name="payloadLength" scoped="" ref="0x7def9d08"/>
        <function-ref name="getPayload" scoped="" ref="0x7def9de8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7def9ec8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7dea1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7dea1150" loc="43:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="Ch8_Dimmer_181C.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7dea1150"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7dea1328"/>
        <function-ref name="address" scoped="" ref="0x7dea1408"/>
        <function-ref name="destination" scoped="" ref="0x7dea14e8"/>
        <function-ref name="setSource" scoped="" ref="0x7dea15c8"/>
        <function-ref name="setDestination" scoped="" ref="0x7dea16a8"/>
        <function-ref name="type" scoped="" ref="0x7dea1788"/>
        <function-ref name="setType" scoped="" ref="0x7dea1868"/>
        <function-ref name="isForMe" scoped="" ref="0x7dea1948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7dea1aa8" loc="44:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="Ch8_Dimmer_181C.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7dea1aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7dea1c80"/>
        <function-ref name="noAck" scoped="" ref="0x7dea1d60"/>
        <function-ref name="wasAcked" scoped="" ref="0x7dea1e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7da07118" loc="36:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="Ch8_Dimmer_181C.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7da07118"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7da072f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7da073d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7da074b0"/>
        <function-ref name="cancel" scoped="" ref="0x7da07590"/>
        <function-ref name="sendDone" scoped="" ref="0x7da07670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7da077e0" loc="38:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="Ch8_Dimmer_181C.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7da077e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7da079b8"/>
        <function-ref name="getPayload" scoped="" ref="0x7da07a98"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7da07b78"/>
        <function-ref name="cancel" scoped="" ref="0x7da07c58"/>
        <function-ref name="sendDone" scoped="" ref="0x7da07d38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7da07e78" loc="39:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="Ch8_Dimmer_181C.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7da07e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7da06070"/>
        <function-ref name="address" scoped="" ref="0x7da06150"/>
        <function-ref name="destination" scoped="" ref="0x7da06230"/>
        <function-ref name="setSource" scoped="" ref="0x7da06310"/>
        <function-ref name="setDestination" scoped="" ref="0x7da063f0"/>
        <function-ref name="type" scoped="" ref="0x7da064d0"/>
        <function-ref name="setType" scoped="" ref="0x7da065b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7da06690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7dedb8c0" loc="35:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7dedb8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7dedba98"/>
        <function-ref name="getPayload" scoped="" ref="0x7dedbb78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7dedbc58"/>
        <function-ref name="cancel" scoped="" ref="0x7dedbd38"/>
        <function-ref name="sendDone" scoped="" ref="0x7dedbe18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7ded7a28" loc="40:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7ded7a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ed94078"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ded7c10"/>
        <function-ref name="getPayload" scoped="" ref="0x7ded7cf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ded7dd0"/>
        <function-ref name="cancel" scoped="" ref="0x7ded7eb0"/>
        <function-ref name="sendDone" scoped="" ref="0x7deb0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7ded72b8" loc="38:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7ded72b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ded74a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ded7580"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ded7660"/>
        <function-ref name="cancel" scoped="" ref="0x7ded7740"/>
        <function-ref name="sendDone" scoped="" ref="0x7ded7820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7deb0a88" loc="42:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7deb0a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7deb0c60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7deb0d40"/>
        <function-ref name="getPayload" scoped="" ref="0x7deb0e20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7deb0f00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7dea5010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7dea5190" loc="143:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x7dea5190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7dea5368"/>
        <function-ref name="runTask" scoped="" ref="0x7dea5448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7deb0150" loc="41:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7deb0150"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7deb0328"/>
        <function-ref name="address" scoped="" ref="0x7deb0408"/>
        <function-ref name="destination" scoped="" ref="0x7deb04e8"/>
        <function-ref name="setSource" scoped="" ref="0x7deb05c8"/>
        <function-ref name="setDestination" scoped="" ref="0x7deb06a8"/>
        <function-ref name="type" scoped="" ref="0x7deb0788"/>
        <function-ref name="setType" scoped="" ref="0x7deb0868"/>
        <function-ref name="isForMe" scoped="" ref="0x7deb0948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7de9d030" loc="38:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="Ch8_Dimmer_181C.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7de9d030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7de9d208"/>
        <function-ref name="payloadLength" scoped="" ref="0x7de9d2e8"/>
        <function-ref name="getPayload" scoped="" ref="0x7de9d3c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7de9d4a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7de9d588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7de9eb38" loc="37:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="Ch8_Dimmer_181C.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7de9eb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x7de9ed10"/>
        <function-ref name="receive" scoped="" ref="0x7de9edf0"/>
        <function-ref name="getPayload" scoped="" ref="0x7de9eed0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7de9d6c8" loc="39:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="Ch8_Dimmer_181C.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7de9d6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7de9d8a0"/>
        <function-ref name="address" scoped="" ref="0x7de9d980"/>
        <function-ref name="destination" scoped="" ref="0x7de9da60"/>
        <function-ref name="setSource" scoped="" ref="0x7de9db40"/>
        <function-ref name="setDestination" scoped="" ref="0x7de9dc20"/>
        <function-ref name="type" scoped="" ref="0x7de9dd00"/>
        <function-ref name="setType" scoped="" ref="0x7de9dde0"/>
        <function-ref name="isForMe" scoped="" ref="0x7de9dec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="dimmer" ref="0x7de95780" loc="19:DimmerC.nc">
      <component-ref qname="DimmerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="dimmer" scoped="" ref="0x7de95780"/></type-interface>
      <instance>
        <interfacedef-ref qname="dimmer"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7de95958"/>
        <function-ref name="setLevel" scoped="" ref="0x7de95a38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7de83128" loc="21:DimmerP.nc">
      <component-ref qname="DimmerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7de83128"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120e58"/>
            <typename><typedef-ref name="TMicro" ref="0x7f112010"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7de83878"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DimmerINT" ref="0x7de91dd8" loc="20:DimmerP.nc">
      <component-ref qname="DimmerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DimmerINT" scoped="" ref="0x7de91dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7de90010"/>
        <function-ref name="disable" scoped="" ref="0x7de900f0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7de901d0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7de902b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="dimmer" ref="0x7de91980" loc="18:DimmerP.nc">
      <component-ref qname="DimmerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="dimmer" scoped="" ref="0x7de91980"/></type-interface>
      <instance>
        <interfacedef-ref qname="dimmer"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7de91b58"/>
        <function-ref name="setLevel" scoped="" ref="0x7de91c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7de77308" loc="31:/opt/tinyos-2.x/tos/platforms/homenet/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7de77308"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f120e58"/>
            <typename><typedef-ref name="TMicro" ref="0x7f112010"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7de77a58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7de78190" loc="9:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="DimmerC.IntDimm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7de78190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7de78368"/>
        <function-ref name="fired" scoped="" ref="0x7de78448"/>
        <function-ref name="disable" scoped="" ref="0x7de78528"/>
        <function-ref name="edge" scoped="" ref="0x7de78608"/>
        <function-ref name="enable" scoped="" ref="0x7de786e8"/>
        <function-ref name="getValue" scoped="" ref="0x7de787c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7de79ac0" loc="8:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="DimmerC.IntDimm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7de79ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7de79c98"/>
        <function-ref name="disable" scoped="" ref="0x7de79d78"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7de79e58"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7de78010"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="40:/opt/tinyos-2.x/tos/interfaces/Init.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/Init.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.1.2.13 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7ef43ed8" loc="51:/opt/tinyos-2.x/tos/interfaces/Init.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="39:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10;</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7ef517b8" loc="49:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="26:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x7ef227c8" loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea06c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x7ef22570" loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea06c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x7ef23268" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.&#10;</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x7ef23838" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10;</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea06c0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea06c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7ef235c0" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea06c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x7ef23e10" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10;</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea06c0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea06c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7ef23b90" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea06c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x7ef22208" loc="53:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10;</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="41:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.&#10;&#10;</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f230010" loc="46:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f2307f8" loc="61:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f230428" loc="54:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10;</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="44:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f210198" loc="56:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f2105a0" loc="64:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="57:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
      <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x7f0513c8" loc="59:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep. </short>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="42:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.1.2.11 2006/09/22 19:23:59 idgay Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7efe0028" loc="54:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f152338"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="38:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f001ee8" loc="44:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/tinyos-2.x/tos/interfaces/Read.nc">
      <documentation loc="49:/opt/tinyos-2.x/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.3 $ $Date: 2006/06/20 18:56:06 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7ee217d0" loc="49:/opt/tinyos-2.x/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7ee217d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7ee21c30" loc="55:/opt/tinyos-2.x/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.&#10; &#10;</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7ee203c0" loc="63:/opt/tinyos-2.x/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().&#10;&#10;</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7ee217d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7ee20010" loc="63:/opt/tinyos-2.x/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7ee20198" loc="63:/opt/tinyos-2.x/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7ee217d0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="47:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x7ed81588" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7ed94420"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7ed82c18" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7ed94420"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7ed82dc8" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ed81010" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7ed73010" loc="125:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="115:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.&#10;</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; The length of this region is maxPayloadLength(). This command&#10; behaves similarly to &#60;tt>Packet.getPayload&#60;/tt> (minus the&#10; length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ed74c68" loc="125:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7ed74920" loc="112:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="102:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7ed81cb8" loc="85:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ed818d0" loc="85:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7ed744d0" loc="99:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="87:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ed74030" loc="99:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7ed741b8" loc="99:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="45:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.1.2.13 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="payloadLength" ref="0x7ed635e0" loc="89:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
        <documentation loc="81:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This call is identical&#10; to &#60;TT>Packet.payloadLength&#60;/TT>, and is included in Receive as a&#10; convenience.&#10;&#10; @param  msg      the packet&#10; @return          the length of the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ed63360" loc="89:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receive" ref="0x7ed70700" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  msg      the receied packet&#10; @param  payload  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return          a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
              <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ed71e10" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7ed70010" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ed70198" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7ed63010" loc="79:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
          <short>&#10; Return point to a protocol's payload region in a packet. </short>
          <long>&#10; Return point to a protocol's payload region in a packet.  If len&#10; is not NULL, getPayload will return the length of the payload in&#10; it. This call is identical to &#60;TT>Packet.getPayload&#60;/TT>, and is&#10; included in Receive as a convenience.&#10;&#10; @param  msg      the packet&#10; @param  len      a pointer to where to store the payload length&#10; @return          a pointer to the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ed70a48" loc="79:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ed70bf0" loc="79:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="66:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
      <documentation loc="66:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface. </short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7ee01818" loc="88:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="81:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10;</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7ee01578" loc="88:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7ee00348" loc="110:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="104:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.&#10;&#10;</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7ee000f8" loc="110:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7ee01258" loc="79:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents. </short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if issuing the start command was successful&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7ee01d90" loc="102:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="90:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Stop the component and pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;</short>
          <long>&#10; Stop the component and pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10; Return values of SUCCESS will always result in a&#10; &#60;code>stopDone()&#60;/code> event being signalled.&#10;&#10; @return SUCCESS if issuing the stop command was successful&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="40:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <short>&#10; Constants for manipulating LEDs.&#10;&#10;</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7ee33720" loc="50:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7ee33af8" loc="56:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10;</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7ee33e68" loc="61:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7ee325e0" loc="72:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10;</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7ee310e8" loc="89:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10;</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x7ee31628" loc="106:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LED_LED0, LED_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7ee32208" loc="66:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x7ee31d00" loc="123:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="109:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask. </short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7ee31960" loc="123:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7ee333b0" loc="45:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7ee32950" loc="78:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7ee32cc0" loc="83:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="dimmer" loc="17:dimmer.nc">
      <function command="" provided="0" name="init" ref="0x7ed61a30" loc="18:dimmer.nc">
        <interfacedef-ref qname="dimmer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setLevel" ref="0x7ed61ec8" loc="19:dimmer.nc">
        <interfacedef-ref qname="dimmer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="d1" ref="0x7ed61d60" loc="19:dimmer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="42:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7ee622c8" loc="42:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7ee622c8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7ee52258" loc="125:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="121:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.&#10;</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea06c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0x7ee61650" loc="72:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7ee60690" loc="103:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="89:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea06c0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea06c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7ee60100" loc="103:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea06c0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7ee60290" loc="103:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea06c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7ee61db0" loc="87:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.&#10;</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7ee52a70" loc="140:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="135:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea06c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7ee52698" loc="133:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="127:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea06c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7ee61a20" loc="81:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7ee62980" loc="53:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea06c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7ee626d8" loc="53:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea06c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7ee60ee0" loc="118:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="105:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea06c0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea06c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7ee609b8" loc="118:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea06c0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7ee60b48" loc="118:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea06c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7ee61010" loc="62:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea06c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7ee62ca8" loc="62:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fea06c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7ee61318" loc="67:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="27:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <short>&#10;</short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7ece0b10" loc="33:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7ece0e28" loc="34:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7ece04e0" loc="31:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7ecd4480" loc="36:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x7ece07f8" loc="32:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7ecd4160" loc="35:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x7ece4ea0" loc="29:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="clr" ref="0x7ece01d0" loc="30:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="42:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7ea422d0" loc="42:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7ea422d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7ea42790" loc="50:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea06c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
      <documentation loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10;</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7ea21da0" loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7ea21da0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7ea21eb8" loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ea21eb8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7ea203b8" loc="53:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ea21eb8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7ea20b18" loc="65:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7ea207d8" loc="60:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits. </short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7ea20ee8" loc="71:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed. </short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10;</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7ea32cc8" loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7ea32cc8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7ea32de0" loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ea32de0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7ea26bf0" loc="98:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.&#10;</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ea32de0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0x7ea31ba8" loc="67:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7ea26878" loc="92:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ea32de0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ea32de0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7ea26350" loc="92:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ea32de0"/></type-var>
          </variable>
          <variable name="dt" ref="0x7ea264e0" loc="92:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ea32de0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7ea26010" loc="77:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7ea250a8" loc="105:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="100:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10;</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ea32de0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="start" ref="0x7ea314b8" loc="55:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ea32de0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7ea31220" loc="55:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ea32de0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7ea31870" loc="62:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10;</short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x7e9f46e0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short> Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f1015c0"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7f101810"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7e9f2720" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short> Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0e16f0"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7f0e1940"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7e9f4ef0" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short> Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0f03a8"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7f0f05f8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7e9f23c8" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0f03a8"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7f0f05f8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7e9f2260" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0f03a8"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7f0f05f8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7e9f2bd8" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0e16f0"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7f0e1940"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7e9f2a70" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0e16f0"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7f0e1940"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7e9f4b98" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f1015c0"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7f101810"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7e9f4a30" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f1015c0"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7f101810"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.&#10;</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7e9e6268" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e9e6268"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7e9e5d40" loc="65:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10;</short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0x7e9e5010" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x7e9e66e0" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.&#10;</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e9e6268"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="reset" ref="0x7e9e5348" loc="53:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7e9e3100" loc="71:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10;</short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x7e9e6c00" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.&#10;</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e9e6268"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7e9e6a20" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e9e6268"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7e9e5678" loc="56:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7e9e59a8" loc="59:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.  &#10;</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7ea05950" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7ea05950"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x7ea03a68" loc="89:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="test" ref="0x7ea033b0" loc="78:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10;</short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x7ea05db0" loc="52:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.&#10;</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7ea05950"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setScale" ref="0x7ea02010" loc="95:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="91:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.&#10;</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7ea03da8" loc="95:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x7ea023a8" loc="101:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.&#10;</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="reset" ref="0x7ea04940" loc="66:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7ea04608" loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7ea03740" loc="84:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10;</short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x7ea042c0" loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.&#10;</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7ea05950"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7ea04100" loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7ea05950"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7ea04c78" loc="69:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7ea03010" loc="72:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="SensirionSht11" loc="40:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11.nc">
        <short>&#10; SensirionSht11 is the rich interface to the Sensirion SHT11&#10; temperature/humidity sensor. &#10;&#10;</short>
        <long>&#10; SensirionSht11 is the rich interface to the Sensirion SHT11&#10; temperature/humidity sensor. &#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.2 $ $Date: 2006/06/20 18:56:05 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="measureHumidityDone" ref="0x7e810010" loc="84:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11.nc">
        <documentation loc="78:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11.nc">
          <short>&#10; Presents the result of a humidity measurement.&#10;&#10;</short>
          <long>&#10; Presents the result of a humidity measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the humidity reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7e812b70" loc="84:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7e812d00" loc="84:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="readStatusReg" ref="0x7e810408" loc="92:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11.nc">
        <documentation loc="86:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11.nc">
          <short>&#10; Reads the current contents of the SHT11 status and control&#10; register.</short>
          <long>&#10; Reads the current contents of the SHT11 status and control&#10; register. See the datasheet for interpretation of this register.&#10;&#10; @return SUCCESS if the read will be performed&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="measureHumidity" ref="0x7e812848" loc="76:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11.nc">
          <short>&#10; Starts a humidity measurement.&#10;&#10;</short>
          <long>&#10; Starts a humidity measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="measureTemperature" ref="0x7e813da0" loc="61:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11.nc">
          <short>&#10; Starts a temperature measurement.&#10;&#10;</short>
          <long>&#10; Starts a temperature measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="writeStatusReg" ref="0x7e808078" loc="109:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11.nc">
        <documentation loc="102:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11.nc">
          <short>&#10; Writes a new value to the SHT11 status and control register.&#10;&#10;</short>
          <long>&#10; Writes a new value to the SHT11 status and control register.&#10;&#10; @param val the new value to be written&#10;&#10; @return SUCCESS if the write will be performed&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7e810e08" loc="109:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7e813500" loc="47:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11.nc">
          <short>&#10; Resets the sensor.&#10;&#10;</short>
          <long>&#10; Resets the sensor.&#10;&#10; @return SUCCESS if the sensor will be reset&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="writeStatusRegDone" ref="0x7e8085b8" loc="116:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11.nc">
        <documentation loc="111:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11.nc">
          <short>&#10; Signals the completion of the status register write.&#10;&#10;</short>
          <long>&#10; Signals the completion of the status register write.&#10;&#10; @param result SUCCESS if the write was successful&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7e8083a0" loc="116:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readStatusRegDone" ref="0x7e810ae0" loc="100:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11.nc">
          <short>&#10; Presents the value of the status register.&#10;&#10;</short>
          <long>&#10; Presents the value of the status register.&#10;&#10; @param result SUCCESS if the read succeeded&#10; @param val the value of the register&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7e810730" loc="100:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7e8108b8" loc="100:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="resetDone" ref="0x7e813a18" loc="54:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11.nc">
          <short>&#10; Signals that the sensor has been reset.&#10;&#10;</short>
          <long>&#10; Signals that the sensor has been reset.&#10;&#10; @param result SUCCESS if the reset succeeded&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7e813820" loc="54:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="measureTemperatureDone" ref="0x7e8124c8" loc="69:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11.nc">
          <short>&#10; Presents the result of a temperature measurement.&#10;&#10;</short>
          <long>&#10; Presents the result of a temperature measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the temperature reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7e8120f8" loc="69:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7e812288" loc="69:/opt/tinyos-2.x/tos/sensorboards/homenet_sensor/sht11/SensirionSht11.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="67:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
      <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources. </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.1.2.10 $&#10; @date $Date: 2006/08/15 11:50:42 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7e8161d0" loc="101:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.&#10;&#10;</short>
          <long>&#10; Release a shared resource you previously acquired.&#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7e817a48" loc="87:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="request" ref="0x7e817618" loc="78:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="granted" ref="0x7e817d68" loc="92:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="89:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7e8165d8" loc="109:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="103:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="32:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.1.2.3 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7e7c6ae0" loc="57:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.&#10;&#10;</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disable" ref="0x7e7c6738" loc="50:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10;</short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7e7c6378" loc="43:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7e7c6050" loc="42:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10;</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7e733548" loc="45:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0x7e731240" loc="64:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disable" ref="0x7e7331f0" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="edge" ref="0x7e733ed8" loc="59:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.&#10;</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7e733c60" loc="59:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7e737e90" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7e733920" loc="52:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10;</short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10;</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7e721320" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="36:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10;</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.1.2.5 $&#10; @date $Date: 2006/08/15 11:50:42 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7e6c3b50" loc="43:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7e6c20e0" loc="51:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="44:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it. </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7e6b3298" loc="55:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.&#10;</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="configure" ref="0x7e6b7ea0" loc="49:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.&#10;</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceController" loc="40:/opt/tinyos-2.x/tos/interfaces/ResourceController.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/ResourceController.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10;</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $Revision: 1.1.2.4 $&#10; @date $Date: 2006/08/15 11:50:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7e6c0ce8" loc="56:/opt/tinyos-2.x/tos/interfaces/ResourceController.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/ResourceController.nc">
          <short>&#10; Release control of the resource&#10;&#10;</short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceController"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="requested" ref="0x7e6ba5d8" loc="73:/opt/tinyos-2.x/tos/interfaces/ResourceController.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/ResourceController.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceController"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="granted" ref="0x7e6c08b8" loc="46:/opt/tinyos-2.x/tos/interfaces/ResourceController.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/interfaces/ResourceController.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceController"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7e6ba120" loc="65:/opt/tinyos-2.x/tos/interfaces/ResourceController.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/ResourceController.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10; </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceController"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7e6baab0" loc="81:/opt/tinyos-2.x/tos/interfaces/ResourceController.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/interfaces/ResourceController.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceController"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="72:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="72:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter. </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7e6b63e0" loc="80:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.&#10;&#10;</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="userId" ref="0x7e6b67e0" loc="88:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="82:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.&#10; &#10;</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="35:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2006/08/15 11:50:42 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7e6a6ae8" loc="69:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a cleint id&#10;&#10;</short>
          <long>&#10; Enqueue a cleint id&#10;&#10; @param cleintId - the cleint id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7e6b5d70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7e6a68b0" loc="69:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7e6b5d70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7e6a7ad0" loc="43:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.&#10;&#10;</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7e6a6150" loc="52:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given cleint id has already been enqueued&#10; and is waiting to be processed.&#10;&#10;</short>
          <long>&#10; Check to see if a given cleint id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7e6b5d70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7e6a7e28" loc="52:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7e6b5d70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7e6a6560" loc="60:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the cleint id of the next resource in the queue. &#10;</short>
          <long>&#10; Retreive the cleint id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The cleint id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7e6b5d70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="45:/opt/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown. </short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7e657e28" loc="52:/opt/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource. </short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="65:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
      <documentation loc="65:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it. </short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7e6480f0" loc="73:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.&#10;&#10;</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7e648540" loc="82:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10;</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcConfig" loc="19:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
      <documentation loc="19:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10;</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x7e5f7830" loc="32:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="27:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10;</short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM128_ADC_VREF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7e5f7468" loc="25:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="20:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain channel.&#10;</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM128_ADC_SNGL_xxx&#10;   or ATM128_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x7e5f7bf8" loc="39:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain prescaler value.&#10;</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM128_ADC_PRESCALE_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="51:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
      <documentation loc="51:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1.2.3 $ $Date: 2006/06/20 18:56:06 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7e5eb350" loc="51:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7e5eb350"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7e5eb7d0" loc="57:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.&#10; &#10;</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7e5ebec0" loc="65:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().&#10;&#10;</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7e5eb350"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7e5ebb10" loc="65:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7e5ebc98" loc="65:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7e5eb350"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcMultiple" loc="68:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
      <documentation loc="68:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <short>&#10;&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10;&#10; from multiple channels using the ATmega128's free-running mode.&#10;&#10;</short>
        <long>&#10;&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10;&#10; from multiple channels using the ATmega128's free-running mode.&#10;&#10; &#60;p>&#10;&#10; Because of the possibility that samples may be imprecise after &#10;&#10; switching channels and/or reference voltages, and because there&#10;&#10; is a one sample delay on swithcing channels and reference voltages,&#10;&#10; Atm128ADCMultiple is complex. Two straightforward uses are:&#10;&#10; &#60;ol type=&#34;A&#34;>&#10;&#10; &#60;li>Acquire N samples from channel C:&#10;&#10;    &#60;ol>&#10;&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;&#10;       (note that the choice of prescalers is very limited, so you&#10;&#10;       don't have many choices for sampling rate)&#10;&#10;    &#60;li>ignore the first dataReady event&#10;&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;&#10;       on the last one&#10;&#10;    &#60;/ol>&#10;&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;&#10;    assumes that none of these channels are differential)&#10;&#10;    &#60;ol>&#10;&#10;    &#60;li>call getData to start sampling on channel C1&#10;&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;&#10;       *newChannel&#10;&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;&#10;       (the data from the first dataReady event is ignored)&#10;&#10;    &#60;/ol>&#10;&#10; &#60;/ol>&#10;&#10;&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10;&#10; @author David Gay&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7e5d5538" loc="91:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10;&#10; Initiates free-running ADC conversions, with the ability to switch &#10;&#10; channels and reference-voltage with a one sample delay.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Initiates free-running ADC conversions, with the ability to switch &#10;&#10; channels and reference-voltage with a one sample delay.&#10;&#10;&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;&#10;   be changed in the dataReady event, though these changes happen&#10;&#10;   with a one-sample delay (this is a hardware restriction).&#10;&#10; @param refVoltage Initial A/D reference voltage. See the&#10;&#10;   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,&#10;&#10;   the reference voltage can be changed in the dataReady event with&#10;&#10;   a one-sample delay.&#10;&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;&#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10;&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;&#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;&#10;  See the ATmega128 manual for details.&#10;&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;&#10;   imprecise (due to a change in reference voltage, or switching to a&#10;&#10;   differential input channel)&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7e5d69f8" loc="91:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x7e5d6b88" loc="91:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x7e5d6d28" loc="92:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x7e5d6eb8" loc="92:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7e5d4668" loc="110:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10;&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10;&#10; Returns the next sample in a free-running conversion. Allow the user&#10;&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10;&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10;&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;&#10;   (we assume that the second conversion after a change of reference&#10;&#10;   voltage or after switching to a differential channel is precise)&#10;&#10; @param channel Channel this sample was from.&#10;&#10; @param newChannel Change this parameter to switch to a new channel&#10;&#10;   for the second next sample.&#10;&#10; @param newRefVoltage Change this parameter to change the reference &#10;&#10;   voltage for the second next sample.&#10;&#10;&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e5d5a68" loc="110:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x7e5d5bf0" loc="110:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x7e5d5d78" loc="110:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x7e5d4010" loc="111:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x7e5d41c0" loc="111:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcSingle" loc="43:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
      <documentation loc="43:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <short>&#10;&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10;&#10; a single sample from a channel.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10;&#10; a single sample from a channel.&#10;&#10;&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10;&#10; @author David Gay&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7e5da3a0" loc="61:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10;&#10; Initiates an ADC conversion on a given channel.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Initiates an ADC conversion on a given channel.&#10;&#10;&#10;&#10; @param channel A/D conversion channel.&#10;&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;&#10;   the ATM128_ADC_VREF_xxx constants in Atm128ADC.h&#10;&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;&#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10;&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;&#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;&#10;  See the ATmega128 manual for details.&#10;&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;&#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;&#10;   differential input channel)&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7e5e0868" loc="61:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x7e5e09f8" loc="61:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x7e5e0b98" loc="62:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x7e5e0d28" loc="62:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7e5d93f0" loc="82:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10;&#10; Cancel an outstanding getData operation.</short>
          <long>&#10;&#10; Cancel an outstanding getData operation. Use with care, to&#10;&#10; avoid problems with races between the dataReady event and cancel.&#10;&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;&#10;   conversion was already complete. dataReady will be (or has&#10;&#10;   already been) signaled.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7e5dad58" loc="72:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10;&#10; Indicates a sample has been recorded by the ADC as the result&#10;&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Indicates a sample has been recorded by the ADC as the result&#10;&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10;&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10;&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e5da8b8" loc="72:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x7e5daa40" loc="72:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Adc" loc="39:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <short>&#10; HPL interface to the Atmega128 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega128 A/D conversion subsystem. Please see the&#10; Atmega128 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega128 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x7e5c0758" loc="105:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="102:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x7e5c4a60" loc="44:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10;</short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f132540"/>
            <typename><typedef-ref name="Atm128Admux_t" ref="0x7f1327f8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x7e5bb8d0" loc="131:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="126:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10;</short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM128_ADC_PRESCALE_xxx&#10;   values from Atm128Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7e5bb6b0" loc="131:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x7e5c0b58" loc="113:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="109:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is ADC enabled?&#10;</short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x7e5c2010" loc="73:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x7e5c3010" loc="49:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10;</short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f132540"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x7f1327f8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x7e5c4da8" loc="49:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f132540"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x7f1327f8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x7e5c2678" loc="82:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x7e5bb370" loc="124:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="119:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10;</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7e5bbdc8" loc="141:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="133:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x7e5c2340" loc="77:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x7e5c2cf0" loc="90:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="87:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x7e5c29b8" loc="86:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x7e5c00e8" loc="97:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x7e5c0f08" loc="118:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="114:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10;</short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x7e5c38e0" loc="60:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10;</short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1218f8"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7f121ce8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x7e5c36f8" loc="60:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1218f8"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7f121ce8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x7e5c0420" loc="101:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="98:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x7e5c33b0" loc="55:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10;</short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1218f8"/>
            <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7f121ce8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7e5c3c78" loc="66:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10;</short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7e5ba2f0" loc="147:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="143:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; A/D interrupt occured&#10;</short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e5ba120" loc="147:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="65:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="65:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface. </short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7e5c7128" loc="73:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.&#10;&#10;</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7e5c7598" loc="82:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10;</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ZigbexBusAdc" loc="27:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusAdc.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusAdc.nc">
        <short>***************************************************************************</short>
      </documentation>
      <function command="" provided="0" name="getChannel" ref="0x7e4f1118" loc="31:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusAdc.nc">
        <documentation loc="28:/opt/tinyos-2.x/tos/platforms/homenet/ZigbexBusAdc.nc">
          <short>&#10; Return the A/D channel number to use for one of the ADCn pins.&#10;</short>
        </documentation>
        <interfacedef-ref qname="ZigbexBusAdc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="44:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
      <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7e484010" loc="54:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet. </short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  msg    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e485ce0" loc="54:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7e484680" loc="67:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  msg    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e484360" loc="67:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7e483ca8" loc="108:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="97:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet. </short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.  If&#10; len is not NULL, getPayload will return the length of the payload&#10; in it, which is the same as the return value from&#10; payloadLength(). If a protocol does not support variable length&#10; packets, then *len is equal to maxPayloadLength().&#10;&#10; @param msg   the packet&#10; @param len   pointer to where the current payload length should be stored.&#10; @return      a pointer to the packet's data payload for this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e483750" loc="108:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e4838f8" loc="108:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7e483408" loc="95:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7e484f00" loc="83:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param msg   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e4849d0" loc="83:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e484b58" loc="83:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="33:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10;</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7e475010" loc="48:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10;</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param msg - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e481c30" loc="48:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7e4756a8" loc="60:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10;</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param msg - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e475378" loc="60:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7e475d38" loc="74:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10;</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param msg - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e475a18" loc="74:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="50:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
      <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="source" ref="0x7e47c8e8" loc="77:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.&#10;</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param amsg  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7ed94420"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7e47c668" loc="77:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7e480d10" loc="57:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.&#10;</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7ed94420"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="destination" ref="0x7e47c318" loc="67:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.&#10;</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param amsg    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7ed94420"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7e47c088" loc="67:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7e47bbb8" loc="110:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet. </short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  amsg   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7ed94420"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7e47b5c8" loc="110:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7e47b758" loc="110:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7ed94420"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7e47b280" loc="92:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet. </short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  amsg   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7ed94420"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7e47cc30" loc="92:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7e47cdc0" loc="92:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7ed94420"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7e47a8a8" loc="136:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="127:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.&#10;</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  amsg   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7ed94078"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7e47a660" loc="136:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7e479240" loc="151:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet. </short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  amsg    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7ed94078"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7e47abe8" loc="151:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7e47ad70" loc="151:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7ed94078"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7e47a318" loc="125:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="112:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  amsg   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7e47bf00" loc="125:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.2 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7e469de8" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7e469a30" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7e469bb8" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7e4683f8" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7feb09c0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7e468190" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7e4696c8" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.&#10;&#10;</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7e4694d8" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7e4689d0" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7e468760" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="44:/opt/tinyos-2.x/tos/interfaces/Send.nc">
      <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.1.2.13 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7e45cb00" loc="64:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   msg     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e45c468" loc="64:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e45c5f0" loc="64:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7e45a518" loc="114:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="104:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.&#10;</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; The length of this region is maxPayloadLength(). This command&#10; behaves similarly to &#60;tt>Packet.getPayload&#60;/tt> (minus the&#10; length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param   msg    the packet&#10; @return         a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e45a1f8" loc="114:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7e45be98" loc="101:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7e45b250" loc="78:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="66:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   msg    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e45ce48" loc="78:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7e45ba48" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param msg   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7e45b598" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7e45b720" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.6 $ $Date: 2006/06/20 18:56:05 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7e4190e0" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
          <short>&#10; Send a message with CCA disabled.&#10;&#10;</short>
          <long>&#10; Send a message with CCA disabled.&#10;&#10; @param p_msg message to send.&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7e41ae80" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7e419c20" loc="77:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
        <documentation loc="72:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.&#10;&#10;</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="modify" ref="0x7e417cf0" loc="96:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
        <documentation loc="87:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7e4176f0" loc="96:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7e417898" loc="96:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e417a20" loc="96:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7e4173b0" loc="85:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10;</short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7e417010" loc="85:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7e417198" loc="85:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resendCCA" ref="0x7e4194b0" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
          <short>&#10; Send the previous message again with CCA enabled.&#10;&#10;</short>
          <long>&#10; Send the previous message again with CCA enabled.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="resend" ref="0x7e419878" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
          <short>&#10; Send the previous message again with CCA disabled.&#10;&#10;</short>
          <long>&#10; Send the previous message again with CCA disabled.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="sendCCA" ref="0x7e41ab18" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
          <short>&#10; Send a message with CCA enabled.&#10;&#10;</short>
          <long>&#10; Send a message with CCA enabled.&#10;&#10; @param p_msg message to send.&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7e41a900" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="29:/opt/tinyos-2.x/tos/interfaces/Random.nc">
      <documentation loc="29:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10;</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7e410518" loc="41:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number. &#10;</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7e410160" loc="35:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number. &#10;</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fea06c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.2 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7e41ec08" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7e41dab0" loc="97:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
          <short>&#10; Disable RX.&#10;&#10;</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7e41d730" loc="90:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
          <short>&#10; Enable RX.&#10;&#10;</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7e41e128" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7e41e810" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.&#10;&#10;</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7e41d010" loc="76:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7e41d3b0" loc="83:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
        <documentation loc="78:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
          <short>&#10; Stop the oscillator.&#10;&#10;</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7e41e478" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaBackoff" loc="29:/opt/tinyos-2.x/tos/interfaces/CsmaBackoff.nc">
      <documentation loc="29:/opt/tinyos-2.x/tos/interfaces/CsmaBackoff.nc">
        <short>&#10; Interface for MAC Backoff values from the radio stack.&#10;</short>
        <long>&#10; Interface for MAC Backoff values from the radio stack.&#10; Allows application to change the backoff on a per packet basis.&#10; Only used if congestion control is enabled.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function event="" provided="0" name="congestion" ref="0x7e414d60" loc="43:/opt/tinyos-2.x/tos/interfaces/CsmaBackoff.nc">
        <documentation loc="38:/opt/tinyos-2.x/tos/interfaces/CsmaBackoff.nc">
          <short>&#10; Return backoff time after message m could not be send due to congestion.&#10;</short>
          <long>&#10; Return backoff time after message m could not be send due to congestion.&#10; The units are raio dependent.&#10; @return Backoff time after congestion&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7e414b10" loc="43:/opt/tinyos-2.x/tos/interfaces/CsmaBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="initial" ref="0x7e414798" loc="36:/opt/tinyos-2.x/tos/interfaces/CsmaBackoff.nc">
        <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/CsmaBackoff.nc">
          <short>&#10; Return initial backoff time before attempting to send message m.</short>
          <long>&#10; Return initial backoff time before attempting to send message m. The&#10; units are radio dependent.&#10; @return Initial backoff time&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x7e414560" loc="36:/opt/tinyos-2.x/tos/interfaces/CsmaBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
      <documentation loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.6 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="syncDone" ref="0x7e3e8498" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7e3e8330" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7e3e8c48" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7e3e8ae0" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7e3e64a0" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7e3e6338" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7e3e6c60" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7e3e6af8" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7e3e6010" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="sync" ref="0x7e3e8010" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7e3e87c0" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
          <short>&#10; Change the channel of the radio.&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7e3e67d0" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Register.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.1.2.4 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7e3d3af8" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Register.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.&#10;&#10;</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7edf1320"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e3d38d8" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7e3d20e0" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Register.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.&#10; &#10;</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7edf1320"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e3d3e48" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="36:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Strobe.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.&#10;</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.1.2.3 $ $Date: 2006/06/20 18:56:05 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7e3cecd0" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Strobe.nc">
        <documentation loc="38:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7edf1320"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.8 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7e3d65d8" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7edf1320"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7e3d6010" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7e3d61b8" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7e3d6340" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7e3d6ee8" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7edf1320"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7e3d6920" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7e3d6ac8" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7e3d6c50" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10;</short>
        <long>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7e381528" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short> Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f082700"/>
            <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x7f082950"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setCtrlCapture" ref="0x7e3834d0" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0b19f8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x7f0b1c48"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7e383368" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0b19f8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x7f0b1c48"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7e383ce0" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short> Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f090558"/>
            <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x7f0907a8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getCtrlCompare" ref="0x7e384430" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short> Timer control registers: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0c2b78"/>
            <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x7f0c2dc8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7e3811d0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f090558"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x7f0907a8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7e381068" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f090558"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x7f0907a8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7e3819e0" loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f082700"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x7f082950"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7e381878" loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f082700"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x7f082950"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlClock" ref="0x7e384a98" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0b0ae0"/>
            <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x7f0b0d30"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getCtrlCapture" ref="0x7e384768" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0b19f8"/>
            <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x7f0b1c48"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setCtrlCompare" ref="0x7e383010" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0c2b78"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x7f0c2dc8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7e384df0" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0c2b78"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x7f0c2dc8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlClock" ref="0x7e383988" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0b0ae0"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x7f0b0d30"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7e383820" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f0b0ae0"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x7f0b0d30"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.&#10;</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7e37e420" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e37e420"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x7e37b8f8" loc="79:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.&#10;</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x7e37b710" loc="79:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7e37b050" loc="67:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10;</short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x7e37e890" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.&#10;</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e37e420"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="captured" ref="0x7e37d300" loc="51:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.&#10;</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e37e420"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7e37d120" loc="51:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e37e420"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7e37d638" loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7e37b3d8" loc="73:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10;</short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x7e37edb8" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.&#10;</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e37e420"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7e37ebd0" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7e37e420"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7e37d968" loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x7e37dc98" loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="35:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.1.2.13 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7e2134b0" loc="43:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disable" ref="0x7e213d18" loc="55:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.&#10;</short>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="captured" ref="0x7e2139e8" loc="50:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.&#10;&#10;</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7e2137f8" loc="50:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7e213188" loc="42:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.&#10;&#10;</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10;</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.7 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7e1b5198" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e1b6d00" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7e1b6e88" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7e1b4b90" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
        <documentation loc="84:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.&#10;&#10;</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e1b4610" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7e1b4798" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7e1b4920" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7e1b42b0" loc="82:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7edf1320"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e1b5dd0" loc="82:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7e1b4010" loc="82:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7e1b6998" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7edf1320"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e1b6568" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7e1b66f0" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7e1b5a68" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.&#10;&#10;</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e1b54f8" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7e1b5680" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7e1b5808" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="43:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
      <documentation loc="43:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus. </short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.1.2.1 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7e191f18" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.&#10;&#10;</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param txBuf A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param rxBuf A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7e1917f8" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7e1919a0" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e191b30" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7e182a90" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.&#10;&#10;</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param txBuf The buffer used for transmission&#10; @param rxBuf The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7e182290" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7e182438" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7e1825c8" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7e182760" loc="72:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="27:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7e1932c0" loc="34:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <documentation loc="29:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10;</short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7e193088" loc="34:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="61:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x7e122010" loc="69:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode. </short>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x7e11e920" loc="109:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x7e11f0f0" loc="100:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x7e11edd8" loc="111:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x7e11ec70" loc="111:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x7e130be0" loc="66:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode. </short>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x7e11fd70" loc="105:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x7e11fc08" loc="105:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7e1205e0" loc="96:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x7e120478" loc="96:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7e1226c0" loc="80:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10;</short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x7e11b7e8" loc="125:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7e11b680" loc="125:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7e120908" loc="97:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setClock" ref="0x7e11c5e8" loc="114:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x7e11c480" loc="114:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7e11cc30" loc="120:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x7e11e5f8" loc="108:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x7e11e490" loc="108:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x7e11b338" loc="124:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x7e11f5a0" loc="102:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x7e11f438" loc="102:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7e122bc8" loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10;</short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e1229f8" loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7e120db0" loc="99:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x7e120c48" loc="99:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x7e11e140" loc="106:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x7e11c140" loc="112:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getClock" ref="0x7e11c908" loc="115:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7e11b010" loc="122:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x7e11f8c0" loc="103:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2513e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7e122350" loc="72:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus. </short>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7e120138" loc="92:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete. &#10;</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7e122f08" loc="92:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioTimeStamping" loc="33:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
        <short>&#10; Interface for receiving time stamp information from the radio.&#10;</short>
        <long>&#10; Interface for receiving time stamp information from the radio.&#10; This information is also embedded in packet metadata.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   October 10 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="transmittedSFD" ref="0x7e01b3c8" loc="39:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
          <short> &#10; Provides the time at which start of frame delimiter has been&#10; transmitted: units are in terms of a 32kHz clock.&#10;</short>
        </documentation>
        <interfacedef-ref qname="RadioTimeStamping"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7e01b030" loc="39:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
            </type-int>
          </variable>
          <variable name="p_msg" ref="0x7e01b1e0" loc="39:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedSFD" ref="0x7e01ba80" loc="50:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
          <short> &#10; Provides the time at which start of frame delimiter was received:&#10; units are in terms of a 32kHz clock. </short>
          <long> &#10; Provides the time at which start of frame delimiter was received:&#10; units are in terms of a 32kHz clock.  &#60;b>NOTE&#60;/b> that receiving&#10; a receivedSFD() event does NOT mean that a packet will be&#10; received; the transmission may stop, become corrupted, or be&#10; filtered by the physical or link layers.  The number of rxSFD&#10; events will always be great than or equal to the number of&#10; Receive message events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioTimeStamping"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7e01b710" loc="50:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1.2.5 $ $Date: 2006/06/20 18:56:04 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7dffe440" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.&#10;&#10;</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7dffe068" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feb0bd0"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7dffe218" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:46" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ed838d8"/>
                <typename><typedef-ref name="message_t" ref="0x7ed82288"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7dfffd10" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7dfff950" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.&#10;&#10;</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7dfff750" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420Receive.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fea0238"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="42:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.1.2.13 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7df36920" loc="42:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7df36920"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7df35030" loc="53:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f212df0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7df36920"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7df36d20" loc="53:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7df36920"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="48:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
      <documentation loc="48:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10;</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7de826d8" loc="48:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7de826d8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7de827f0" loc="48:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7de827f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7de82e50" loc="55:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7de827f0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7de82c18" loc="55:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7de827f0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
